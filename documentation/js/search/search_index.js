var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,0.61,1,1.322]],["body/components/AboutPage.html",[0,0.897,1,2.112,2,1.814,3,0.135,4,0.095,5,1.354,6,1.354,7,1.354,8,1.354,9,0.086,10,3.381,11,2.372,12,2.294,13,1.118,14,2.799,15,2.865,16,1.814,17,6.326,18,1.814,19,5.446,20,0.275,21,1.1,22,3.323,23,1.278,24,1.017,25,3.843,26,3.843,27,0.68,28,0.01,29,1.061,30,0.31,31,0.36,32,0.095,33,0.275,34,5.446,35,2.939,36,5.446,37,5.446,38,5.446,39,5.446,40,5.446,41,5.446,42,5.446,43,4.791,44,3.448,45,4.791,46,4.36,47,3.567,48,2.425,49,5.446,50,4.36,51,2.63,52,6.326,53,2.874,54,2.715,55,2.667,56,1.851,57,4.36,58,2.569,59,2.346,60,2.924,61,2.173,62,1.674,63,2.817,64,3.211,65,3.64,66,3.448,67,2.736,68,2.425,69,3.087,70,3.075,71,2.952,72,2.083,73,5.566,74,1.615,75,2.585,76,2.514,77,2.849,78,2.667,79,3.383,80,1.434,81,1.523,82,2.083,83,2.387,84,2.387,85,2.849,86,3.381,87,3.843,88,2.387,89,3.843,90,3.293,91,1.674,92,2.387,93,2.728,94,2.083,95,3.782,96,3.843,97,2.387,98,2.668,99,2.452,100,2.835,101,2.835,102,3.381,103,2.083,104,3.781,105,4.36,106,2.387,107,2.667,108,2.667,109,3.076,110,3.076,111,1.925,112,1.925,113,0.907,114,1.814,115,1.148,116,1.354,117,0.636,118,1.354,119,1.179,120,1.354,121,1.212,122,1.354,123,1.148,124,1.354,125,1.212,126,1.354,127,1.212,128,1.089,129,2.56,130,1.212,131,1.354,132,1.212,133,1.672,134,1.212,135,1.919,136,1.179,137,1.354,138,1.212,139,1.089,140,1.179,141,1.354,142,1.179,143,1.316,144,1.919,145,1.179,146,1.354,147,1.212,148,1.089,149,1.179,150,1.354,151,1.179,152,0.976,153,1.354,154,1.179,155,1.179,156,1.354,157,1.212,158,1.354,159,1.212,160,1.585,161,1.179,162,1.148,163,1.148,164,1.212,165,1.179,166,1.354,167,1.179,168,1.316,169,1.354,170,0.006,171,0.006]],["title/modules/AboutPageModule.html",[172,1.128,173,3.192]],["body/modules/AboutPageModule.html",[1,2.635,3,0.151,4,0.151,9,0.136,28,0.01,30,0.702,31,0.572,32,0.151,33,0.436,113,1.441,170,0.008,171,0.008,172,1.598,173,6.58,174,2.212,175,2.418,176,3.575,177,2.747,178,2.493,179,2.346,180,5.368,181,5.368,182,5.368,183,5.96,184,3.621,185,3.325,186,2.658,187,2.212,188,6.101,189,2.926,190,2.926,191,4.586,192,3.61,193,4.835,194,2.658,195,4.369,196,2.09,197,3.45,198,5.368,199,3.176]],["title/modules/AboutPageRoutingModule.html",[172,1.128,183,2.989]],["body/modules/AboutPageRoutingModule.html",[0,0.894,1,2.312,3,0.156,4,0.156,9,0.141,28,0.01,30,0.674,31,0.591,32,0.156,33,0.451,113,1.489,170,0.008,171,0.008,172,1.652,174,2.287,175,2.499,176,2.84,177,2.84,178,2.578,179,2.896,183,6.006,184,3.649,185,3.392,186,2.747,187,2.287,189,2.985,190,2.985,198,5.549,199,3.283,200,6.307,201,6.307,202,6.307,203,3.567,204,4.034,205,4.26,206,2.16,207,1.696,208,1.885,209,3.732]],["title/guards/AdminGuard.html",[210,3.447,211,3.192]],["body/guards/AdminGuard.html",[3,0.128,4,0.128,9,0.115,11,2.253,20,0.37,21,1.346,23,1.572,24,1.243,27,1.179,28,0.01,30,0.628,31,0.485,32,0.128,33,0.37,47,4.361,51,3.215,117,0.67,139,1.887,152,0.798,170,0.007,171,0.007,206,1.772,211,5.766,212,4.141,213,4.55,214,7.08,215,3.591,216,3.432,217,4.176,218,5.172,219,1.277,220,0.456,221,1.117,222,1.243,223,3.94,224,4.361,225,6.226,226,4.55,227,6.842,228,4.659,229,6.842,230,5.172,231,5.859,232,3.94,233,6.213,234,6.842,235,5.587,236,4.398,237,4.623,238,5.859,239,5.859,240,5.859,241,5.399,242,5.859,243,2.74,244,4.358,245,2.832,246,6.842,247,1.7,248,2.41,249,1.428,250,5.172,251,2.497,252,2.329,253,2.114,254,1.837,255,1.745,256,5.172,257,3.591,258,2.143,259,5.172,260,5.172,261,4.141,262,4.55,263,5.859,264,4.55,265,2.114]],["title/components/AdminPage.html",[0,0.61,119,1.322]],["body/components/AdminPage.html",[0,0.858,1,0.77,2,1.318,3,0.062,4,0.062,5,0.884,6,0.884,7,0.884,8,0.884,9,0.135,11,1.724,12,1.776,13,0.73,14,2.677,15,2.731,16,1.318,18,1.318,20,0.179,21,0.8,22,2.685,23,0.8,24,1.461,27,1.27,28,0.01,29,1.67,30,0.563,31,0.235,32,0.062,33,0.179,35,1.905,48,1.394,53,1.776,54,2.073,56,1.064,58,1.477,59,1.958,60,2.44,61,1.419,62,1.724,63,1.829,64,2.326,67,1.776,68,1.726,69,2.259,70,1.941,72,1.36,74,1.01,75,2.002,76,0.813,79,3.043,80,1.477,81,0.995,98,2.066,99,1.13,103,1.36,104,1.742,113,0.593,114,1.318,115,0.75,116,0.884,117,0.787,118,0.884,119,1.707,120,0.884,121,0.792,122,0.884,123,0.75,124,0.884,125,0.792,126,0.884,127,0.792,128,1.907,129,2.132,130,0.792,131,0.884,132,0.792,133,1.215,134,0.792,135,1.394,136,0.77,137,0.884,138,0.792,139,0.711,140,0.77,141,0.884,142,0.77,143,0.86,144,1.394,145,0.77,146,0.884,147,0.792,148,0.711,149,0.77,150,0.884,151,0.77,152,1.315,153,0.884,154,0.77,155,0.77,156,0.884,157,0.792,158,0.884,159,0.792,160,1.151,161,0.77,162,0.75,163,1.662,164,0.792,165,0.77,166,0.884,167,0.77,168,0.86,169,0.884,170,0.004,171,0.004,206,0.86,207,2.127,217,2.921,219,1.29,220,0.536,221,1.128,222,1.2,235,3.401,236,4.517,243,1.726,245,0.965,248,1.17,249,0.693,254,1.589,255,1.684,257,1.742,258,1.151,261,2.009,265,2.002,266,2.208,267,4.899,268,3.957,269,0.529,270,4.31,271,3.957,272,4.899,273,1.504,274,3.86,275,3.957,276,3.481,277,2.996,278,5.56,279,3.957,280,3.481,281,3.957,282,3.168,283,2.51,284,3.805,285,4.899,286,3.145,287,4.31,288,3.454,289,3.957,290,3.957,291,2.51,292,3.957,293,1.664,294,7.91,295,2.934,296,6.428,297,3.804,298,3.957,299,3.957,300,1.222,301,3.22,302,3.957,303,3.168,304,2.51,305,2.785,306,3.168,307,2.934,308,3.308,309,2.934,310,3.168,311,4.892,312,4.451,313,3.86,314,2.747,315,3.957,316,3.957,317,3.957,318,3.957,319,2.06,320,2.51,321,3.168,322,2.747,323,2.934,324,3.957,325,4.486,326,2.51,327,3.957,328,5.56,329,5.56,330,2.208,331,2.51,332,2.747,333,2.342,334,1.248,335,2.458,336,1.151,337,2.342,338,3.957,339,3.957,340,2.51,341,2.342,342,2.591,343,3.957,344,2.51,345,3.481,346,2.342,347,2.06,348,3.481,349,2.51,350,2.747,351,2.06,352,3.641,353,2.138,354,1.599,355,2.725,356,2.51,357,0.935,358,1.559,359,2.51,360,2.51,361,2.51,362,2.51,363,2.51,364,2.009,365,2.009,366,1.17,367,1.742,368,1.861,369,1.644,370,1.742,371,2.51,372,2.51,373,2.51,374,2.51,375,2.51,376,2.51,377,2.009,378,2.51,379,3.957,380,2.51,381,2.208,382,3.481,383,3.957,384,2.552,385,2.208,386,1.026,387,2.51,388,2.009,389,3.168,390,1.419,391,1.215,392,1.282,393,2.51,394,2.934,395,2.51,396,2.51,397,2.51,398,2.51,399,2.51,400,2.51,401,2.51,402,2.51,403,2.51,404,2.51,405,2.51,406,2.51,407,2.51,408,2.51,409,2.51,410,2.51,411,2.51,412,2.51,413,2.51,414,2.51,415,2.51,416,2.51,417,2.51,418,2.51,419,2.208,420,2.934,421,2.51,422,2.51,423,2.51,424,2.51,425,2.51,426,2.51,427,1.861,428,0.641,429,2.51,430,2.51,431,2.208,432,2.51,433,2.51,434,1.394,435,2.51,436,2.51,437,2.51,438,2.51,439,2.51,440,2.51,441,2.51,442,2.51,443,2.51,444,2.009,445,2.51,446,2.51,447,2.51,448,2.51,449,1.861,450,2.51,451,2.458,452,2.51,453,2.51,454,4.899,455,2.51,456,2.51,457,4.899,458,2.51,459,2.208,460,2.208,461,2.51,462,2.51,463,0.792,464,2.51,465,2.51,466,2.51,467,5.56,468,3.632,469,1.861,470,2.51,471,1.861,472,1.644,473,1.644,474,0.813,475,2.51,476,2.591,477,1.559,478,1.17,479,2.342,480,2.009,481,1.485,482,3.86,483,1.861,484,2.51]],["title/modules/AdminPageModule.html",[172,1.128,485,3.192]],["body/modules/AdminPageModule.html",[3,0.15,4,0.15,9,0.135,28,0.01,30,0.707,31,0.566,32,0.15,33,0.432,113,1.426,119,2.629,170,0.008,171,0.008,172,1.582,174,2.189,175,2.393,176,3.559,177,2.719,178,2.468,179,2.322,184,3.612,185,3.304,186,2.63,187,2.189,189,2.907,190,2.907,191,4.558,192,3.573,193,4.805,194,2.63,195,4.341,196,2.068,197,3.415,199,3.143,235,4.192,485,6.57,486,5.312,487,5.312,488,5.312,489,5.945,490,6.039,491,5.312,492,6.455,493,5.312]],["title/modules/AdminPageRoutingModule.html",[172,1.128,489,2.989]],["body/modules/AdminPageRoutingModule.html",[0,0.936,3,0.164,4,0.164,9,0.147,28,0.01,30,0.663,31,0.619,32,0.164,33,0.472,119,2.375,170,0.009,171,0.009,174,2.393,179,2.538,189,2.616,190,3.066,203,3.733,204,4.112,205,4.376,206,2.261,207,1.775,208,1.973,209,3.906,489,5.371,491,5.807,494,6.601]],["title/injectables/ApiService.html",[247,1.099,495,2.079]],["body/injectables/ApiService.html",[3,0.11,4,0.11,9,0.099,20,0.316,21,1.212,23,1.212,24,1.553,27,1.452,28,0.01,30,0.617,31,0.414,32,0.11,33,0.316,59,2.293,117,0.836,170,0.007,171,0.007,208,2.283,219,1.594,220,0.569,221,1.394,243,3.033,247,1.127,249,1.219,253,1.805,255,1.571,258,2.387,300,1.44,336,2.469,354,1.96,357,1.861,390,2.498,434,2.89,463,2.652,469,6.234,495,2.896,496,2.058,497,3.886,498,2.701,499,5.999,500,5.999,501,4.802,502,4.802,503,3.928,504,3.928,505,4.417,506,4.461,507,2.451,508,4.031,509,4.417,510,3.066,511,4.417,512,4.895,513,4.417,514,4.417,515,4.417,516,4.417,517,4.417,518,4.417,519,7.307,520,4.447,521,4.417,522,3.536,523,4.417,524,5.999,525,4.417,526,5.999,527,5.999,528,4.417,529,5.999,530,4.417,531,3.274,532,3.886,533,4.417,534,3.066,535,3.536,536,4.417,537,3.886,538,4.417,539,4.417,540,4.417,541,4.417,542,4.417,543,4.417,544,4.417,545,4.417,546,4.417,547,4.417,548,4.417,549,4.417,550,4.417,551,4.417,552,4.417,553,4.417,554,4.417,555,5.999,556,7.881,557,4.417,558,4.417,559,7.641,560,4.417,561,4.417,562,4.417,563,4.417,564,4.417,565,4.417,566,4.417]],["title/components/AppComponent.html",[0,0.61,121,1.358]],["body/components/AppComponent.html",[0,0.81,1,0.987,2,1.595,3,0.08,4,0.08,5,1.134,6,1.134,7,1.134,8,1.134,9,0.072,13,0.936,14,2.753,15,2.814,16,1.595,18,1.595,20,0.23,21,0.967,23,0.967,24,1.44,27,0.847,28,0.01,29,0.888,30,0.573,31,0.302,32,0.08,33,0.23,35,2.895,48,1.687,53,2.889,54,1.102,56,1.702,58,2.363,59,2.284,60,3.007,62,2.085,63,1.201,64,1.237,67,1.736,68,1.134,69,1.787,70,1.275,74,1.222,75,1.315,76,2.052,83,1.998,84,1.998,88,1.998,90,1.675,95,2.976,98,2.019,104,3.323,105,3.832,106,1.998,107,2.233,108,2.233,109,2.576,110,2.576,113,0.76,114,1.595,115,0.961,116,1.134,117,0.68,118,1.134,119,0.987,120,1.134,121,1.997,122,1.134,123,0.961,124,1.134,125,1.015,126,1.134,127,1.015,128,0.912,129,2.385,130,1.015,131,1.134,132,1.015,133,1.469,134,1.015,135,1.687,136,0.987,137,1.134,138,1.015,139,1.794,140,0.987,141,1.134,142,0.987,143,1.102,144,1.687,145,0.987,146,1.134,147,1.015,148,0.912,149,0.987,150,1.134,151,0.987,152,1.245,153,1.134,154,0.987,155,0.987,156,1.134,157,1.015,158,1.134,159,1.015,160,1.393,161,0.987,162,0.961,163,0.961,164,1.015,165,0.987,166,1.134,167,0.987,168,1.102,169,1.134,170,0.005,171,0.005,187,1.736,206,1.102,207,0.865,215,2.233,216,3.154,217,3.268,219,0.918,220,0.517,221,0.803,222,0.601,223,3.382,245,1.84,251,1.553,253,1.956,254,0.76,255,0.843,257,2.233,258,0.936,265,1.956,269,0.64,273,2.368,300,0.933,305,2.398,308,1.449,322,3.323,332,3.323,334,1.803,336,1.393,354,1.422,357,1.35,386,1.315,390,1.819,428,1.616,463,2.237,476,4.146,477,1.998,478,2.231,479,2.832,567,2.83,568,5.716,569,4.787,570,4.432,571,6.768,572,4.787,573,4.787,574,6.331,575,3.194,576,5.26,577,4.787,578,3.217,579,3.217,580,3.135,581,3.832,582,6.907,583,2.492,584,4.211,585,3.171,586,2.594,587,3.217,588,3.135,589,4.787,590,3.323,591,3.323,592,3.217,593,3.217,594,5.068,595,3.217,596,3.217,597,3.217,598,3.217,599,2.83,600,3.323,601,2.576,602,2.576,603,2.83,604,3.217,605,3.217,606,3.217,607,3.217,608,3.217,609,4.238,610,2.385,611,3.217,612,3.217,613,2.385,614,3.217,615,2.385,616,5.716,617,3.217,618,1.904,619,3.217,620,3.217,621,4.787,622,2.83,623,3.217,624,2.385,625,3.217,626,3.217,627,3.217,628,2.385,629,3.217,630,3.217,631,4.787,632,4.787,633,4.787,634,4.787,635,4.787,636,4.787,637,4.211,638,4.787,639,3.135,640,3.832,641,4.787,642,4.787,643,3.323,644,4.787,645,4.787,646,3.217,647,3.832,648,1.744,649,3.233,650,1.744,651,3.217,652,2.576,653,2.107,654,2.83,655,4.787,656,1.998,657,2.233,658,3.217,659,2.576,660,2.707,661,2.233,662,3.217,663,3.217,664,1.612,665,3.217,666,1.998,667,2.233,668,4.787,669,2.107,670,3.217]],["title/modules/AppModule.html",[172,1.128,671,3.192]],["body/modules/AppModule.html",[3,0.113,4,0.113,9,0.101,15,1.472,28,0.01,30,0.724,31,0.426,32,0.171,33,0.325,35,2.095,51,3.569,113,1.073,121,2.709,170,0.007,171,0.007,172,1.19,174,1.647,175,1.8,176,3.112,177,3.112,178,2.499,179,1.747,184,3.528,185,2.753,186,1.979,187,1.647,189,2.423,190,2.423,195,2.688,196,1.556,197,2.569,206,1.556,216,2.117,251,2.194,258,2.011,300,0.741,357,1.073,428,1.887,495,3.337,506,4.004,507,1.857,508,4.089,531,3.369,532,3.997,534,3.154,535,3.637,575,2.753,599,3.997,601,3.637,602,3.637,603,3.997,671,6.409,672,3.997,673,3.997,674,3.997,675,3.997,676,5.516,677,3.637,678,6.115,679,5.379,680,3.637,681,6.115,682,6.115,683,6.115,684,4.543,685,5.132,686,6.115,687,3.369,688,3.369,689,6.115,690,3.637,691,4.543,692,4.543,693,4.543,694,2.569,695,4.543,696,3.369,697,4.543,698,3.997,699,3.997,700,2.688,701,4.543,702,3.154,703,5.379,704,3.997,705,3.798,706,2.569,707,2.688,708,4.533,709,3.337,710,4.543,711,4.895,712,3.637,713,6.115,714,4.543,715,6.177,716,3.997,717,6.115,718,4.543,719,2.663,720,3.997,721,4.543,722,4.895,723,6.504,724,4.004,725,2.688,726,3.618,727,4.543,728,4.543,729,4.543,730,3.369,731,4.543,732,3.637,733,4.543,734,4.543,735,3.369,736,5.516,737,6.08,738,6.08,739,2.975,740,6.115,741,4.543,742,4.543,743,3.637]],["title/modules/AppRoutingModule.html",[172,1.128,676,2.989]],["body/modules/AppRoutingModule.html",[3,0.132,4,0.132,9,0.119,28,0.01,30,0.656,31,0.499,32,0.132,33,0.381,113,1.258,139,1.509,148,1.509,163,1.592,170,0.008,171,0.008,172,1.395,174,1.931,175,2.111,176,2.399,177,2.399,178,2.177,179,2.609,184,3.501,185,3.056,186,2.32,187,1.931,189,2.689,190,2.689,203,3.012,204,3.741,205,3.838,206,1.825,207,1.432,208,2.597,211,3.949,235,3.698,333,3.152,451,3.309,676,5.763,699,4.686,744,5.326,745,5.326,746,5.326,747,6.786,748,3.949,749,5.326,750,5.326,751,4.444,752,8.624,753,5.326,754,8.624,755,5.326,756,8.302,757,5.326,758,5.326,759,5.326,760,5.326,761,5.326,762,5.326,763,5.326,764,5.326,765,5.326,766,5.326,767,5.326,768,5.326,769,5.326,770,6.786,771,6.786,772,5.326,773,5.326,774,5.326,775,5.326,776,5.326,777,5.326]],["title/guards/AuthGuard.html",[210,3.447,748,3.192]],["body/guards/AuthGuard.html",[3,0.122,4,0.122,9,0.11,11,2.15,20,0.353,21,1.305,23,1.544,24,1.206,27,1.144,28,0.01,30,0.641,31,0.463,32,0.122,33,0.353,47,4.231,51,3.119,117,0.65,139,1.831,170,0.007,171,0.007,206,1.691,212,3.952,214,6.976,215,3.427,217,4.2,219,1.239,220,0.442,221,1.083,222,1.206,223,4.261,224,4.231,225,6.116,226,4.343,227,6.722,228,4.601,229,6.722,231,5.684,232,3.823,233,6.409,234,7.397,236,4.601,237,4.485,238,5.684,239,5.684,240,6.722,241,5.304,242,5.684,243,2.692,244,4.261,245,2.769,246,6.722,247,1.649,248,2.3,249,1.363,252,2.223,253,2.017,254,1.873,255,1.887,258,2.096,262,4.343,263,5.684,264,4.343,265,2.017,334,2.037,575,2.223,600,3.427,709,3.689,748,5.664,778,4.343,779,7.397,780,4.936,781,3.44,782,4.936,783,6.513,784,4.936,785,3.233,786,4.936,787,4.936,788,4.936,789,4.936,790,5.684]],["title/injectables/AuthService.html",[247,1.099,575,1.939]],["body/injectables/AuthService.html",[3,0.171,4,0.136,9,0.122,20,0.391,21,1.395,24,1.603,27,1.406,28,0.01,30,0.611,31,0.513,32,0.136,33,0.391,117,0.694,139,1.957,148,1.957,152,1.226,170,0.008,171,0.008,219,1.324,220,0.473,221,1.158,243,2.885,247,1.763,248,2.552,249,1.511,252,2.466,253,2.238,269,0.923,273,2.76,336,2.311,354,1.975,357,1.876,364,4.383,428,2.027,496,2.552,575,3.11,590,5.251,785,3.586,791,4.817,792,5.194,793,5.608,794,4.476,795,4.699,796,6.572,797,4.06,798,5.475,799,3.401,800,5.475,801,5.475,802,4.06,803,5.475,804,5.514,805,5.475,806,5.475,807,5.12,808,5.475,809,5.12,810,5.475,811,2.466,812,4.06,813,4.817,814,4.817,815,4.817,816,4.817]],["title/injectables/AuthService-1.html",[92,2.228,247,0.915,575,1.615]],["body/injectables/AuthService-1.html",[3,0.189,4,0.138,9,0.124,20,0.398,21,1.41,24,1.568,27,1.414,28,0.01,30,0.678,31,0.522,32,0.138,33,0.398,117,0.701,139,1.977,148,2.159,170,0.008,171,0.008,219,1.337,220,0.478,221,1.17,243,2.899,247,1.781,248,2.593,249,1.536,252,2.506,253,2.274,269,0.933,273,2.745,336,2.325,354,1.735,357,1.647,364,4.455,366,3.251,428,1.781,495,2.687,496,2.593,508,3.293,575,3.141,590,5.29,785,3.644,792,4.733,793,5.65,795,4.733,796,6.585,797,4.126,799,4.333,802,4.126,807,5.172,811,2.506,813,4.895,814,4.895,815,4.895,816,4.895,817,4.895,818,5.564,819,5.564,820,5.564,821,5.564,822,5.172,823,5.564,824,5.564,825,3.293,826,3.147,827,4.895,828,3.863]],["title/injectables/AuthStrapiService.html",[247,1.099,700,2.548]],["body/injectables/AuthStrapiService.html",[3,0.164,4,0.103,9,0.093,20,0.297,21,1.162,23,1.162,24,1.551,27,1.323,28,0.01,29,1.146,30,0.663,31,0.389,32,0.103,33,0.297,117,0.663,128,1.177,139,1.63,148,1.87,152,1.194,170,0.006,171,0.006,207,1.774,219,1.265,220,0.452,221,1.106,236,2.349,243,2.794,247,1.468,248,1.935,249,1.146,251,2.005,252,1.87,253,1.697,255,1.959,258,2.176,269,0.769,273,2.55,277,3.074,293,1.556,354,1.771,357,1.682,384,3.003,391,1.275,392,1.864,419,3.654,420,3.079,428,1.908,495,3.438,496,1.935,508,4.213,575,3.779,590,4.943,700,3.403,785,2.72,792,4.423,793,4.264,794,3.403,795,3.572,797,4.264,799,3.572,802,4.264,804,3.992,807,3.079,809,3.079,811,1.87,812,4.891,825,4.213,826,4.027,827,3.654,828,2.883,829,4.579,830,3.654,831,3.992,832,6.265,833,4.153,834,6.597,835,4.153,836,5.751,837,4.153,838,5.611,839,4.153,840,4.153,841,4.153,842,4.153,843,3.654,844,3.654,845,3.654,846,3.654,847,2.349,848,2.349,849,2.35,850,2.35,851,2.279,852,2.425,853,2.35,854,2.425,855,1.597,856,1.646,857,3.325,858,2.883,859,3.654,860,4.153,861,3.654,862,6.597,863,4.153,864,1.646,865,4.153,866,1.864,867,4.153,868,4.153,869,4.153,870,5.281,871,5.751,872,4.153,873,5.751,874,5.751,875,6.597,876,3.575,877,5.281,878,6.597,879,4.153,880,3.654,881,3.654,882,1.506,883,4.153,884,3.654,885,4.153,886,4.153,887,4.153,888,2.883,889,4.153,890,4.153,891,1.809,892,5.751,893,4.153,894,4.153,895,4.153,896,4.153,897,4.153,898,4.153,899,4.153,900,4.153,901,4.153,902,4.153,903,2.72,904,2.58,905,4.153]],["title/directives/BackgroundBlurDirective.html",[115,1.287,165,1.322]],["body/directives/BackgroundBlurDirective.html",[3,0.141,4,0.141,9,0.127,13,1.653,14,2.228,20,0.406,23,1.554,24,1.436,27,1.005,28,0.01,29,1.568,30,0.459,31,0.533,32,0.141,33,0.575,58,2.638,114,2.681,115,2.111,117,0.71,164,1.791,165,2.169,170,0.008,171,0.008,175,2.8,219,1.355,220,0.527,221,1.185,222,1.06,245,3.094,254,1.669,255,1.488,353,2.717,586,3.078,847,3.996,906,7.08,907,4.997,908,8.439,909,3.293,910,4.389,911,5.68,912,7.08,913,7.424,914,7.08,915,5.68,916,4.35,917,6.216,918,6.443,919,6.216,920,7.066,921,8.278,922,7.691,923,6.158,924,8.278,925,5.68,926,5.68,927,5.68,928,5.68,929,4.547]],["title/interfaces/ButtonConfig.html",[930,0.576,931,3.192]],["body/interfaces/ButtonConfig.html",[0,1.013,3,0.153,4,0.091,9,0.082,11,1.602,12,1.914,14,1.16,15,1.192,16,1.225,18,1.225,20,0.263,22,1.776,23,0.743,28,0.01,29,1.015,30,0.619,31,0.345,32,0.091,33,0.263,44,2.644,59,1.07,60,2.841,63,1.373,71,3.346,91,2.299,95,4.079,98,2.604,106,2.284,151,1.895,152,1.323,154,1.62,155,1.62,170,0.006,171,0.006,196,1.26,207,1.419,216,1.714,220,0.537,222,0.687,236,2.08,245,1.414,251,1.776,254,1.756,255,1.767,269,0.706,277,2.46,284,2.08,293,1.349,300,1.416,305,2.644,308,3.349,313,2.553,336,1.797,347,1.914,351,1.914,353,2.594,355,1.656,366,1.714,369,2.408,370,3.664,384,2.226,386,1.503,428,1.576,463,2.253,478,3.57,585,1.842,649,4.513,719,1.602,725,2.176,726,3.992,903,3.457,904,3.835,923,2.944,930,0.825,931,5.513,932,1.099,933,2.553,934,2.727,935,2.944,936,4.683,937,4.226,938,4.868,939,6.894,940,6.739,941,3.992,942,3.992,943,2.553,944,2.408,945,2.549,946,2.176,947,2.553,948,2.944,949,3.235,950,3.235,951,3.235,952,3.698,953,3.235,954,3.235,955,3.235,956,2.944,957,5.513,958,5.513,959,4.644,960,3.235,961,3.235,962,2.553,963,3.235,964,3.235,965,2.944,966,3.235,967,4.043,968,4.644,969,2.408,970,3.235,971,5.132,972,3.235,973,5.953,974,3.235,975,2.176,976,3.235,977,5.936,978,3.235,979,3.992,980,2.727,981,3.457,982,3.235,983,3.235,984,3.235,985,3.235,986,3.235,987,4.191,988,3.235,989,3.235,990,3.235,991,3.235,992,3.664,993,3.913,994,3.235,995,4.644,996,5.002,997,2.727,998,2.284,999,3.235,1000,5.936,1001,2.944,1002,3.235,1003,2.727,1004,2.727,1005,2.408,1006,2.727,1007,3.235,1008,2.553,1009,2.727,1010,3.235,1011,3.913,1012,3.913,1013,3.913,1014,3.913,1015,2.727,1016,2.727,1017,2.727,1018,3.235,1019,3.123,1020,5.401,1021,3.235,1022,3.235,1023,5.719,1024,3.235,1025,3.235,1026,3.235]],["title/injectables/CustomTranslateService.html",[247,1.099,576,3.192]],["body/injectables/CustomTranslateService.html",[3,0.107,4,0.107,9,0.096,20,0.307,21,1.19,23,1.19,24,1.522,27,1.417,28,0.01,29,1.187,30,0.611,31,0.403,32,0.146,33,0.307,35,2.302,117,0.676,170,0.007,171,0.007,219,1.288,220,0.518,221,1.127,222,1.1,243,2.546,247,1.504,249,1.187,252,1.937,253,1.758,254,1.587,255,2.192,258,1.955,269,0.788,273,2.062,277,3.131,300,1.33,347,3.067,351,3.067,354,1.883,357,1.89,370,5.427,428,1.715,496,2.004,510,2.986,576,4.368,582,7.692,583,3.067,585,3.62,586,3.193,594,6.409,622,3.784,640,6.061,685,4.664,687,3.189,705,4.856,706,3.8,707,2.545,719,2.566,735,3.189,781,2.653,785,2.817,811,3.605,832,6.358,848,2.432,859,3.784,1019,3.486,1027,6.62,1028,3.443,1029,8.005,1030,6.719,1031,7.227,1032,4.664,1033,4.301,1034,5.891,1035,5.891,1036,4.301,1037,3.067,1038,5.891,1039,5.891,1040,5.911,1041,4.301,1042,5.891,1043,5.891,1044,5.891,1045,5.891,1046,7.227,1047,7.227,1048,5.891,1049,7.227,1050,4.301,1051,5.891,1052,4.301,1053,5.891,1054,5.891,1055,5.891,1056,5.891,1057,5.891,1058,5.891,1059,4.301,1060,5.891,1061,4.301,1062,5.183,1063,3.784,1064,3.189,1065,4.368,1066,3.189,1067,3.784,1068,3.784,1069,4.301,1070,4.301,1071,4.301,1072,4.301,1073,4.301,1074,4.301,1075,4.301,1076,3.189,1077,4.301,1078,4.301,1079,7.57,1080,4.301]],["title/injectables/DataService.html",[247,1.099,694,2.435]],["body/injectables/DataService.html",[3,0.13,4,0.13,9,0.117,20,0.373,21,1.354,24,1.542,27,1.462,28,0.01,30,0.631,31,0.49,32,0.13,33,0.373,117,0.83,170,0.008,171,0.008,219,1.681,220,0.6,221,1.385,243,2.96,247,1.711,249,1.442,252,2.353,253,2.135,273,2.748,293,1.706,300,1.431,495,2.523,496,2.435,498,3.018,503,4.389,504,4.389,512,4.85,694,3.791,796,6.653,828,3.627,847,2.955,1081,4.597,1082,4.389,1083,5.366,1084,4.183,1085,5.225,1086,2.995,1087,6.613,1088,4.183,1089,5.225,1090,4.183,1091,5.225,1092,4.183,1093,5.225,1094,4.183,1095,5.225,1096,4.183,1097,5.225,1098,2.955,1099,4.183,1100,5.225,1101,5.366,1102,4.183,1103,4.183,1104,4.183,1105,5.366,1106,4.183,1107,4.183]],["title/injectables/FirebaseAuthService.html",[216,2.007,247,1.099]],["body/injectables/FirebaseAuthService.html",[3,0.185,4,0.083,9,0.075,20,0.24,21,0.998,23,0.998,24,1.519,27,1.44,28,0.01,29,1.363,30,0.63,31,0.315,32,0.083,33,0.24,35,2.007,51,2.385,59,0.977,117,0.692,139,1.661,143,1.692,148,1.832,152,1.359,170,0.006,171,0.006,187,1.791,216,2.302,219,1.321,220,0.472,221,1.155,222,1.207,243,2.963,247,1.261,248,1.564,249,0.926,251,1.621,252,1.511,253,1.372,254,1.526,255,1.887,258,2.167,269,0.66,273,2.581,293,1.412,301,3.238,314,3.429,333,2.923,337,1.986,341,4.815,342,4.232,354,1.607,357,1.526,384,1.416,392,2.335,428,1.991,463,1.558,496,1.564,575,3.621,583,2.571,590,4.486,618,2.923,705,4.015,706,1.898,707,1.986,709,3.12,715,5.962,716,2.953,730,4.345,732,2.687,781,2.91,783,3.954,790,2.953,792,4.015,793,3.662,794,2.923,795,3.068,797,3.662,799,4.995,802,3.662,804,3.429,807,2.488,809,2.488,812,4.345,825,3.824,826,3.655,831,3.429,838,5.305,843,2.953,844,2.953,845,2.953,846,2.953,848,1.898,858,2.33,861,5.156,866,2.094,870,2.687,876,3.503,877,2.687,880,4.345,881,2.953,882,1.791,884,2.953,888,3.429,903,3.838,904,3.64,946,4.076,1037,2.571,1108,2.953,1109,6.463,1110,4.939,1111,4.939,1112,3.356,1113,3.356,1114,4.939,1115,3.356,1116,3.356,1117,5.686,1118,3.356,1119,3.356,1120,2.793,1121,4.939,1122,3.356,1123,4.345,1124,5.767,1125,4.939,1126,3.662,1127,3.662,1128,3.356,1129,4.345,1130,4.939,1131,3.356,1132,3.954,1133,3.068,1134,3.838,1135,3.356,1136,2.953,1137,3.356,1138,3.356,1139,4.345,1140,2.687,1141,3.356,1142,4.939,1143,3.356,1144,3.356,1145,4.939,1146,4.939,1147,4.939,1148,4.939,1149,3.356,1150,2.953,1151,3.356,1152,3.356,1153,3.356,1154,3.356,1155,2.953,1156,3.356,1157,3.356,1158,3.356,1159,3.356,1160,4.939,1161,3.356,1162,3.356,1163,4.345,1164,4.345,1165,3.356,1166,4.939,1167,3.356,1168,3.356,1169,3.356,1170,4.939,1171,3.356,1172,3.356,1173,3.356,1174,3.356,1175,3.356,1176,3.356,1177,2.488,1178,3.356,1179,3.356,1180,2.488,1181,3.356,1182,3.356,1183,3.356,1184,3.356,1185,3.356,1186,3.356,1187,3.356,1188,3.356]],["title/classes/FirebaseDataService.html",[33,0.308,1189,3.447]],["body/classes/FirebaseDataService.html",[3,0.118,4,0.118,9,0.106,20,0.339,21,1.271,23,1.271,24,1.533,27,1.424,28,0.01,30,0.65,31,0.445,32,0.118,33,0.339,117,0.825,170,0.007,171,0.007,219,1.667,220,0.595,221,1.376,243,2.937,247,1.211,248,2.21,249,1.309,258,2.479,273,2.722,293,1.71,300,1.419,428,1.211,495,3.41,498,2.834,503,4.121,504,4.121,512,4.862,694,4.771,724,3.106,730,3.516,732,3.797,792,2.946,828,3.292,831,4.368,838,5.585,847,2.682,855,1.824,857,3.797,858,3.292,946,3.723,1082,4.121,1083,5.038,1084,3.797,1086,2.917,1087,6.441,1088,3.797,1090,3.797,1092,3.797,1094,3.797,1096,5.038,1098,2.682,1099,3.797,1101,3.797,1102,3.797,1103,3.797,1104,3.797,1105,5.038,1106,3.797,1107,3.797,1136,4.172,1189,5.038,1190,3.106,1191,3.797,1192,4.172,1193,4.743,1194,4.743,1195,4.743,1196,4.743,1197,4.743,1198,4.743,1199,4.743,1200,1.879,1201,4.743,1202,4.743,1203,4.172,1204,4.172,1205,4.172,1206,4.172,1207,4.172,1208,4.172,1209,1.671,1210,4.172,1211,4.172,1212,6.617,1213,6.617,1214,4.172,1215,4.172,1216,4.172,1217,4.172,1218,4.172,1219,4.172]],["title/interfaces/FirebaseDocument.html",[930,0.576,1220,2.989]],["body/interfaces/FirebaseDocument.html",[3,0.045,4,0.045,9,0.155,13,0.526,20,0.129,23,0.365,27,1.38,28,0.01,30,0.496,31,0.169,32,0.113,33,0.129,51,3.083,59,0.526,117,0.697,152,1.194,170,0.003,171,0.003,187,1.098,206,0.619,207,2.113,208,1.908,217,1.888,220,0.268,221,0.508,222,0.337,223,1.792,224,1.983,228,1.022,232,1.792,237,1.254,241,2.714,243,1.067,244,5.008,245,1.164,247,0.773,248,0.842,249,0.499,252,0.814,253,0.738,254,2.016,255,1.534,258,2.356,265,0.738,269,0.405,273,2.444,293,1.674,295,1.34,300,1.358,309,1.34,314,1.254,325,1.34,334,0.955,336,0.881,346,1.069,347,0.941,350,1.254,352,2.996,354,1.725,355,1.364,357,0.427,384,3.2,386,1.598,391,2.245,427,4.087,428,2.032,434,1.067,463,1.847,481,1.792,498,1.364,520,1.34,580,1.983,583,1.577,585,0.905,588,1.983,600,1.254,609,1.34,610,1.34,613,1.34,618,1.069,628,2.245,639,1.183,709,0.873,719,1.319,725,1.069,726,3.262,739,1.983,751,1.183,781,1.364,794,1.069,795,1.123,811,2.06,822,1.34,847,1.022,866,2.293,876,3.329,882,2.566,888,4.999,916,1.713,930,0.783,932,0.54,936,1.254,969,1.183,987,3.165,1032,2.714,1037,2.652,1076,2.245,1082,1.183,1120,2.587,1126,3.392,1127,4.89,1133,1.123,1134,1.183,1220,2.102,1221,1.34,1222,2.996,1223,6.448,1224,6.242,1225,4.087,1226,1.447,1227,1.447,1228,1.447,1229,2.425,1230,1.447,1231,1.447,1232,1.447,1233,6.135,1234,1.447,1235,2.102,1236,1.447,1237,1.447,1238,1.447,1239,1.447,1240,3.13,1241,1.447,1242,1.447,1243,1.447,1244,1.447,1245,1.447,1246,1.34,1247,1.447,1248,1.447,1249,1.447,1250,1.447,1251,2.425,1252,1.447,1253,1.447,1254,1.447,1255,2.425,1256,1.447,1257,1.447,1258,1.447,1259,1.447,1260,2.425,1261,2.425,1262,1.447,1263,1.447,1264,1.447,1265,4.414,1266,1.254,1267,1.447,1268,1.447,1269,1.447,1270,1.447,1271,1.447,1272,1.447,1273,1.447,1274,1.447,1275,1.447,1276,1.447,1277,2.245,1278,2.425,1279,1.447,1280,1.447,1281,1.183,1282,1.447,1283,1.447,1284,5.552,1285,1.447,1286,2.425,1287,1.447,1288,5.28,1289,1.447,1290,1.447,1291,1.447,1292,3.13,1293,2.425,1294,1.447,1295,1.447,1296,2.425,1297,1.447,1298,1.447,1299,1.447,1300,2.425,1301,1.447,1302,2.425,1303,2.425,1304,3.13,1305,0.738,1306,3.662,1307,1.447,1308,3.662,1309,1.447,1310,2.425,1311,1.447,1312,5.854,1313,6.481,1314,6.62,1315,5.552,1316,1.447,1317,4.079,1318,1.447,1319,3.537,1320,1.447,1321,3.537,1322,5.113,1323,1.447,1324,1.447,1325,2.425,1326,1.447,1327,1.447,1328,1.447,1329,2.425,1330,3.13,1331,2.425,1332,2.714,1333,1.447,1334,1.447,1335,1.447,1336,1.447,1337,2.313,1338,1.447,1339,1.447,1340,1.447,1341,3.13,1342,5.866,1343,1.447,1344,3.662,1345,3.13,1346,3.13,1347,1.447,1348,2.425,1349,1.447,1350,3.13,1351,3.337,1352,4.414,1353,1.447,1354,1.447,1355,2.425,1356,3.13,1357,1.447,1358,1.447,1359,1.183,1360,3.392,1361,1.447,1362,1.447,1363,5.28,1364,1.447,1365,2.425,1366,1.447,1367,2.425,1368,3.392,1369,3.337,1370,1.2,1371,0.955,1372,1.447,1373,2.425,1374,5.142,1375,1.447,1376,3.13,1377,1.447,1378,1.447,1379,1.447,1380,3.13,1381,1.447,1382,1.447,1383,2.425,1384,2.425,1385,2.425,1386,1.447,1387,1.447,1388,1.447,1389,1.447,1390,1.447,1391,1.34,1392,1.447,1393,1.183,1394,1.447,1395,1.447,1396,1.447,1397,1.447,1398,1.447,1399,1.447,1400,1.447,1401,1.447,1402,2.842,1403,1.447,1404,2.425,1405,3.13,1406,1.447,1407,1.447,1408,3.662,1409,1.447,1410,1.447,1411,1.447,1412,1.447,1413,1.447,1414,1.447,1415,1.34,1416,2.245,1417,2.425,1418,1.447,1419,1.447,1420,1.447,1421,1.447,1422,2.425,1423,2.425,1424,3.13,1425,1.447,1426,1.447,1427,1.447,1428,1.447,1429,1.983,1430,3.13,1431,1.447,1432,3.61,1433,2.425,1434,2.425,1435,1.447,1436,1.447,1437,1.447,1438,1.447,1439,1.447,1440,2.425,1441,1.447,1442,3.13,1443,2.245,1444,3.662,1445,1.447,1446,1.447,1447,2.425,1448,1.447,1449,1.447,1450,1.447,1451,1.447,1452,2.425,1453,1.447,1454,1.447,1455,1.447,1456,1.447,1457,1.447,1458,1.447,1459,1.447,1460,1.34,1461,1.447,1462,2.425,1463,1.254,1464,1.447,1465,1.34,1466,1.447,1467,1.447,1468,1.447,1469,1.447,1470,1.447,1471,3.13,1472,3.13,1473,1.447,1474,1.447,1475,2.425,1476,1.447,1477,1.34,1478,1.447,1479,1.34,1480,1.447,1481,1.447,1482,1.447]],["title/interfaces/FirebaseStorageFile.html",[930,0.576,1266,2.989]],["body/interfaces/FirebaseStorageFile.html",[3,0.045,4,0.045,9,0.165,13,0.526,20,0.129,23,0.365,27,1.38,28,0.01,30,0.496,31,0.169,32,0.113,33,0.129,51,3.184,59,0.526,117,0.697,152,1.194,170,0.003,171,0.003,187,1.098,206,0.619,207,2.112,208,2.072,217,1.887,220,0.268,221,0.508,222,0.337,223,1.791,224,1.983,228,1.022,232,1.791,237,1.254,241,2.713,243,1.067,244,5.008,245,1.164,247,0.773,248,0.842,249,0.499,252,0.813,253,0.738,254,2.016,255,1.534,258,2.356,265,0.738,269,0.405,273,2.444,293,1.62,295,1.339,300,1.366,309,1.339,314,1.254,325,1.339,334,0.955,336,0.881,346,1.069,347,0.94,350,1.254,352,2.995,354,1.725,355,1.363,357,0.427,384,3.2,386,1.597,391,2.128,427,4.087,428,2.032,434,1.067,463,1.846,481,1.791,498,1.363,520,1.339,580,1.983,583,1.576,585,0.905,588,1.983,600,1.254,609,1.339,610,1.339,613,1.339,618,1.069,628,2.245,639,1.183,709,0.872,719,1.319,725,1.069,726,3.261,739,1.983,751,1.183,781,1.363,794,1.069,795,1.122,811,2.06,822,1.339,847,1.022,866,2.293,876,3.329,882,2.565,888,4.998,916,1.712,930,0.783,932,0.54,936,1.254,969,1.183,987,3.164,1032,2.713,1037,2.652,1076,2.245,1082,1.183,1120,2.587,1126,3.391,1127,4.889,1133,1.122,1134,1.183,1220,1.254,1221,1.339,1222,2.995,1223,6.412,1224,6.191,1225,3.391,1226,1.446,1227,1.446,1228,1.446,1229,2.424,1230,1.446,1231,1.446,1232,1.446,1233,6.135,1234,1.446,1235,2.102,1236,1.446,1237,1.446,1238,1.446,1239,1.446,1240,3.129,1241,1.446,1242,1.446,1243,1.446,1244,1.446,1245,1.446,1246,1.339,1247,1.446,1248,1.446,1249,1.446,1250,1.446,1251,2.424,1252,1.446,1253,1.446,1254,1.446,1255,2.424,1256,1.446,1257,1.446,1258,1.446,1259,1.446,1260,2.424,1261,2.424,1262,1.446,1263,1.446,1264,1.446,1265,4.687,1266,2.102,1267,1.446,1268,1.446,1269,1.446,1270,1.446,1271,1.446,1272,1.446,1273,1.446,1274,1.446,1275,1.446,1276,1.446,1277,2.245,1278,2.424,1279,1.446,1280,1.446,1281,1.183,1282,1.446,1283,1.446,1284,5.551,1285,1.446,1286,2.424,1287,1.446,1288,5.279,1289,1.446,1290,1.446,1291,1.446,1292,3.129,1293,2.424,1294,1.446,1295,1.446,1296,2.424,1297,1.446,1298,1.446,1299,1.446,1300,2.424,1301,1.446,1302,2.424,1303,2.424,1304,3.129,1305,0.738,1306,3.661,1307,1.446,1308,3.661,1309,1.446,1310,2.424,1311,1.446,1312,5.854,1313,6.481,1314,6.619,1315,5.551,1316,1.446,1317,4.078,1318,1.446,1319,3.536,1320,1.446,1321,3.536,1322,5.112,1323,1.446,1324,1.446,1325,2.424,1326,1.446,1327,1.446,1328,1.446,1329,2.424,1330,3.129,1331,2.424,1332,2.713,1333,1.446,1334,1.446,1335,1.446,1336,1.446,1337,2.313,1338,1.446,1339,1.446,1340,1.446,1341,3.129,1342,5.865,1343,1.446,1344,3.661,1345,3.129,1346,3.129,1347,1.446,1348,2.424,1349,1.446,1350,3.129,1351,3.336,1352,4.413,1353,1.446,1354,1.446,1355,2.424,1356,3.129,1357,1.446,1358,1.446,1359,1.183,1360,3.391,1361,1.446,1362,1.446,1363,5.279,1364,1.446,1365,2.424,1366,1.446,1367,2.424,1368,3.391,1369,3.336,1370,1.2,1371,0.955,1372,1.446,1373,2.424,1374,5.141,1375,1.446,1376,3.129,1377,1.446,1378,1.446,1379,1.446,1380,3.129,1381,1.446,1382,1.446,1383,2.424,1384,2.424,1385,2.424,1386,1.446,1387,1.446,1388,1.446,1389,1.446,1390,1.446,1391,1.339,1392,1.446,1393,1.183,1394,1.446,1395,1.446,1396,1.446,1397,1.446,1398,1.446,1399,1.446,1400,1.446,1401,1.446,1402,2.841,1403,1.446,1404,2.424,1405,3.129,1406,1.446,1407,1.446,1408,3.661,1409,1.446,1410,1.446,1411,1.446,1412,1.446,1413,1.446,1414,1.446,1415,1.339,1416,2.245,1417,2.424,1418,1.446,1419,1.446,1420,1.446,1421,1.446,1422,2.424,1423,2.424,1424,3.129,1425,1.446,1426,1.446,1427,1.446,1428,1.446,1429,1.983,1430,3.129,1431,1.446,1432,3.609,1433,2.424,1434,2.424,1435,1.446,1436,1.446,1437,1.446,1438,1.446,1439,1.446,1440,2.424,1441,1.446,1442,3.129,1443,2.245,1444,3.661,1445,1.446,1446,1.446,1447,2.424,1448,1.446,1449,1.446,1450,1.446,1451,1.446,1452,2.424,1453,1.446,1454,1.446,1455,1.446,1456,1.446,1457,1.446,1458,1.446,1459,1.446,1460,1.339,1461,1.446,1462,2.424,1463,1.254,1464,1.446,1465,1.339,1466,1.446,1467,1.446,1468,1.446,1469,1.446,1470,1.446,1471,3.129,1472,3.129,1473,1.446,1474,1.446,1475,2.424,1476,1.446,1477,1.339,1478,1.446,1479,1.339,1480,1.446,1481,1.446,1482,1.446]],["title/interfaces/FirebaseUserCredential.html",[930,0.576,1134,2.82]],["body/interfaces/FirebaseUserCredential.html",[3,0.045,4,0.045,9,0.155,13,0.527,20,0.129,23,0.366,27,1.381,28,0.01,30,0.497,31,0.17,32,0.114,33,0.129,51,3.187,59,0.527,117,0.698,152,1.23,170,0.003,171,0.003,187,1.1,206,0.62,207,2.114,208,1.91,217,1.891,220,0.208,221,0.509,222,0.338,223,1.795,224,2.564,228,1.024,232,1.795,237,1.257,241,2.718,243,1.069,244,5.009,245,1.167,247,0.774,248,0.844,249,0.5,252,0.816,253,0.74,254,2.017,255,1.536,258,2.357,265,0.74,269,0.406,273,2.445,293,1.621,295,1.343,300,1.349,309,1.343,314,1.257,325,1.343,334,0.957,336,0.883,346,1.072,347,0.943,350,1.257,352,3,354,1.726,355,1.366,357,0.428,384,3.202,386,1.6,391,2.13,427,4.092,428,2.033,434,1.069,463,1.849,481,1.795,498,1.366,520,1.343,580,1.987,583,1.58,585,0.907,588,1.987,600,1.257,609,1.343,610,1.343,613,1.343,618,1.072,628,2.25,639,1.186,709,0.874,719,1.322,725,1.072,726,3.266,739,1.987,751,1.186,781,1.366,794,1.072,795,1.125,811,2.063,822,1.343,847,1.024,866,2.295,876,3.332,882,2.567,888,5.002,916,1.716,930,0.784,932,0.541,936,1.257,969,1.186,987,3.169,1032,2.718,1037,2.656,1076,2.25,1082,1.186,1120,2.591,1126,3.397,1127,4.894,1133,1.125,1134,1.987,1220,1.257,1221,1.343,1222,3,1223,6.415,1224,6.194,1225,3.397,1226,1.45,1227,1.45,1228,1.45,1229,2.429,1230,1.45,1231,1.45,1232,1.45,1233,6.138,1234,1.45,1235,2.106,1236,1.45,1237,1.45,1238,1.45,1239,1.45,1240,3.135,1241,1.45,1242,1.45,1243,1.45,1244,1.45,1245,1.45,1246,1.343,1247,1.45,1248,1.45,1249,1.45,1250,1.45,1251,2.429,1252,1.45,1253,1.45,1254,1.45,1255,2.429,1256,1.45,1257,1.45,1258,1.45,1259,1.45,1260,2.429,1261,3.668,1262,1.45,1263,1.45,1264,1.45,1265,4.418,1266,1.257,1267,2.429,1268,1.45,1269,1.45,1270,1.45,1271,1.45,1272,1.45,1273,1.45,1274,1.45,1275,1.45,1276,1.45,1277,2.25,1278,2.429,1279,1.45,1280,1.45,1281,1.186,1282,1.45,1283,1.45,1284,5.556,1285,1.45,1286,2.429,1287,1.45,1288,5.284,1289,1.45,1290,1.45,1291,1.45,1292,3.135,1293,2.429,1294,1.45,1295,1.45,1296,2.429,1297,1.45,1298,1.45,1299,1.45,1300,2.429,1301,1.45,1302,2.429,1303,2.429,1304,3.135,1305,0.74,1306,3.668,1307,1.45,1308,3.668,1309,1.45,1310,2.429,1311,1.45,1312,5.858,1313,6.483,1314,6.622,1315,5.556,1316,1.45,1317,4.084,1318,1.45,1319,3.541,1320,1.45,1321,3.541,1322,5.117,1323,1.45,1324,1.45,1325,2.429,1326,1.45,1327,1.45,1328,1.45,1329,2.429,1330,3.135,1331,2.429,1332,2.718,1333,1.45,1334,1.45,1335,1.45,1336,1.45,1337,2.317,1338,1.45,1339,1.45,1340,1.45,1341,3.135,1342,5.868,1343,1.45,1344,3.668,1345,3.135,1346,3.135,1347,1.45,1348,2.429,1349,1.45,1350,3.135,1351,3.341,1352,4.418,1353,1.45,1354,1.45,1355,2.429,1356,3.135,1357,1.45,1358,1.45,1359,1.186,1360,3.397,1361,1.45,1362,1.45,1363,5.284,1364,1.45,1365,2.429,1366,1.45,1367,2.429,1368,3.397,1369,3.341,1370,1.202,1371,0.957,1372,1.45,1373,2.429,1374,5.146,1375,1.45,1376,3.135,1377,1.45,1378,1.45,1379,1.45,1380,3.135,1381,1.45,1382,1.45,1383,2.429,1384,2.429,1385,2.429,1386,1.45,1387,1.45,1388,1.45,1389,1.45,1390,1.45,1391,1.343,1392,1.45,1393,1.186,1394,1.45,1395,1.45,1396,1.45,1397,1.45,1398,1.45,1399,1.45,1400,1.45,1401,1.45,1402,2.846,1403,1.45,1404,2.429,1405,3.135,1406,1.45,1407,1.45,1408,3.668,1409,1.45,1410,1.45,1411,1.45,1412,1.45,1413,1.45,1414,1.45,1415,1.343,1416,2.25,1417,2.429,1418,1.45,1419,1.45,1420,1.45,1421,1.45,1422,2.429,1423,2.429,1424,3.135,1425,1.45,1426,1.45,1427,1.45,1428,1.45,1429,1.987,1430,3.135,1431,1.45,1432,3.614,1433,2.429,1434,2.429,1435,1.45,1436,1.45,1437,1.45,1438,1.45,1439,1.45,1440,2.429,1441,1.45,1442,3.135,1443,2.25,1444,3.668,1445,1.45,1446,1.45,1447,2.429,1448,1.45,1449,1.45,1450,1.45,1451,1.45,1452,2.429,1453,1.45,1454,1.45,1455,1.45,1456,1.45,1457,1.45,1458,1.45,1459,1.45,1460,1.343,1461,1.45,1462,2.429,1463,1.257,1464,1.45,1465,1.343,1466,1.45,1467,1.45,1468,1.45,1469,1.45,1470,1.45,1471,3.135,1472,3.135,1473,1.45,1474,1.45,1475,2.429,1476,1.45,1477,1.343,1478,1.45,1479,1.343,1480,1.45,1481,1.45,1482,1.45]],["title/interfaces/Formats.html",[930,0.576,1483,1.816]],["body/interfaces/Formats.html",[3,0.117,4,0.117,9,0.105,20,0.337,28,0.01,32,0.22,56,2.1,74,1.993,117,0.785,152,0.967,170,0.007,171,0.007,208,2.241,220,0.561,269,0.837,293,1.538,300,1.486,334,1.485,391,2.16,392,2.03,434,2.752,474,2.531,507,1.925,849,1.925,850,1.925,851,2.482,852,1.986,853,1.925,854,1.986,855,1.811,856,2.789,864,1.866,866,2.03,882,2.271,891,2.052,930,1.173,932,1.408,1086,1.708,1200,1.866,1209,1.66,1305,3.191,1370,1.866,1371,2.831,1483,3.163,1484,1.986,1485,3.51,1486,3.51,1487,3.51,1488,3.51,1489,2.968,1490,1.66,1491,2.121,1492,2.052,1493,1.925,1494,2.052,1495,2.56,1496,2.121,1497,2.121,1498,3.517,1499,3.517,1500,2.121,1501,2.052,1502,3.517,1503,3.386,1504,2.052,1505,2.121,1506,2.121,1507,2.121]],["title/components/HomePage.html",[0,0.61,123,1.287]],["body/components/HomePage.html",[0,0.77,1,0.623,2,1.111,3,0.122,4,0.05,5,0.715,6,0.715,7,0.715,8,0.715,9,0.045,13,0.591,14,2.6,15,2.647,16,1.111,18,1.111,20,0.351,21,0.674,22,2.374,23,0.674,24,1.454,27,1.272,28,0.01,29,1.842,30,0.6,31,0.19,32,0.05,33,0.145,35,2.286,44,1.017,47,2.185,48,1.175,53,2.117,54,1.861,55,1.409,56,1.57,58,2.628,59,2.092,60,2.491,62,1.453,63,2.028,64,2.642,65,2.127,66,1.671,67,1.783,68,1.496,69,2.028,70,1.683,72,1.1,73,2.935,74,1.386,75,2.22,76,2.499,77,2.214,78,3.771,79,2.072,80,2.028,81,1.948,82,2.301,83,2.638,84,2.638,85,1.505,88,2.638,91,2.142,94,2.301,95,1.737,98,0.856,99,0.914,100,1.057,101,1.057,111,1.017,112,1.017,113,0.479,114,1.111,115,0.607,116,0.715,117,0.691,118,0.715,119,0.623,120,0.715,121,0.64,122,0.715,123,1.469,124,0.715,125,0.64,126,0.715,127,1.339,128,2.337,129,1.914,130,0.64,131,0.715,132,1.339,133,2.594,134,0.64,135,1.175,136,0.623,137,0.715,138,0.64,139,0.575,140,0.623,141,0.715,142,0.623,143,0.695,144,1.175,145,0.623,146,0.715,147,0.64,148,0.575,149,0.623,150,0.715,151,0.623,152,0.655,153,0.715,154,0.623,155,0.623,156,0.715,157,0.64,158,0.715,159,0.64,160,0.971,161,0.623,162,0.607,163,0.607,164,0.64,165,0.623,166,0.715,167,0.623,168,0.695,169,0.715,170,0.004,171,0.004,196,0.695,206,0.695,207,1.57,217,2.979,219,1.183,220,0.492,221,1.18,222,1.014,244,2.909,245,1.283,249,0.56,254,1.522,255,1.53,258,0.971,265,1.735,269,0.446,273,2.206,274,2.948,277,3.661,284,2.781,286,3.774,287,3.736,288,4.546,293,1.702,301,2.925,307,1.505,312,1.625,319,1.057,321,4.675,322,2.316,332,2.316,334,1.052,335,2.072,336,2.049,341,3.455,347,1.737,351,1.737,354,0.83,357,1.283,367,1.409,368,1.505,369,1.329,384,3.031,386,2.937,390,1.148,394,5.329,428,1.49,451,3.833,463,1.841,471,3.645,472,1.329,473,1.329,474,0.658,478,0.946,480,2.671,498,0.914,575,2.446,643,1.409,648,2.301,650,1.1,652,1.625,660,1.148,666,1.261,669,1.329,700,3.214,702,1.409,705,3.054,706,1.148,707,1.201,719,2.544,725,2.512,726,2.909,751,2.185,781,1.502,829,1.409,848,1.148,876,1.808,944,2.185,945,2.374,952,3.533,967,1.329,975,1.201,987,3.054,996,5.511,997,3.148,998,2.638,1001,3.399,1003,3.645,1004,4.778,1008,3.413,1009,3.645,1011,4.329,1012,2.473,1013,2.473,1014,2.473,1015,2.473,1016,2.473,1017,2.473,1037,1.737,1120,3.302,1319,1.409,1321,1.409,1332,1.409,1337,1.974,1359,4.22,1415,2.473,1508,1.786,1509,4.246,1510,3.336,1511,4.246,1512,3.399,1513,4.917,1514,3.336,1515,4.917,1516,2.473,1517,2.316,1518,2.935,1519,4.917,1520,2.935,1521,3.336,1522,2.03,1523,4.94,1524,3.336,1525,2.03,1526,4.246,1527,3.336,1528,5.432,1529,4.917,1530,3.336,1531,2.03,1532,2.935,1533,3.736,1534,3.336,1535,3.336,1536,2.03,1537,2.03,1538,3.336,1539,3.336,1540,4.675,1541,3.336,1542,4.917,1543,2.935,1544,2.473,1545,3.336,1546,3.336,1547,2.03,1548,2.935,1549,2.03,1550,2.473,1551,3.336,1552,2.03,1553,3.336,1554,2.03,1555,3.736,1556,2.03,1557,5.137,1558,2.935,1559,2.03,1560,4.326,1561,4.326,1562,3.336,1563,2.03,1564,2.03,1565,2.03,1566,2.03,1567,2.03,1568,2.03,1569,1.329,1570,1.329,1571,1.625,1572,1.505,1573,1.409,1574,1.409,1575,1.786,1576,1.786,1577,4.779,1578,2.935,1579,2.03,1580,5.5,1581,2.03,1582,1.786,1583,2.03,1584,1.786,1585,1.409,1586,1.786,1587,2.03,1588,1.625,1589,2.03,1590,2.03,1591,2.03,1592,1.505,1593,2.03,1594,2.473,1595,3.336,1596,3.336,1597,3.336,1598,3.336,1599,2.03,1600,1.625,1601,2.03,1602,2.03,1603,2.03,1604,1.786,1605,2.03,1606,2.03,1607,2.03,1608,2.03,1609,2.03,1610,2.03,1611,2.03,1612,2.03,1613,1.625,1614,1.786,1615,1.786,1616,2.03,1617,2.03,1618,3.336,1619,3.336,1620,3.336,1621,2.03,1622,2.03,1623,2.03,1624,3.336,1625,2.03,1626,3.054,1627,2.781,1628,2.935,1629,2.935,1630,3.148,1631,2.671,1632,3.336,1633,2.03,1634,2.072,1635,2.03,1636,1.409,1637,2.03,1638,1.505,1639,2.03,1640,2.671,1641,2.03,1642,1.786,1643,2.03,1644,1.409,1645,2.03,1646,1.786,1647,1.786,1648,1.409,1649,1.505]],["title/modules/HomePageModule.html",[172,1.128,1650,3.192]],["body/modules/HomePageModule.html",[3,0.151,4,0.151,9,0.136,28,0.01,30,0.701,31,0.571,32,0.151,33,0.435,113,1.439,123,2.565,170,0.008,171,0.008,172,1.596,174,2.209,175,2.414,176,3.573,177,2.743,178,2.49,179,2.342,184,3.62,185,3.322,186,2.654,187,2.209,189,2.923,190,2.923,191,4.582,192,3.605,193,4.831,194,2.654,195,4.365,196,2.087,197,3.445,199,3.171,751,3.99,1650,6.578,1651,5.36,1652,5.36,1653,5.36,1654,5.958,1655,6.092,1656,5.36]],["title/modules/HomePageRoutingModule.html",[172,1.128,1654,2.989]],["body/modules/HomePageRoutingModule.html",[0,0.894,3,0.156,4,0.156,9,0.141,28,0.01,30,0.674,31,0.591,32,0.156,33,0.451,113,1.489,123,2.251,170,0.008,171,0.008,172,1.652,174,2.287,175,2.499,176,2.84,177,2.84,178,2.578,179,2.896,184,3.649,185,3.392,186,2.747,187,2.287,189,2.985,190,2.985,199,3.283,203,3.567,204,4.034,205,4.26,206,2.16,207,1.696,208,1.885,209,3.732,1654,6.006,1656,5.549,1657,6.307,1658,6.307,1659,6.307]],["title/injectables/HttpClientProvider.html",[247,1.099,506,2.82]],["body/injectables/HttpClientProvider.html",[3,0.086,4,0.086,9,0.077,20,0.247,21,1.019,24,1.403,27,1.463,28,0.01,29,1.393,30,0.408,31,0.324,32,0.086,33,0.247,54,2.493,117,0.756,170,0.006,171,0.006,219,1.569,220,0.585,221,1.26,222,1.403,243,3.083,245,3.021,247,0.882,249,1.393,254,2.041,273,2.653,300,1.393,357,1.407,434,3.122,469,6.33,496,1.61,498,2.951,501,5.58,502,5.246,503,4.291,504,4.291,506,3.304,510,6.278,512,5.084,522,2.766,534,5.348,585,2.527,796,6.431,1086,2.527,1432,5.359,1585,5.052,1660,6.168,1661,3.04,1662,4.439,1663,4.439,1664,7.781,1665,3.455,1666,7.878,1667,4.439,1668,3.455,1669,3.455,1670,4.439,1671,7.2,1672,3.455,1673,5.959,1674,6.403,1675,4.439,1676,3.455,1677,4.439,1678,3.455,1679,4.439,1680,5.243,1681,5.243,1682,5.243,1683,3.455,1684,5.765,1685,4.859,1686,3.455,1687,4.439]],["title/classes/HttpClientWebProvider.html",[33,0.308,688,3.192]],["body/classes/HttpClientWebProvider.html",[3,0.066,4,0.066,9,0.06,20,0.191,21,0.84,23,1.031,24,1.397,27,1.443,28,0.01,29,1.148,30,0.465,31,0.251,32,0.066,33,0.191,47,3.77,54,2.562,59,0.778,91,1.165,117,0.752,170,0.005,171,0.005,178,1.093,219,1.536,220,0.582,221,1.254,222,1.397,243,2.995,245,3.081,247,0.683,249,1.148,254,2.014,255,1.73,258,2.13,273,2.564,300,1.339,354,1.642,357,1.728,386,2.912,428,1.469,434,3.1,469,6.381,498,2.808,501,4.992,502,4.992,503,4.084,504,4.084,506,4.899,510,6.265,512,5.023,522,2.141,534,1.857,535,2.141,585,2.084,624,1.983,685,4.784,687,1.983,688,3.084,690,5.285,831,2.887,838,4.784,858,1.857,929,2.141,965,2.141,1064,4.268,1086,2.261,1190,1.752,1432,5.067,1501,1.812,1585,4.583,1660,4.609,1662,3.659,1663,2.353,1664,7.782,1666,7.825,1667,2.353,1670,2.353,1671,7.55,1674,6.581,1675,2.353,1677,2.353,1679,3.659,1680,4.49,1681,4.49,1682,4.49,1684,5.065,1685,4.268,1687,3.659,1688,2.353,1689,4.159,1690,5.104,1691,2.675,1692,2.675,1693,4.159,1694,2.675,1695,6.602,1696,2.675,1697,2.675,1698,5.104,1699,2.675,1700,2.675,1701,2.675,1702,2.675,1703,2.675,1704,2.675,1705,2.675,1706,4.159,1707,2.675,1708,5.104,1709,6.236,1710,2.675,1711,5.104,1712,2.675,1713,2.675,1714,2.675,1715,4.159,1716,2.675,1717,2.675,1718,4.159,1719,2.675,1720,2.675,1721,2.675,1722,2.675,1723,2.353]],["title/interfaces/Island.html",[128,1.22,930,0.576]],["body/interfaces/Island.html",[3,0.156,4,0.156,9,0.141,20,0.451,28,0.01,30,0.509,32,0.156,117,0.757,128,2.452,160,2.192,163,2.251,170,0.008,171,0.008,220,0.571,221,1.263,222,1.178,269,1.007,300,1.314,355,2.84,358,4.679,391,2.472,394,5.971,864,2.985,930,0.843,932,1.885,1490,3.048,1724,5.549,1725,4.457,1726,6.626,1727,7.532,1728,7.532,1729,5.549,1730,6.307,1731,5.549]],["title/components/IslandComponent.html",[0,0.61,125,1.358]],["body/components/IslandComponent.html",[0,0.977,1,1.032,2,1.647,3,0.083,4,0.083,5,1.185,6,1.185,7,1.185,8,1.185,9,0.075,12,1.219,13,0.978,14,2.765,15,2.828,16,1.647,18,1.647,20,0.353,21,0.999,23,1.185,24,1.346,27,1.038,28,0.01,29,0.928,30,0.474,31,0.315,32,0.083,33,0.24,35,2.469,48,1.742,53,2.917,54,2.619,56,1.577,58,2.414,59,2.168,60,2.702,62,3.002,63,2.854,64,3.188,65,1.684,66,1.684,67,2.614,68,2.54,69,3.119,70,3.144,71,3.179,72,1.822,74,1.759,75,2.397,76,2.529,77,1.514,78,3.433,80,2.573,81,2.324,90,1.75,93,1.684,94,3.736,98,1.418,99,2.227,100,1.75,101,1.75,111,1.684,112,1.684,113,0.794,114,1.647,115,1.005,116,1.185,117,0.65,118,1.185,119,1.032,120,1.185,121,1.06,122,1.185,123,1.005,124,1.185,125,2.04,126,1.185,127,1.06,128,2.35,129,2.429,130,1.06,131,1.185,132,1.06,133,1.518,134,1.06,135,1.742,136,1.032,137,1.185,138,1.06,139,0.953,140,1.032,141,1.185,142,1.032,143,1.152,144,1.742,145,1.032,146,1.185,147,1.06,148,0.953,149,1.032,150,1.185,151,1.032,152,0.905,153,1.185,154,1.032,155,1.032,156,1.185,157,1.06,158,1.185,159,1.06,160,2.168,161,1.032,162,1.005,163,2.371,164,1.06,165,1.032,166,1.185,167,1.032,168,1.152,169,1.185,170,0.006,171,0.006,207,0.904,219,0.645,220,0.443,221,0.564,222,0.628,245,1.901,254,0.794,297,3.827,308,3.246,319,1.75,336,1.707,353,2.255,354,1.23,357,1.168,386,2.021,390,1.901,428,0.858,459,4.35,460,5.69,463,2.461,471,2.493,472,2.202,473,2.202,474,1.089,478,2.734,479,1.989,480,2.691,482,2.334,648,2.68,649,1.901,660,1.901,661,2.334,667,4.072,909,2.304,941,3.827,942,2.926,967,3.238,971,3.841,979,3.827,981,3.238,1222,4.236,1517,4.785,1569,2.202,1594,3.666,1626,3.644,1627,3.238,1630,2.493,1636,2.334,1638,3.666,1644,2.334,1646,4.35,1648,2.334,1649,4.349,1732,2.958,1733,5.866,1734,4.945,1735,6.468,1736,3.959,1737,5.866,1738,3.072,1739,4.945,1740,3.362,1741,3.362,1742,3.362,1743,4.945,1744,7.208,1745,6.468,1746,3.959,1747,3.959,1748,3.362,1749,4.945,1750,4.945,1751,2.088,1752,2.958,1753,3.362,1754,4.945,1755,4.795,1756,4.945,1757,4.945,1758,3.362,1759,2.958,1760,2.493,1761,3.362,1762,2.334,1763,2.958,1764,3.362,1765,2.958,1766,3.959,1767,2.958,1768,3.362,1769,2.958,1770,3.362,1771,3.362,1772,1.989,1773,3.362]],["title/components/IslandFormComponent.html",[0,0.61,127,1.358]],["body/components/IslandFormComponent.html",[0,0.78,1,0.926,2,1.519,3,0.075,4,0.075,5,1.063,6,1.063,7,1.063,8,1.063,9,0.067,12,1.094,13,0.878,14,2.735,15,2.794,16,1.519,18,1.519,20,0.393,21,0.922,23,0.922,24,1.466,27,1.085,28,0.01,29,1.518,30,0.598,31,0.283,32,0.075,33,0.216,35,2.689,44,1.511,48,1.607,53,3.017,54,1.033,58,2.585,59,2.248,60,2.973,67,1.094,69,1.126,75,1.864,77,1.358,80,1.126,81,1.195,91,3.419,92,2.833,95,3.427,98,2.319,99,1.358,100,1.57,101,1.57,113,0.712,114,1.519,115,0.901,116,1.063,117,0.696,118,1.063,119,0.926,120,1.063,121,0.951,122,1.063,123,0.901,124,1.063,125,0.951,126,1.063,127,1.933,128,2.427,129,2.32,130,0.951,131,1.063,132,0.951,133,1.4,134,0.951,135,1.607,136,0.926,137,1.063,138,0.951,139,0.855,140,0.926,141,1.063,142,0.926,143,1.033,144,1.607,145,0.926,146,1.063,147,0.951,148,0.855,149,0.926,150,1.063,151,0.926,152,0.849,153,1.063,154,0.926,155,0.926,156,1.063,157,0.951,158,1.063,159,0.951,160,1.6,161,0.926,162,0.901,163,0.901,164,0.951,165,0.926,166,1.063,167,0.926,168,1.033,169,1.063,170,0.005,171,0.005,194,1.314,196,1.033,207,0.811,219,0.874,220,0.492,221,0.765,249,0.833,255,1.725,258,0.878,269,0.61,277,2.563,293,1.339,319,1.57,353,2.115,354,1.637,355,3.479,357,1.299,384,2.777,390,2.579,428,1.768,431,4.013,463,2.39,476,4.709,478,1.406,498,2.477,586,1.635,648,1.635,649,1.706,650,2.472,653,3.601,656,1.874,664,1.511,666,1.874,705,3.808,706,1.706,707,1.785,781,2.054,848,1.706,909,2.125,910,2.833,938,4.301,945,2.96,952,3.343,971,3.601,975,1.785,998,3.416,1163,2.236,1337,2.699,1465,4.077,1523,5.757,1533,4.838,1569,1.975,1571,6.369,1572,5.898,1584,2.654,1585,4.807,1586,2.654,1588,2.415,1592,3.382,1594,3.382,1600,2.415,1631,3.651,1648,3.166,1751,1.874,1774,1.975,1775,3.818,1776,3.166,1777,5.792,1778,4.545,1779,6.13,1780,4.256,1781,2.415,1782,4.992,1783,4.255,1784,3.016,1785,3.651,1786,4.561,1787,3.016,1788,4.013,1789,4.013,1790,5.134,1791,4.881,1792,3.016,1793,4.561,1794,3.651,1795,4.013,1796,4.561,1797,4.013,1798,3.016,1799,4.013,1800,4.561,1801,2.415,1802,3.818,1803,2.654,1804,3.016,1805,4.013,1806,4.561,1807,4.013,1808,4.561,1809,4.561,1810,4.013,1811,3.016,1812,3.016,1813,3.016,1814,3.016,1815,3.016,1816,2.094,1817,2.236,1818,3.016,1819,2.654,1820,3.016,1821,3.016,1822,4.561,1823,3.016,1824,3.016,1825,3.016,1826,2.654,1827,2.236,1828,2.094,1829,2.094,1830,3.016,1831,3.016,1832,3.016,1833,3.016,1834,3.016,1835,3.016,1836,3.016,1837,3.016,1838,3.016,1839,3.016,1840,2.415,1841,4.561,1842,3.016,1843,3.016,1844,3.016,1845,3.016,1846,3.016,1847,3.016,1848,4.561,1849,4.561,1850,4.561,1851,3.016,1852,3.016,1853,2.094,1854,2.654,1855,2.415,1856,2.654,1857,3.016,1858,3.016]],["title/injectables/IslandService.html",[247,1.099,286,2.435]],["body/injectables/IslandService.html",[3,0.174,4,0.087,9,0.079,20,0.252,21,1.034,23,1.034,24,1.474,27,1.42,28,0.01,30,0.648,31,0.33,32,0.087,33,0.252,76,1.658,92,3.179,117,0.76,128,2.541,152,1.268,160,1.025,163,1.976,170,0.006,171,0.006,207,1.778,208,1.801,216,3.082,219,1.347,220,0.53,221,1.178,222,1.235,243,3.03,247,1.306,249,0.973,251,1.701,252,1.587,253,1.44,254,1.659,255,2.069,258,2.254,269,0.684,273,2.584,286,2.894,300,1.264,301,2.564,312,5.624,336,2.132,337,4.336,341,3.028,354,1.499,357,1.423,391,1.571,394,3.794,428,1.977,495,1.701,496,1.642,570,3.946,583,2.664,615,3.794,694,1.992,700,2.085,702,2.446,709,3.193,781,3.3,783,5.867,804,3.552,811,2.714,1005,4.331,1037,3.443,1123,4.502,1133,4.552,1222,4.331,1337,3.028,1351,3.351,1359,3.351,1490,1.803,1550,3.794,1783,4.474,1859,3.1,1860,6.026,1861,5.117,1862,5.117,1863,6.614,1864,5.117,1865,5.117,1866,2.821,1867,5.117,1868,3.552,1869,5.117,1870,3.523,1871,4.097,1872,5.117,1873,3.523,1874,3.523,1875,5.117,1876,3.523,1877,4.097,1878,4.502,1879,5.117,1880,3.523,1881,5.117,1882,3.523,1883,5.117,1884,3.523,1885,3.1,1886,2.821,1887,2.821,1888,3.523,1889,2.821,1890,2.612,1891,3.523,1892,3.1,1893,4.591,1894,3.523,1895,5.117,1896,5.249,1897,3.523,1898,5.117,1899,5.117,1900,5.117,1901,5.117,1902,5.117,1903,5.117,1904,5.117,1905,5.117,1906,5.117,1907,5.117,1908,5.117,1909,3.523,1910,3.523,1911,3.523,1912,3.523,1913,3.523,1914,3.523,1915,3.523,1916,3.523,1917,3.523]],["title/interfaces/Item.html",[664,2.157,930,0.576]],["body/interfaces/Item.html",[0,1.095,3,0.142,4,0.142,9,0.128,11,2.498,12,2.577,14,1.809,15,1.859,16,1.911,18,1.911,20,0.593,22,2.769,23,1.159,28,0.01,29,1.583,30,0.693,31,0.538,32,0.142,33,0.41,68,2.021,160,1.669,162,1.714,163,2.413,170,0.008,171,0.008,196,1.965,220,0.487,249,1.583,254,1.354,269,0.95,273,2.182,300,1.26,303,4.591,306,5.691,307,5.27,308,3.479,310,4.591,323,4.252,336,1.669,355,2.583,377,4.591,664,3.87,811,2.583,930,0.767,932,1.714,945,3.432,952,2.769,1006,4.252,1019,3.394,1209,2.021,1281,3.756,1371,2.436,1751,3.563,1783,4.571,1817,4.252,1918,4.591,1919,7.104,1920,4.591,1921,5.046,1922,4.252,1923,5.046,1924,5.046,1925,5.046,1926,6.254,1927,4.252]],["title/injectables/JwtService.html",[247,1.099,508,2.548]],["body/injectables/JwtService.html",[3,0.133,4,0.133,9,0.12,20,0.384,21,1.379,23,1.515,24,1.554,27,1.396,28,0.01,30,0.606,31,0.504,32,0.169,33,0.384,117,0.54,170,0.008,171,0.008,219,1.031,220,0.513,221,0.901,243,2.932,247,1.372,249,1.484,253,2.197,258,2.296,269,0.912,300,1.224,354,1.698,357,1.269,370,3.731,428,1.742,463,2.152,496,2.505,508,4.039,537,4.729,1893,4.738,1896,4.738,1928,4.303,1929,8.454,1930,7.889,1931,7.889,1932,7.889,1933,6.825,1934,6.825,1935,5.375,1936,5.375,1937,7.321,1938,5.375,1939,6.825,1940,5.375,1941,5.375,1942,4.729,1943,5.375,1944,5.375,1945,8.322,1946,5.375,1947,5.375,1948,6.005,1949,6.825,1950,6.825,1951,6.005,1952,5.375,1953,5.375,1954,5.375,1955,5.375,1956,5.375]],["title/interfaces/Large.html",[930,0.576,1485,1.816]],["body/interfaces/Large.html",[3,0.112,4,0.112,9,0.101,20,0.322,28,0.01,32,0.219,56,2.216,74,2.103,117,0.828,152,0.938,170,0.007,171,0.007,208,2.421,220,0.591,269,0.813,293,1.503,300,1.492,334,1.42,391,2.112,392,1.97,434,2.903,474,2.67,507,1.84,849,1.84,850,1.84,851,2.409,852,1.899,853,1.84,854,1.899,855,1.732,856,2.726,864,1.785,866,1.97,882,2.204,891,1.962,930,1.166,932,1.346,1086,1.633,1200,1.785,1209,1.587,1305,3.367,1370,1.785,1371,2.846,1483,2.902,1484,1.899,1485,3.107,1486,2.902,1487,2.902,1488,2.902,1489,2.902,1490,1.587,1491,2.028,1492,1.962,1493,1.84,1494,1.962,1495,2.484,1496,2.028,1497,2.028,1498,3.71,1499,3.71,1500,2.028,1501,1.962,1502,3.71,1503,3.475,1504,1.962,1505,2.028,1506,2.028,1507,2.028]],["title/pipes/LatestThreePipe.html",[1957,2.82,1958,2.989]],["body/pipes/LatestThreePipe.html",[3,0.15,4,0.15,9,0.135,11,2.638,13,1.762,21,1.224,24,1.131,27,1.301,28,0.01,30,0.489,31,0.568,32,0.15,33,0.433,68,3.106,117,0.796,170,0.008,171,0.008,219,1.161,220,0.415,221,1.016,222,1.131,254,1.43,258,2.394,297,5.071,301,3.682,351,3.826,1504,3.202,1805,5.328,1957,4.813,1958,5.102,1959,4.204,1960,6.466,1961,5.328,1962,7.35,1963,5.328,1964,7.35,1965,6.056,1966,6.466,1967,8.229,1968,8.229,1969,7.35,1970,7.35,1971,7.35,1972,6.466,1973,6.056,1974,6.056,1975,6.056,1976,6.056]],["title/interfaces/Loan.html",[133,1.322,930,0.576]],["body/interfaces/Loan.html",[3,0.161,4,0.161,9,0.145,20,0.465,28,0.01,32,0.161,133,2.505,170,0.009,171,0.009,220,0.589,222,1.215,269,1.026,300,1.252,358,4.766,391,2.505,666,4.042,864,2.578,930,0.87,932,1.944,1463,4.517,1490,3.029,1493,2.659,1544,4.824,1725,3.85,1726,5.725,1729,5.725,1977,5.725,1978,5.688,1979,4.824,1980,5.725,1981,6.507,1982,6.507,1983,6.507,1984,6.507,1985,6.507]],["title/pipes/LoanCompletedPipe.html",[1957,2.82,1986,2.989]],["body/pipes/LoanCompletedPipe.html",[3,0.147,4,0.147,9,0.132,11,2.577,13,1.722,21,1.196,24,1.105,27,1.283,28,0.01,30,0.585,31,0.555,32,0.147,33,0.423,117,0.788,133,2.616,170,0.008,171,0.008,219,1.134,220,0.405,221,0.992,222,1.105,245,3.012,254,1.711,258,2.375,297,5.043,451,5.455,481,4.831,1402,4.501,1544,6.053,1570,3.875,1957,4.745,1959,4.107,1963,5.205,1966,6.375,1972,6.375,1980,6.375,1986,5.03,1987,6.375,1988,5.205,1989,7.246,1990,7.246,1991,6.91,1992,5.917,1993,7.246,1994,6.375,1995,5.917,1996,5.917]],["title/components/LoanComponent.html",[0,0.61,130,1.358]],["body/components/LoanComponent.html",[0,0.972,1,1.019,2,1.632,3,0.082,4,0.082,5,1.169,6,1.169,7,1.169,8,1.169,9,0.074,11,2.133,12,2.111,13,0.966,14,2.762,15,2.824,16,1.632,18,1.632,20,0.237,21,0.99,22,3.103,23,1.176,24,1.422,27,1.03,28,0.01,29,1.607,30,0.396,31,0.311,32,0.082,33,0.237,35,2.202,44,2.454,48,1.726,53,2.868,54,2.348,56,1.728,58,2.678,59,2.302,60,3,61,1.877,62,3.232,63,2.559,64,3.041,65,2.454,66,1.662,67,2.111,68,2.051,69,2.173,70,2.547,71,3.888,72,1.799,74,1.486,75,2.802,76,2.681,77,3.342,80,2.173,81,2.307,82,2.655,93,2.454,95,1.727,97,2.061,98,1.4,99,2.894,100,1.727,101,1.727,102,2.919,103,1.799,111,1.662,112,1.662,113,0.784,114,1.632,115,0.992,116,1.169,117,0.689,118,1.169,119,1.019,120,1.169,121,1.046,122,1.169,123,0.992,124,1.169,125,1.046,126,1.169,127,1.046,128,0.94,129,2.416,130,2.027,131,1.169,132,1.046,133,2.559,134,1.046,135,1.726,136,1.019,137,1.169,138,1.046,139,0.94,140,1.019,141,1.169,142,1.019,143,1.137,144,1.726,145,1.019,146,1.169,147,1.046,148,0.94,149,1.019,150,1.169,151,1.019,152,0.899,153,1.169,154,1.019,155,1.019,156,1.169,157,1.046,158,1.169,159,1.046,160,1.425,161,1.019,162,0.992,163,0.992,164,1.046,165,1.019,166,1.169,167,1.019,168,1.137,169,1.169,170,0.006,171,0.006,219,0.939,220,0.491,221,0.821,222,0.914,254,1.157,269,0.655,305,3.22,308,3.43,336,1.87,347,2.55,353,1.883,354,1.218,357,1.157,390,1.877,428,1.25,463,2.027,472,2.173,473,2.173,474,1.887,477,3.042,478,2.995,479,1.964,498,2.206,648,2.655,650,1.799,653,3.207,656,2.061,909,2.282,941,4.057,942,3.445,962,3.4,971,3.207,975,1.964,979,4.507,980,4.765,992,3.4,1371,1.046,1490,1.726,1516,3.631,1517,3.4,1570,2.173,1592,2.46,1626,2.061,1627,2.173,1634,2.061,1736,3.921,1738,3.042,1747,2.657,1752,2.919,1755,4.765,1762,4.041,1853,2.304,1978,3.631,1979,3.631,1997,2.919,1998,5.822,1999,4.898,2000,5.655,2001,4.309,2002,4.898,2003,3.318,2004,3.318,2005,3.318,2006,3.318,2007,4.309,2008,2.919,2009,3.318,2010,3.318,2011,3.318,2012,2.919,2013,2.657,2014,2.919,2015,2.919,2016,4.309,2017,2.919,2018,2.919,2019,2.919,2020,2.919,2021,2.919,2022,4.309,2023,4.309,2024,4.309,2025,5.655,2026,5.655,2027,4.898,2028,2.919,2029,3.631,2030,3.921,2031,2.919,2032,3.4,2033,3.318,2034,4.309,2035,2.919,2036,3.631,2037,2.657,2038,2.919]],["title/components/LoanFormComponent.html",[0,0.61,132,1.358]],["body/components/LoanFormComponent.html",[0,0.783,1,0.933,2,1.528,3,0.075,4,0.075,5,1.071,6,1.071,7,1.071,8,1.071,9,0.068,12,1.102,13,0.884,14,2.737,15,2.797,16,1.528,18,1.528,20,0.217,21,0.927,23,0.927,24,1.386,27,1.089,28,0.01,29,1.525,30,0.582,31,0.285,32,0.075,33,0.217,35,2.937,44,1.522,48,1.616,53,3.07,54,1.041,58,2.835,59,2.319,60,3.039,67,1.102,69,1.134,75,1.874,76,1.486,77,1.368,80,1.134,81,1.204,91,3.471,95,3.203,98,2.595,99,1.368,100,1.582,101,1.582,113,0.718,114,1.528,115,0.908,116,1.071,117,0.664,118,1.071,119,0.933,120,1.071,121,0.958,122,1.071,123,0.908,124,1.071,125,0.958,126,1.071,127,0.958,128,0.861,129,2.327,130,0.958,131,1.071,132,1.94,133,2.611,134,0.958,135,1.616,136,0.933,137,1.071,138,0.958,139,0.861,140,0.933,141,1.071,142,0.933,143,1.041,144,1.616,145,0.933,146,1.071,147,0.958,148,0.861,149,0.933,150,1.071,151,0.933,152,0.95,153,1.071,154,0.933,155,0.933,156,1.071,157,0.958,158,1.071,159,0.958,160,1.335,161,0.933,162,0.908,163,0.908,164,0.958,165,0.933,166,1.071,167,0.933,168,1.041,169,1.071,170,0.005,171,0.005,194,1.324,196,1.041,207,1.655,219,0.879,220,0.475,221,0.769,249,0.839,255,1.73,269,0.613,277,2.137,288,4.478,293,1.002,319,1.582,351,1.582,353,2.124,354,0.756,357,0.718,368,2.253,384,1.934,386,1.874,390,1.719,428,1.773,463,1.94,476,4.721,477,1.888,478,1.416,583,2.876,586,1.647,648,1.647,649,1.719,650,2.486,653,3.618,656,1.888,664,1.522,666,2.849,705,3.822,706,1.719,707,1.798,848,1.719,909,2.137,910,2.849,938,4.103,945,2.971,952,3.189,971,3.618,975,1.798,998,3.822,1429,3.003,1432,1.99,1493,1.874,1523,5.771,1532,2.673,1570,1.99,1573,5.272,1574,5.272,1585,4.585,1592,2.253,1594,2.253,1600,2.433,1746,3.672,1774,1.99,1775,3.835,1776,3.184,1778,4.562,1780,4.272,1781,2.433,1782,5.004,1785,3.672,1788,4.035,1789,4.035,1790,4.897,1791,4.096,1794,4.423,1797,4.035,1799,4.035,1801,3.672,1802,3.835,1816,2.109,1819,2.673,1827,2.253,1828,2.109,1829,4.272,1840,2.433,1853,2.109,1854,2.673,1855,2.433,1856,2.673,1978,4.562,1979,3.4,1991,4.926,2032,2.109,2039,5.524,2040,2.673,2041,3.039,2042,3.039,2043,4.586,2044,4.586,2045,5.524,2046,4.586,2047,4.86,2048,3.039,2049,3.039,2050,3.039,2051,2.433,2052,3.039,2053,4.586,2054,3.039,2055,3.039,2056,3.039,2057,3.039,2058,3.039,2059,3.039,2060,5.414,2061,4.586,2062,5.414,2063,3.039,2064,3.039,2065,3.039,2066,3.039,2067,3.039,2068,3.039,2069,3.039,2070,3.039,2071,3.039,2072,3.039,2073,4.586,2074,4.586,2075,4.586,2076,4.586,2077,4.586,2078,4.586,2079,4.586,2080,4.586,2081,4.586,2082,4.586,2083,3.039,2084,2.433,2085,3.039,2086,2.109]],["title/components/LoanItemComponent.html",[0,0.61,134,1.358]],["body/components/LoanItemComponent.html",[0,0.974,1,1.024,2,1.638,3,0.083,4,0.083,5,1.176,6,1.176,7,1.176,8,1.176,9,0.074,11,2.142,12,2.118,13,0.971,14,2.763,15,2.825,16,1.638,18,1.638,20,0.239,21,0.994,22,3.112,23,1.18,24,1.424,27,1.034,28,0.01,29,1.612,30,0.397,31,0.313,32,0.083,33,0.239,35,1.685,44,2.464,48,1.733,53,2.912,54,2.354,56,1.733,58,2.684,59,2.305,60,3.003,61,1.887,62,3.132,63,2.406,64,2.995,65,2.464,66,1.672,67,2.118,68,2.058,69,2.18,70,2.554,71,3.724,72,1.809,74,1.491,75,2.387,76,2.634,77,3.237,78,2.317,80,2.18,81,2.315,82,2.666,93,1.672,95,1.737,97,2.073,98,2.463,99,2.63,100,1.737,101,1.737,103,1.809,111,1.672,112,1.672,113,0.788,114,1.638,115,0.997,116,1.176,117,0.691,118,1.176,119,1.024,120,1.176,121,1.052,122,1.176,123,0.997,124,1.176,125,1.052,126,1.176,127,1.052,128,0.946,129,2.421,130,1.052,131,1.176,132,1.052,133,2.642,134,2.033,135,1.733,136,1.024,137,1.176,138,1.052,139,0.946,140,1.024,141,1.176,142,1.024,143,1.143,144,1.733,145,1.024,146,1.176,147,1.052,148,0.946,149,1.024,150,1.176,151,1.024,152,0.902,153,1.176,154,1.024,155,1.024,156,1.176,157,1.052,158,1.176,159,1.052,160,1.431,161,1.024,162,0.997,163,0.997,164,1.052,165,1.024,166,1.176,167,1.024,168,1.143,169,1.176,170,0.006,171,0.006,219,0.943,220,0.492,221,0.825,222,0.918,254,1.162,269,0.658,305,3.229,308,3.66,336,1.875,347,2.56,353,1.891,354,1.223,357,1.162,390,1.887,428,1.255,463,2.033,472,2.185,473,2.185,474,1.594,478,2.292,479,1.975,498,2.215,648,2.666,650,1.809,653,3.221,656,2.073,664,3.229,909,2.292,941,4.066,942,3.456,962,3.414,975,1.975,979,4.514,980,4.779,992,3.414,1371,1.052,1490,1.733,1516,4.779,1518,5.67,1570,2.185,1573,5.407,1626,2.073,1627,2.185,1634,3.055,1736,3.938,1738,3.055,1747,2.672,1755,4.779,1762,4.055,1853,2.317,1978,3.647,1979,3.647,2000,5.67,2001,4.327,2007,4.327,2008,2.936,2012,2.936,2013,2.672,2014,2.936,2015,2.936,2016,4.327,2017,2.936,2018,2.936,2019,2.936,2020,2.936,2021,2.936,2022,4.327,2023,4.327,2024,4.327,2025,4.327,2026,4.327,2028,2.936,2029,3.647,2030,2.672,2031,2.936,2035,2.936,2036,3.647,2037,2.672,2038,2.936,2087,6.235,2088,2.672,2089,5.139,2090,4.327,2091,4.918,2092,3.337,2093,3.337,2094,2.936,2095,3.337,2096,3.337,2097,6.445,2098,3.337,2099,3.337,2100,3.337,2101,3.337,2102,3.337]],["title/injectables/LoanService.html",[247,1.099,288,2.675]],["body/injectables/LoanService.html",[3,0.088,4,0.088,9,0.08,20,0.255,21,1.042,23,1.042,24,1.451,27,1.423,28,0.01,30,0.658,31,0.334,32,0.088,33,0.255,76,1.155,117,0.709,128,2.308,133,2.745,152,1.089,170,0.006,171,0.006,207,1.788,216,3.098,219,1.353,220,0.542,221,1.183,222,1.241,243,3.021,247,1.317,248,1.66,249,0.983,251,1.72,252,1.604,253,1.456,254,1.57,255,1.927,258,2.261,269,0.69,273,2.632,286,3.76,288,3.205,293,0.778,300,0.989,301,2.584,336,2.141,337,4.353,354,1.283,357,1.218,365,2.852,391,1.584,428,1.937,451,4.995,495,1.72,496,1.66,570,3.379,583,2.686,615,4.929,666,3.205,694,2.015,709,3.21,781,3.313,785,2.333,811,3.177,848,2.015,1005,3.379,1037,3.461,1120,4.548,1133,3.205,1222,4.354,1225,3.825,1235,2.473,1246,2.642,1337,3.053,1342,3.825,1351,3.379,1369,2.333,1490,1.818,1550,3.825,1613,2.852,1868,4.21,1871,4.13,1877,4.13,1878,4.539,1885,3.135,1886,2.852,1887,2.852,1889,2.852,1890,2.642,1893,4.898,1896,4.615,1991,4.13,2013,2.852,2060,4.539,2062,4.539,2103,3.135,2104,6.065,2105,5.159,2106,5.159,2107,5.159,2108,6.648,2109,5.159,2110,3.563,2111,6.065,2112,5.159,2113,5.159,2114,3.563,2115,5.159,2116,3.563,2117,7.77,2118,5.159,2119,3.563,2120,3.563,2121,5.159,2122,3.563,2123,3.563,2124,5.159,2125,3.563,2126,3.563,2127,6.648,2128,3.563,2129,3.563,2130,3.563,2131,3.563,2132,4.13,2133,3.563,2134,3.563,2135,3.563,2136,3.563,2137,3.563,2138,6.065,2139,3.563,2140,3.563,2141,3.563,2142,3.563,2143,3.563,2144,3.563,2145,3.563,2146,3.563,2147,3.563,2148,3.563,2149,3.563,2150,3.563,2151,5.159,2152,3.563]],["title/components/LoansPage.html",[0,0.61,136,1.322]],["body/components/LoansPage.html",[0,0.881,1,0.952,2,1.551,3,0.139,4,0.077,5,1.093,6,1.093,7,1.093,8,1.093,9,0.069,11,2.028,12,2.028,13,0.902,14,2.743,15,2.803,16,1.551,18,1.551,20,0.333,21,0.941,22,3.001,23,0.941,24,1.426,27,1.179,28,0.01,29,1.932,30,0.628,31,0.291,32,0.077,33,0.222,35,2.129,48,1.641,53,1.688,54,1.595,56,1.252,58,1.157,59,2.173,60,2.254,63,2.087,64,2.562,67,1.124,68,1.093,69,2.087,70,1.845,72,1.68,74,1.189,75,2.54,76,2.268,77,2.097,79,3.474,80,2.087,81,1.845,82,1.68,83,1.926,84,1.926,88,1.926,91,2.028,92,1.926,93,1.553,94,3.369,97,1.926,98,1.964,106,1.926,111,1.553,112,1.553,113,0.732,114,1.551,115,0.927,116,1.093,117,0.73,118,1.093,119,0.952,120,1.093,121,0.978,122,1.093,123,0.927,124,1.093,125,0.978,126,1.093,127,0.978,128,2.057,129,2.348,130,0.978,131,1.093,132,1.763,133,2.708,134,0.978,135,1.641,136,1.908,137,1.093,138,0.978,139,0.879,140,0.952,141,1.093,142,0.952,143,1.062,144,1.641,145,0.952,146,1.093,147,0.978,148,0.879,149,0.952,150,1.093,151,0.952,152,0.959,153,1.093,154,0.952,155,0.952,156,1.093,157,0.978,158,1.093,159,0.978,160,1.355,161,0.952,162,0.927,163,0.927,164,0.978,165,0.952,166,1.093,167,0.952,168,1.062,169,1.093,170,0.005,171,0.005,196,1.062,206,1.062,207,1.252,217,1.497,219,1.192,220,0.479,221,1.173,222,1.044,249,0.856,254,1.468,255,1.465,265,1.903,269,0.623,273,1.716,277,2.606,286,4.105,288,4.744,293,1.456,301,2.333,319,1.614,321,4.976,322,3.232,335,2.893,336,2.036,341,2.755,354,1.158,357,1.468,367,2.152,368,2.299,384,1.308,386,2.723,428,1.587,451,4.139,463,2.289,482,2.152,575,2.518,657,2.152,666,3.474,700,3.678,702,2.152,719,2.436,725,2.755,726,2.755,781,2.097,829,2.152,848,1.754,944,2.03,945,3.001,952,3.605,969,2.03,987,2.893,996,5.536,997,3.452,998,2.893,1003,3.452,1004,4.609,1008,3.232,1009,3.452,1011,4.146,1012,2.299,1013,2.299,1014,2.299,1015,2.299,1016,2.299,1017,2.299,1037,2.424,1120,2.633,1337,2.755,1359,4.071,1512,4.477,1516,3.452,1517,3.232,1520,4.097,1540,3.728,1548,4.097,1550,3.452,1555,4.097,1557,5.469,1558,4.097,1560,4.097,1561,4.097,1569,2.03,1570,2.03,1573,2.152,1574,2.152,1578,2.728,1580,5.334,1582,2.728,1613,2.482,1614,2.728,1615,2.728,1626,1.926,1628,2.728,1630,2.299,1634,1.926,1644,2.152,1648,2.152,1760,2.299,1767,2.728,1772,1.835,1777,4.92,1826,2.728,2153,2.728,2154,5.592,2155,4.657,2156,6.216,2157,3.101,2158,4.657,2159,3.101,2160,3.101,2161,4.657,2162,3.101,2163,3.101,2164,3.101,2165,3.101,2166,3.101,2167,3.101,2168,3.101,2169,3.101,2170,3.101,2171,3.101,2172,4.657,2173,4.657,2174,2.482,2175,3.101,2176,3.101,2177,2.482,2178,2.482,2179,3.101,2180,3.101,2181,2.728,2182,3.101]],["title/modules/LoansPageModule.html",[172,1.128,2183,3.192]],["body/modules/LoansPageModule.html",[3,0.155,4,0.155,9,0.14,28,0.01,30,0.672,31,0.587,32,0.155,33,0.447,113,1.478,136,2.651,170,0.008,171,0.008,172,1.64,174,2.27,175,2.48,176,3.615,177,2.819,178,2.558,179,2.407,184,3.642,185,3.376,186,2.726,187,2.27,189,2.971,190,2.971,197,3.54,199,3.258,451,3.888,2183,6.604,2184,5.507,2185,5.507,2186,5.507,2187,5.995,2188,6.259,2189,5.507]],["title/modules/LoansPageRoutingModule.html",[172,1.128,2187,2.989]],["body/modules/LoansPageRoutingModule.html",[0,0.936,3,0.164,4,0.164,9,0.147,28,0.01,30,0.663,31,0.619,32,0.164,33,0.472,136,2.375,170,0.009,171,0.009,174,2.393,179,2.538,189,2.616,190,3.066,203,3.733,204,4.112,205,4.376,206,2.261,207,1.775,208,1.973,209,3.906,2187,5.371,2189,5.807,2190,6.601]],["title/components/LoginFormComponent.html",[0,0.61,138,1.358]],["body/components/LoginFormComponent.html",[0,0.938,1,1.281,2,1.923,3,0.104,4,0.104,5,1.471,6,1.471,7,1.471,8,1.471,9,0.093,12,1.514,13,1.215,14,2.818,15,2.886,16,1.923,18,1.923,20,0.298,21,1.166,23,1.166,24,1.446,27,1.022,28,0.01,29,1.593,30,0.534,31,0.391,32,0.104,33,0.298,35,1.977,48,2.033,53,2.398,54,1.43,58,2.154,59,2.18,60,2.093,63,1.558,64,2.219,65,2.091,66,2.091,67,1.514,68,1.471,69,2.154,70,1.654,76,1.87,77,1.88,80,2.469,81,2.287,82,3.128,83,3.585,84,3.585,85,3.095,88,2.593,91,3.579,93,2.091,113,0.986,114,1.923,115,1.247,116,1.471,117,0.753,118,1.471,119,1.281,120,1.471,121,1.316,122,1.471,123,1.247,124,1.471,125,1.316,126,1.471,127,1.316,128,1.183,129,2.639,130,1.316,131,1.471,132,1.316,133,1.771,134,1.316,135,2.033,136,1.281,137,1.471,138,2.25,139,2.294,140,1.281,141,1.471,142,1.281,143,1.43,144,2.033,145,1.281,146,1.471,147,1.316,148,1.183,149,1.281,150,1.471,151,1.281,152,1.021,153,1.471,154,1.281,155,1.281,156,1.471,157,1.316,158,1.471,159,1.316,160,1.679,161,1.281,162,1.247,163,1.247,164,1.316,165,1.281,166,1.471,167,1.281,168,1.43,169,1.471,170,0.006,171,0.006,187,1.514,194,1.818,219,1.106,220,0.513,221,0.968,255,1.094,269,0.772,300,1.079,305,2.891,308,2.599,319,2.173,353,1.605,354,1.775,357,0.986,366,1.945,392,2.427,428,1.066,463,2.086,478,1.945,586,2.262,664,2.091,799,2.593,825,3.914,866,2.144,909,2.689,910,3.585,941,3.914,942,3.415,981,3.779,1374,4.279,1636,2.898,1644,2.898,1738,3.585,1762,2.898,1774,2.734,1775,4.592,1776,4.006,1780,5.703,1782,4.954,1801,4.62,1802,4.006,1816,2.898,1827,3.095,1828,2.898,1829,4.006,2051,3.342,2177,3.342,2178,3.342,2191,6.986,2192,6.357,2193,3.672,2194,5.771,2195,4.174,2196,5.077,2197,5.771,2198,4.174,2199,4.174,2200,4.174,2201,4.174,2202,4.174,2203,3.672,2204,4.174,2205,4.174,2206,5.771,2207,3.672,2208,3.672,2209,3.672,2210,3.672]],["title/components/LoginPage.html",[0,0.61,140,1.322]],["body/components/LoginPage.html",[0,0.898,1,1.182,2,1.817,3,0.135,4,0.095,5,1.357,6,1.357,7,1.357,8,1.357,9,0.086,12,1.396,13,1.12,14,2.799,15,2.865,16,1.817,18,1.817,20,0.275,21,1.102,23,1.102,24,1.018,27,0.681,28,0.01,29,1.063,30,0.641,31,0.361,32,0.095,33,0.275,35,2.586,48,1.922,53,2.876,54,2.49,55,2.672,56,1.852,57,3.082,58,2.571,59,2.347,60,2.876,61,2.177,62,1.677,63,2.571,64,3.102,65,3.45,66,3.172,67,2.498,68,2.427,69,2.898,70,2.509,71,2.956,72,2.087,74,1.616,75,2.229,76,2.232,77,2.456,80,1.437,81,1.526,82,2.087,90,3.297,91,1.677,92,2.391,93,1.929,94,2.087,95,3.297,97,2.391,98,2.671,99,1.734,100,2.004,101,2.004,104,3.786,105,4.366,106,3.388,107,2.672,108,2.672,109,3.082,110,3.082,111,1.929,112,1.929,113,0.909,114,1.817,115,1.15,116,1.357,117,0.731,118,1.357,119,1.182,120,1.357,121,1.214,122,1.357,123,1.15,124,1.357,125,1.214,126,1.357,127,1.214,128,1.091,129,2.562,130,1.214,131,1.357,132,1.214,133,1.674,134,1.214,135,1.922,136,1.182,137,1.357,138,1.214,139,2.06,140,2.114,141,1.357,142,1.182,143,1.319,144,1.922,145,1.182,146,1.357,147,1.72,148,1.545,149,1.182,150,1.357,151,1.182,152,1.122,153,1.357,154,1.182,155,1.182,156,1.357,157,1.214,158,1.357,159,1.214,160,1.587,161,1.182,162,1.15,163,1.15,164,1.214,165,1.182,166,1.357,167,1.182,168,1.319,169,1.357,170,0.006,171,0.006,196,1.319,206,1.319,215,2.672,216,3.21,217,3.51,219,1.046,220,0.373,221,0.914,222,0.719,223,3.227,251,1.859,254,0.909,255,1.659,257,2.672,293,1.192,301,2.732,305,2.732,322,3.786,334,1.214,336,1.587,342,3.571,366,2.541,392,1.767,575,1.734,584,4.798,799,4.516,825,4.302,826,2.177,866,1.767,944,2.521,945,3.058,946,2.278,952,2.633,1140,3.082,1150,3.387,1634,2.391,2174,4.366,2211,3.387,2212,6.333,2213,5.453,2214,5.453,2215,3.85,2216,3.85,2217,3.85,2218,3.387,2219,3.082,2220,2.854,2221,3.85,2222,3.85,2223,3.85,2224,3.85,2225,3.85,2226,5.453,2227,5.453,2228,4.798,2229,3.387,2230,3.387,2231,3.387,2232,3.082,2233,3.387,2234,3.387,2235,3.387]],["title/modules/LoginPageModule.html",[172,1.128,2236,3.192]],["body/modules/LoginPageModule.html",[3,0.151,4,0.151,9,0.136,28,0.01,30,0.701,31,0.571,32,0.151,33,0.435,113,1.439,139,1.726,140,2.634,170,0.008,171,0.008,172,1.596,174,2.209,175,2.414,176,3.573,177,2.743,178,2.49,179,2.342,184,3.62,185,3.322,186,2.654,187,2.209,189,2.923,190,2.923,191,4.582,192,3.605,193,4.831,194,2.654,195,4.365,196,2.087,197,3.445,199,3.171,2236,6.578,2237,5.36,2238,5.36,2239,5.36,2240,5.958,2241,6.092,2242,5.36]],["title/modules/LoginPageRoutingModule.html",[172,1.128,2240,2.989]],["body/modules/LoginPageRoutingModule.html",[0,0.936,3,0.164,4,0.164,9,0.147,28,0.01,30,0.663,31,0.619,32,0.164,33,0.472,140,2.375,170,0.009,171,0.009,174,2.393,179,2.538,189,2.616,190,3.066,203,3.733,204,4.112,205,4.376,206,2.261,207,1.775,208,1.973,209,3.906,2240,5.371,2242,5.807,2243,6.601]],["title/interfaces/Medium.html",[930,0.576,1486,1.816]],["body/interfaces/Medium.html",[3,0.112,4,0.112,9,0.101,20,0.322,28,0.01,32,0.219,56,2.216,74,2.103,117,0.828,152,0.938,170,0.007,171,0.007,208,2.421,220,0.591,269,0.813,293,1.503,300,1.492,334,1.42,391,2.112,392,1.97,434,2.903,474,2.67,507,1.84,849,1.84,850,1.84,851,2.409,852,1.899,853,1.84,854,1.899,855,1.732,856,2.726,864,1.785,866,1.97,882,2.204,891,1.962,930,1.166,932,1.346,1086,1.633,1200,1.785,1209,1.587,1305,3.367,1370,1.785,1371,2.846,1483,2.902,1484,1.899,1485,2.902,1486,3.107,1487,2.902,1488,2.902,1489,2.902,1490,1.587,1491,2.028,1492,1.962,1493,1.84,1494,1.962,1495,2.484,1496,2.028,1497,2.028,1498,3.71,1499,3.71,1500,2.028,1501,1.962,1502,3.71,1503,3.475,1504,1.962,1505,2.028,1506,2.028,1507,2.028]],["title/interfaces/PaginatedData.html",[930,0.576,1098,2.435]],["body/interfaces/PaginatedData.html",[3,0.16,4,0.16,9,0.144,20,0.461,28,0.01,32,0.189,170,0.009,171,0.009,220,0.575,222,1.203,269,1.02,293,1.874,297,4.515,301,3.822,346,4.515,930,1.02,932,1.926,1005,4.996,1086,3.046,1098,4.315,1209,3.118,1725,4.515,2244,5.16,2245,5.671,2246,5.671,2247,5.671,2248,5.671,2249,5.671,2250,5.671]],["title/interfaces/Pagination.html",[930,0.576,1209,1.517]],["body/interfaces/Pagination.html",[3,0.155,4,0.155,9,0.14,20,0.447,28,0.01,32,0.186,68,2.205,170,0.008,171,0.008,220,0.582,222,1.169,269,1.002,293,1.368,297,3.704,301,3.135,334,2.683,346,3.704,474,2.028,781,2.819,930,1.002,932,1.87,1005,4.91,1086,2.27,1098,3.54,1209,2.932,1370,3.181,1371,2.809,1463,4.345,1492,3.496,1493,3.477,1725,4.436,2244,5.011,2245,5.507,2246,5.507,2247,5.507,2248,5.507,2249,5.507,2250,5.507,2251,6.259]],["title/classes/PasswordValidation.html",[33,0.308,2252,3.192]],["body/classes/PasswordValidation.html",[3,0.117,4,0.117,9,0.105,20,0.338,21,1.269,24,1.172,27,1.329,28,0.01,30,0.382,32,0.117,33,0.338,76,1.532,91,3.501,117,0.837,170,0.007,171,0.007,194,2.059,207,1.688,219,1.204,220,0.43,221,1.259,222,1.172,254,1.665,258,2.339,265,2.881,273,1.927,300,1.376,335,3.9,336,1.827,354,1.175,357,1.116,463,2.223,498,2.128,624,3.504,719,3.628,866,2.855,1065,4.655,1190,3.095,1460,4.655,1630,5.569,1794,6.013,1994,5.523,2252,4.655,2253,4.158,2254,7.071,2255,7.511,2256,7.05,2257,6.278,2258,7.511,2259,4.726,2260,7.327,2261,5.523,2262,6.034,2263,6.278,2264,6.878,2265,6.278,2266,4.726,2267,6.278,2268,6.278,2269,6.278,2270,6.608,2271,5.523,2272,6.202,2273,6.202,2274,4.158,2275,4.726,2276,4.726,2277,4.726,2278,6.278,2279,4.726,2280,4.726,2281,4.726,2282,6.278,2283,4.726,2284,7.327,2285,5.523,2286,6.278,2287,4.726,2288,6.278,2289,4.726]],["title/components/PictureSelectableComponent.html",[0,0.61,142,1.322]],["body/components/PictureSelectableComponent.html",[0,1.12,1,0.848,2,1.421,3,0.069,4,0.069,5,0.974,6,0.974,7,0.974,8,0.974,9,0.176,11,1.858,12,1.889,13,0.804,14,2.724,15,2.765,16,1.421,18,1.421,20,0.198,21,0.862,22,2.828,23,0.558,24,1.519,27,1.336,28,0.01,29,2.226,30,0.473,31,0.259,32,0.106,33,0.198,44,1.384,48,2.064,50,3.415,53,2.295,54,1.461,56,1.147,59,1.704,63,1.031,64,1.062,67,1.002,68,0.974,74,1.089,75,2.129,76,0.895,80,1.592,81,1.69,90,1.438,91,2.914,107,1.918,108,1.918,113,0.653,114,1.951,115,0.826,116,0.974,117,0.784,118,0.974,119,0.848,120,0.974,121,0.871,122,0.974,123,0.826,124,0.974,125,0.871,126,0.974,127,0.871,128,0.783,129,2.23,130,0.871,131,0.974,132,0.871,133,1.309,134,0.871,135,1.503,136,0.848,137,0.974,138,0.871,139,0.783,140,0.848,141,0.974,142,1.943,143,2.889,144,1.503,145,0.848,146,0.974,147,0.871,148,0.783,149,0.848,150,0.974,151,0.848,152,0.977,153,0.974,154,0.848,155,0.848,156,0.974,157,0.871,158,0.974,159,0.871,160,1.241,161,0.848,162,0.826,163,0.826,164,0.871,165,0.848,166,0.974,167,0.848,168,0.946,169,0.974,170,0.005,171,0.005,178,1.743,194,1.204,196,0.946,207,1.401,219,1.417,220,0.517,221,1.266,222,1.345,228,2.412,232,2.524,245,2.681,249,0.763,254,1.783,255,1.365,265,1.743,269,0.57,273,1.599,300,0.956,305,3.351,308,3.632,319,1.438,334,0.871,336,1.516,353,2.252,354,1.911,357,1.495,386,2.394,428,1.78,463,0.871,478,1.988,498,1.921,580,3.836,585,2.137,639,4.381,648,1.497,657,1.918,660,1.563,661,1.918,669,1.809,719,3.288,736,1.918,781,1.921,811,2.346,876,1.497,929,2.212,945,2.828,952,2.059,979,2.524,992,2.961,1008,4.644,1066,3.162,1129,3.752,1277,3.162,1626,1.716,1627,1.809,1763,2.431,1772,2.524,1855,4.689,2262,4.644,2290,6.563,2291,6.078,2292,2.049,2293,5.569,2294,5.209,2295,4.17,2296,3.415,2297,4.583,2298,3.752,2299,5.209,2300,5.209,2301,5.886,2302,4.583,2303,4.265,2304,5.857,2305,5.857,2306,4.265,2307,4.265,2308,3.752,2309,3.752,2310,3.752,2311,3.752,2312,2.763,2313,4.265,2314,4.265,2315,4.265,2316,2.763,2317,4.265,2318,6.33,2319,4.265,2320,5.886,2321,2.763,2322,4.265,2323,4.265,2324,2.431,2325,4.265,2326,4.265,2327,4.265,2328,2.763,2329,4.265,2330,5.857,2331,5.209,2332,2.763,2333,4.265,2334,2.763,2335,3.752,2336,2.763,2337,5.153,2338,5.569,2339,3.752,2340,2.431,2341,4.265,2342,3.752,2343,2.431,2344,2.763,2345,5.153,2346,3.752,2347,2.763,2348,4.265,2349,5.886,2350,3.752,2351,2.763,2352,2.763,2353,4.265,2354,2.763,2355,2.431,2356,4.265,2357,3.415,2358,3.415,2359,2.212,2360,2.212,2361,2.763,2362,4.265,2363,2.763,2364,2.431,2365,2.431,2366,2.763,2367,2.763,2368,2.763,2369,2.763,2370,2.763,2371,2.763,2372,2.763,2373,2.763,2374,2.763,2375,2.763,2376,2.763,2377,2.763,2378,2.763,2379,2.763,2380,2.763,2381,2.763,2382,2.763,2383,2.763,2384,2.763,2385,4.583,2386,2.763,2387,2.763,2388,2.763,2389,2.763,2390,2.763,2391,2.763,2392,2.763,2393,2.763,2394,2.763,2395,2.763]],["title/components/ProfilePage.html",[0,0.61,145,1.322]],["body/components/ProfilePage.html",[0,0.678,1,0.743,2,1.281,3,0.06,4,0.06,5,0.853,6,0.853,7,0.853,8,0.853,9,0.054,12,0.878,13,0.705,14,2.665,15,2.729,16,1.281,18,1.281,20,0.173,21,0.777,23,0.777,24,1.527,27,1.255,28,0.01,29,1.504,30,0.599,31,0.227,32,0.06,33,0.173,35,1.867,44,1.213,48,1.355,53,1.976,54,1.317,56,0.651,59,2.003,60,2.496,61,1.369,62,1.055,63,1.436,64,1.84,67,1.395,68,1.355,69,1.786,70,1.524,71,1.312,74,0.618,75,1.955,76,0.785,77,1.09,80,1.436,94,1.312,98,2.298,99,1.732,103,2.085,104,2.67,111,1.213,112,1.213,113,0.572,114,1.281,115,0.724,116,0.853,117,0.731,118,0.853,119,0.743,120,0.853,121,0.764,122,0.853,123,0.724,124,0.853,125,0.764,126,0.853,127,0.764,128,1.544,129,2.095,130,0.764,131,0.853,132,0.764,133,1.181,134,0.764,135,1.355,136,0.743,137,0.853,138,0.764,139,0.686,140,0.743,141,0.853,142,0.743,143,0.829,144,1.355,145,1.673,146,0.853,147,0.764,148,0.686,149,0.743,150,0.853,151,0.743,152,1.369,153,0.853,154,0.743,155,0.743,156,0.853,157,0.764,158,0.853,159,0.764,160,1.119,161,0.743,162,0.724,163,0.724,164,0.764,165,0.743,166,0.853,167,0.743,168,0.829,169,0.853,170,0.004,171,0.004,196,0.829,206,0.829,207,1.784,216,2.771,217,3.204,219,1.272,220,0.543,221,1.113,222,1.182,228,2.175,233,3.547,236,3.894,243,1.686,245,2.946,249,0.668,251,1.169,254,1.495,255,1.253,258,1.119,265,1.572,269,0.514,270,5.231,273,2.594,274,4.127,277,3.305,280,3.384,282,3.079,284,3.362,286,4.11,293,1.191,297,2.276,301,1.927,305,2.73,308,2.454,311,3.384,313,2.67,330,3.384,332,2.67,333,3.225,334,1.213,336,2.003,337,3.225,342,2.519,348,3.384,351,2.837,352,2.519,353,2.095,354,1.808,355,2.85,357,1.495,366,1.128,367,1.681,369,1.586,381,2.13,382,4.794,384,2.507,385,2.13,386,2.43,388,1.938,389,1.938,428,0.982,444,1.938,463,1.719,468,1.795,474,1.246,478,2.54,479,1.433,481,3.225,482,2.67,483,4.693,512,1.504,570,3.893,580,2.519,583,2.837,585,1.927,591,2.67,615,1.795,709,2.631,711,1.938,712,1.938,779,4.794,781,2.988,792,2.972,794,2.831,804,2.67,809,2.852,811,1.09,904,2.389,938,3.385,946,1.433,952,2.631,956,3.831,957,4.693,958,4.041,993,2.852,1019,3.225,1120,2.175,1132,3.079,1139,3.384,1416,1.795,1429,2.519,1512,3.831,1544,2.852,1569,1.586,1576,2.13,1577,4.794,1580,1.938,1636,2.67,1640,1.938,1685,2.852,1866,1.938,1868,2.67,1920,1.938,2029,3.547,2320,4.209,2396,2.13,2397,3.846,2398,3.846,2399,4.785,2400,3.846,2401,4.785,2402,4.785,2403,3.846,2404,5.45,2405,3.846,2406,3.846,2407,3.846,2408,5.45,2409,3.846,2410,2.421,2411,3.384,2412,3.846,2413,2.421,2414,6.329,2415,3.846,2416,3.384,2417,4.363,2418,2.421,2419,3.846,2420,3.846,2421,2.421,2422,3.846,2423,3.846,2424,2.421,2425,4.363,2426,3.846,2427,2.421,2428,3.846,2429,4.785,2430,3.846,2431,2.421,2432,2.421,2433,3.846,2434,3.384,2435,3.846,2436,3.846,2437,2.421,2438,2.421,2439,2.421,2440,2.421,2441,2.421,2442,2.421,2443,2.421,2444,2.421,2445,2.421,2446,2.421,2447,2.421,2448,2.421,2449,2.421,2450,2.13,2451,2.421,2452,2.421,2453,3.846,2454,2.421,2455,2.421,2456,2.421,2457,3.846,2458,2.421,2459,3.846,2460,4.785,2461,2.421,2462,2.421,2463,3.846,2464,3.846,2465,3.846,2466,2.421,2467,2.421,2468,2.421,2469,2.421,2470,2.421,2471,2.421,2472,2.421,2473,2.421,2474,2.421,2475,2.421,2476,2.421,2477,2.13,2478,2.13,2479,2.421,2480,2.421,2481,3.846,2482,3.846,2483,2.421,2484,2.13,2485,2.421,2486,6.329,2487,5.45,2488,2.421,2489,2.421,2490,2.421,2491,2.421,2492,2.421,2493,2.421]],["title/modules/ProfilePageModule.html",[172,1.128,2494,3.192]],["body/modules/ProfilePageModule.html",[3,0.151,4,0.151,9,0.136,28,0.01,30,0.701,31,0.571,32,0.151,33,0.435,113,1.439,145,2.634,170,0.008,171,0.008,172,1.596,174,2.209,175,2.414,176,3.573,177,2.743,178,2.49,179,2.342,184,3.62,185,3.322,186,2.654,187,2.209,189,2.923,190,2.923,191,4.582,192,3.605,195,4.365,196,2.087,197,3.445,199,3.171,333,3.605,711,5.905,712,4.877,2494,6.578,2495,5.36,2496,5.36,2497,5.36,2498,5.958,2499,6.092,2500,5.36]],["title/modules/ProfilePageRoutingModule.html",[172,1.128,2498,2.989]],["body/modules/ProfilePageRoutingModule.html",[0,0.894,3,0.156,4,0.156,9,0.141,28,0.01,30,0.674,31,0.591,32,0.156,33,0.451,113,1.489,145,2.312,170,0.008,171,0.008,172,1.652,174,2.287,175,2.499,176,2.84,177,2.84,178,2.578,179,2.896,184,3.649,185,3.392,186,2.747,187,2.287,189,2.985,190,2.985,199,3.283,203,3.567,204,4.034,205,4.26,206,2.16,207,1.696,208,1.885,209,3.732,2498,6.006,2500,5.549,2501,6.307,2502,6.307,2503,6.307]],["title/directives/ProgressDirective.html",[115,1.287,167,1.322]],["body/directives/ProgressDirective.html",[3,0.133,4,0.133,9,0.12,13,1.562,14,2.151,20,0.384,23,1.593,24,1.472,27,0.95,28,0.01,29,1.482,30,0.434,31,0.503,32,0.133,33,0.384,74,2.235,114,2.816,115,2.038,117,0.686,164,1.693,167,2.093,168,2.701,170,0.008,171,0.008,175,2.702,207,1.444,219,1.307,220,0.54,221,1.144,222,1.273,254,1.77,255,2.133,269,0.912,342,4.908,351,3.902,353,2.064,354,2.128,357,1.268,585,3.755,586,4.062,847,3.857,909,3.178,910,4.236,912,6.594,913,6.938,914,6.594,916,4.239,917,6,918,6.313,919,6,937,5.46,1371,2.567,2036,6.266,2434,6.594,2504,4.723,2505,8.319,2506,5.368,2507,5.368,2508,6.82,2509,6.82,2510,5.368,2511,5.368,2512,5.368,2513,5.368,2514,5.368,2515,5.368,2516,5.368,2517,5.368,2518,5.368,2519,5.368]],["title/interfaces/ProviderMetadata.html",[930,0.576,1503,1.816]],["body/interfaces/ProviderMetadata.html",[3,0.119,4,0.119,9,0.107,20,0.342,28,0.01,32,0.22,56,2.111,74,2.004,117,0.789,152,0.977,170,0.007,171,0.007,208,2.256,220,0.537,269,0.846,293,1.55,300,1.491,334,1.51,391,2.178,392,2.052,434,2.766,474,2.544,507,1.956,849,1.956,850,1.956,851,2.509,852,2.019,853,1.956,854,2.019,855,1.841,856,2.811,864,1.897,866,2.052,882,2.296,891,2.085,930,1.175,932,1.43,1086,1.736,1200,1.897,1209,1.687,1305,3.208,1370,1.897,1371,2.835,1483,2.992,1484,2.019,1485,2.992,1486,2.992,1487,2.992,1488,2.992,1489,2.992,1490,1.687,1491,2.156,1492,2.085,1493,1.956,1494,2.085,1495,2.587,1496,2.156,1497,2.156,1498,3.535,1499,3.535,1500,2.156,1501,2.085,1502,3.535,1503,3.47,1504,2.085,1505,2.156,1506,3.399,1507,3.399]],["title/components/RegisterFormComponent.html",[0,0.61,147,1.358]],["body/components/RegisterFormComponent.html",[0,0.868,1,1.113,2,1.74,3,0.13,4,0.09,5,1.278,6,1.278,7,1.278,8,1.278,9,0.081,12,1.315,13,1.055,14,2.785,15,2.849,16,1.74,18,1.74,20,0.259,21,1.056,23,1.056,24,1.327,27,1.084,28,0.01,29,1.001,30,0.574,31,0.34,32,0.09,33,0.259,35,2.535,48,1.841,53,2.221,54,1.242,56,0.975,58,1.95,59,2.067,60,1.894,63,1.353,64,2.009,65,1.816,66,1.816,67,1.894,68,1.278,69,2.502,70,2.07,74,1.334,76,1.693,77,1.633,80,2.286,81,2.07,82,2.832,83,3.245,84,3.245,85,2.688,88,2.252,91,3.759,93,1.816,99,1.633,111,1.816,112,1.816,113,0.856,114,1.74,115,1.083,116,1.278,117,0.8,118,1.278,119,1.113,120,1.278,121,1.143,122,1.278,123,1.083,124,1.278,125,1.143,126,1.278,127,1.143,128,1.027,129,2.503,130,1.143,131,1.278,132,1.143,133,1.604,134,1.143,135,1.841,136,1.113,137,1.278,138,1.143,139,1.027,140,1.113,141,1.278,142,1.113,143,1.242,144,1.841,145,1.113,146,1.278,147,2.114,148,2.254,149,1.113,150,1.278,151,1.113,152,0.945,153,1.278,154,1.113,155,1.113,156,1.278,157,1.143,158,1.278,159,1.143,160,1.52,161,1.113,162,1.083,163,1.083,164,1.143,165,1.113,166,1.278,167,1.113,168,1.242,169,1.278,170,0.006,171,0.006,187,1.315,194,1.579,196,1.242,219,1.002,220,0.459,221,0.876,222,0.677,245,2.933,254,1.446,255,0.95,258,1.52,265,2.135,269,0.698,300,1.207,305,2.617,308,2.353,319,1.887,335,3.245,354,1.523,357,0.856,366,1.69,386,2.739,392,1.175,428,0.925,463,1.143,474,1.175,478,1.69,664,1.816,826,3.464,866,1.175,876,4.611,882,1.315,941,3.624,942,3.092,945,1.751,981,3.421,1351,4.846,1429,3.421,1588,2.903,1629,3.19,1636,2.517,1644,2.517,1649,3.874,1738,3.245,1746,4.183,1762,2.517,1774,2.374,1775,4.252,1776,3.627,1780,5.52,1782,4.653,1802,3.627,1816,3.627,1827,2.688,1828,2.517,1829,4.653,2030,2.903,2051,4.183,2177,2.903,2178,2.903,2193,3.19,2196,4.597,2203,3.19,2207,3.19,2208,3.19,2209,3.19,2210,3.19,2219,5.925,2220,5.487,2228,4.597,2252,2.688,2261,4.597,2262,5.604,2385,3.19,2416,5.897,2417,4.183,2520,5.225,2521,5.225,2522,7.105,2523,3.626,2524,5.225,2525,5.225,2526,5.225,2527,5.225,2528,3.626,2529,3.19,2530,3.626,2531,3.626,2532,5.225,2533,3.626,2534,3.626,2535,3.626,2536,6.125,2537,3.626,2538,5.225,2539,5.225]],["title/components/RegisterPage.html",[0,0.61,149,1.322]],["body/components/RegisterPage.html",[0,0.932,1,1.266,2,1.906,3,0.176,4,0.102,5,1.453,6,1.453,7,1.453,8,1.453,9,0.092,12,1.495,13,1.2,14,2.815,15,2.883,16,1.906,18,1.906,20,0.295,21,1.156,23,1.156,24,1.069,27,0.73,28,0.01,29,1.138,30,0.602,31,0.387,32,0.102,33,0.295,35,1.96,48,2.017,53,2.87,54,2.555,55,2.863,56,1.909,57,3.302,58,2.65,59,2.348,60,2.798,61,2.332,62,1.796,63,2.65,64,3.15,65,3.556,66,3.292,67,2.574,68,2.501,69,2.955,70,2.604,71,3.102,72,2.235,74,1.678,75,2.339,76,2.301,77,2.577,80,1.539,81,1.634,82,2.235,90,3.421,91,1.796,92,2.562,93,2.066,94,2.235,97,2.562,98,2.414,99,1.857,100,2.147,101,2.147,106,2.562,111,2.066,112,2.066,113,0.974,114,1.906,115,1.232,116,1.453,117,0.75,118,1.453,119,1.266,120,1.453,121,1.301,122,1.453,123,1.232,124,1.453,125,1.301,126,1.453,127,1.301,128,1.169,129,2.628,130,1.301,131,1.453,132,1.301,133,1.757,134,1.301,135,2.017,136,1.266,137,1.453,138,1.301,139,1.169,140,1.266,141,1.453,142,1.266,143,1.413,144,2.017,145,1.266,146,1.453,147,1.301,148,2.012,149,2.179,150,1.453,151,1.266,152,1.222,153,1.453,154,1.266,155,1.266,156,1.453,157,1.301,158,1.453,159,1.301,160,1.665,161,1.266,162,1.232,163,1.232,164,1.301,165,1.266,166,1.453,167,1.266,168,1.413,169,1.453,170,0.006,171,0.006,206,1.413,215,2.863,216,3.308,217,3.821,219,1.097,220,0.392,221,0.96,222,0.77,223,3.386,251,1.991,254,0.974,255,1.499,293,0.901,305,2.867,341,3.386,366,1.922,575,1.857,826,4.015,870,3.302,876,2.235,877,3.302,946,2.44,1124,5.683,1140,3.302,1634,2.562,2174,4.582,2218,3.628,2229,3.628,2230,3.628,2231,3.628,2232,3.302,2233,3.628,2234,3.628,2235,3.628,2540,3.628,2541,6.572,2542,5.723,2543,5.723,2544,4.124,2545,5.723,2546,4.124,2547,4.124,2548,4.124,2549,5.723]],["title/modules/RegisterPageModule.html",[172,1.128,2550,3.192]],["body/modules/RegisterPageModule.html",[3,0.151,4,0.151,9,0.136,28,0.01,30,0.701,31,0.571,32,0.151,33,0.435,113,1.439,148,1.726,149,2.634,170,0.008,171,0.008,172,1.596,174,2.209,175,2.414,176,3.573,177,2.743,178,2.49,179,2.342,184,3.62,185,3.322,186,2.654,187,2.209,189,2.923,190,2.923,191,4.582,192,3.605,193,4.831,194,2.654,195,4.365,196,2.087,197,3.445,199,3.171,2550,6.578,2551,5.36,2552,5.36,2553,5.36,2554,5.958,2555,6.092,2556,5.36]],["title/modules/RegisterPageRoutingModule.html",[172,1.128,2554,2.989]],["body/modules/RegisterPageRoutingModule.html",[0,0.936,3,0.164,4,0.164,9,0.147,28,0.01,30,0.663,31,0.619,32,0.164,33,0.472,149,2.375,170,0.009,171,0.009,174,2.393,179,2.538,189,2.616,190,3.066,203,3.733,204,4.112,205,4.376,206,2.261,207,1.775,208,1.973,209,3.906,2554,5.371,2556,5.807,2557,6.601]],["title/modules/SharedModule.html",[172,1.128,184,1.816]],["body/modules/SharedModule.html",[2,1.724,3,0.089,4,0.089,9,0.08,28,0.01,30,0.719,31,0.336,32,0.089,33,0.256,113,0.845,115,1.069,125,2.598,127,2.598,130,2.598,132,2.598,134,2.598,138,2.598,142,2.529,147,2.598,151,2.529,154,2.529,155,2.529,157,2.598,159,2.598,161,2.529,164,1.128,165,2.529,167,2.591,170,0.006,171,0.006,172,0.937,174,1.297,175,1.418,176,2.738,177,1.611,178,1.462,179,2.338,184,3.845,185,2.331,186,1.559,187,1.297,189,1.418,190,2.051,191,3.777,192,2.117,193,3.981,194,1.559,195,3.598,196,1.226,492,4.553,493,3.148,601,2.865,602,2.865,685,3.593,687,2.653,703,4.553,704,4.553,706,2.024,707,2.117,708,3.837,735,2.653,736,2.484,737,3.148,738,3.148,934,2.653,943,2.484,944,4.629,947,2.484,948,2.865,1572,2.653,1574,2.484,1922,2.653,1957,2.343,1958,5.859,1959,2.484,1986,5.859,2087,2.865,2192,2.865,2220,2.653,2291,2.653,2558,3.148,2559,3.148,2560,3.148,2561,3.578,2562,5.175,2563,3.578,2564,3.578,2565,3.578,2566,3.578,2567,3.578,2568,5.175,2569,2.865,2570,5.175,2571,2.653,2572,5.175,2573,3.578,2574,5.175,2575,3.578,2576,3.578,2577,3.578,2578,3.578,2579,3.578,2580,3.578,2581,3.578,2582,6.08,2583,3.578,2584,3.578,2585,4.553,2586,3.148,2587,4.553,2588,5.175,2589,3.578,2590,5.175,2591,3.578,2592,3.578,2593,3.578,2594,3.578,2595,3.578,2596,3.578]],["title/interfaces/Small.html",[930,0.576,1487,1.816]],["body/interfaces/Small.html",[3,0.112,4,0.112,9,0.101,20,0.322,28,0.01,32,0.219,56,2.216,74,2.103,117,0.828,152,0.938,170,0.007,171,0.007,208,2.421,220,0.591,269,0.813,293,1.503,300,1.492,334,1.42,391,2.112,392,1.97,434,2.903,474,2.67,507,1.84,849,1.84,850,1.84,851,2.409,852,1.899,853,1.84,854,1.899,855,1.732,856,2.726,864,1.785,866,1.97,882,2.204,891,1.962,930,1.166,932,1.346,1086,1.633,1200,1.785,1209,1.587,1305,3.367,1370,1.785,1371,2.846,1483,2.902,1484,1.899,1485,2.902,1486,2.902,1487,3.107,1488,2.902,1489,2.902,1490,1.587,1491,2.028,1492,1.962,1493,1.84,1494,1.962,1495,2.484,1496,2.028,1497,2.028,1498,3.71,1499,3.71,1500,2.028,1501,1.962,1502,3.71,1503,3.475,1504,1.962,1505,2.028,1506,2.028,1507,2.028]],["title/interfaces/StrapiArrayResponse.html",[930,0.576,1200,1.706]],["body/interfaces/StrapiArrayResponse.html",[3,0.118,4,0.118,9,0.107,20,0.341,28,0.01,32,0.22,56,2.11,74,2.002,117,0.789,152,0.976,170,0.007,171,0.007,208,2.254,220,0.563,269,0.845,293,1.761,300,1.487,334,1.506,358,3.927,391,2.175,392,2.049,434,2.764,474,2.542,507,1.952,849,1.952,850,1.952,851,2.505,852,2.014,853,1.952,854,2.014,855,1.836,856,2.808,864,1.892,866,2.049,882,2.292,891,2.08,930,1.175,932,1.427,1086,1.732,1200,2.505,1209,1.683,1305,3.206,1370,1.892,1371,2.834,1483,2.988,1484,2.014,1485,2.988,1486,2.988,1487,2.988,1488,2.988,1489,3.309,1490,1.683,1491,3.396,1492,2.08,1493,1.952,1494,2.08,1495,2.583,1496,2.151,1497,2.151,1498,3.533,1499,3.533,1500,2.151,1501,2.08,1502,3.533,1503,3.4,1504,2.08,1505,2.151,1506,2.151,1507,2.151]],["title/interfaces/StrapiData.html",[930,0.576,1489,1.816]],["body/interfaces/StrapiData.html",[3,0.119,4,0.119,9,0.107,20,0.342,28,0.01,32,0.22,56,2.111,74,2.004,117,0.789,152,0.977,170,0.007,171,0.007,208,2.256,220,0.537,269,0.846,293,1.55,300,1.488,334,1.51,391,2.476,392,2.052,434,2.766,474,2.544,507,1.956,849,1.956,850,1.956,851,2.509,852,2.019,853,1.956,854,2.019,855,1.841,856,2.811,864,1.897,866,2.052,882,2.296,891,2.085,930,1.175,932,1.43,1086,2.572,1200,1.897,1209,1.687,1305,3.208,1370,1.897,1371,2.843,1483,2.992,1484,2.019,1485,2.992,1486,2.992,1487,2.992,1488,2.992,1489,3.184,1490,2.66,1491,2.156,1492,2.085,1493,1.956,1494,2.085,1495,2.587,1496,2.156,1497,2.156,1498,3.535,1499,3.535,1500,2.156,1501,2.085,1502,3.535,1503,3.402,1504,2.085,1505,2.156,1506,2.156,1507,2.156]],["title/classes/StrapiDataService.html",[33,0.308,696,3.192]],["body/classes/StrapiDataService.html",[3,0.117,4,0.117,9,0.105,20,0.336,21,1.264,23,1.264,24,1.529,27,1.42,28,0.01,30,0.648,31,0.441,32,0.117,33,0.336,117,0.823,170,0.007,171,0.007,219,1.665,220,0.595,221,1.373,243,2.931,247,1.199,248,2.19,249,1.297,258,2.513,273,2.72,293,1.753,300,1.436,495,3.394,498,2.816,503,4.096,504,4.096,512,3.885,694,4.763,696,4.637,698,4.134,724,3.077,792,2.919,828,3.262,831,4.341,838,5.57,847,2.658,855,1.807,857,3.762,858,3.262,1082,4.096,1083,5.007,1084,3.762,1086,2.909,1087,6.424,1088,3.762,1090,3.762,1092,3.762,1094,3.762,1096,5.007,1098,2.658,1099,3.762,1101,3.762,1102,3.762,1103,3.762,1104,3.762,1105,5.007,1106,3.762,1107,3.762,1190,3.077,1191,3.762,1192,4.134,1200,1.862,1203,4.134,1204,4.134,1205,4.134,1206,5.502,1207,5.502,1208,5.502,1209,2.204,1210,5.502,1211,4.134,1212,6.184,1213,6.593,1214,4.134,1215,4.134,1216,4.134,1217,4.134,1218,4.134,1219,4.134,2597,5.502,2598,4.699,2599,4.699,2600,4.699,2601,4.699,2602,4.699,2603,4.699,2604,7.029,2605,4.699,2606,4.699]],["title/interfaces/StrapiExtendedUser.html",[849,1.76,930,0.576]],["body/interfaces/StrapiExtendedUser.html",[3,0.119,4,0.119,9,0.107,20,0.344,28,0.01,32,0.22,56,2.115,74,2.008,117,0.791,152,0.981,170,0.007,171,0.007,208,2.261,220,0.553,269,0.85,293,1.765,300,1.488,334,1.518,358,3.948,391,2.184,392,2.06,434,2.772,474,2.549,507,1.968,849,2.597,850,1.968,851,2.519,852,2.031,853,1.968,854,2.031,855,1.851,856,2.819,864,1.908,866,2.06,882,2.304,891,2.097,930,1.176,932,1.439,1086,1.746,1200,1.908,1209,1.697,1305,3.215,1370,1.908,1371,2.836,1483,3.001,1484,2.031,1485,3.001,1486,3.001,1487,3.001,1488,3.001,1489,3.001,1490,1.697,1491,2.168,1492,2.097,1493,1.968,1494,2.097,1495,2.597,1496,2.168,1497,2.168,1498,3.542,1499,3.542,1500,2.168,1501,2.097,1502,3.542,1503,3.407,1504,2.097,1505,2.168,1506,2.168,1507,2.168]],["title/interfaces/StrapiLoginPayload.html",[850,1.76,930,0.576]],["body/interfaces/StrapiLoginPayload.html",[3,0.119,4,0.119,9,0.107,20,0.342,28,0.01,32,0.22,56,2.111,74,2.004,117,0.789,152,0.977,170,0.007,171,0.007,208,2.256,220,0.537,269,0.846,293,1.55,300,1.491,334,1.51,391,2.178,392,2.052,434,2.766,474,2.544,507,1.956,849,1.956,850,2.587,851,2.509,852,2.019,853,1.956,854,2.019,855,1.841,856,2.811,864,2.991,866,2.544,882,2.296,891,2.085,930,1.175,932,1.43,1086,1.736,1200,1.897,1209,1.687,1305,3.208,1370,1.897,1371,2.835,1483,2.992,1484,2.019,1485,2.992,1486,2.992,1487,2.992,1488,2.992,1489,2.992,1490,1.687,1491,2.156,1492,2.085,1493,1.956,1494,2.085,1495,2.587,1496,2.156,1497,2.156,1498,3.535,1499,3.535,1500,2.156,1501,2.085,1502,3.535,1503,3.402,1504,2.085,1505,2.156,1506,2.156,1507,2.156]],["title/interfaces/StrapiLoginResponse.html",[851,1.706,930,0.576]],["body/interfaces/StrapiLoginResponse.html",[3,0.119,4,0.119,9,0.107,20,0.342,28,0.01,32,0.22,56,2.111,74,2.004,117,0.789,152,1.212,170,0.007,171,0.007,208,2.256,220,0.537,269,0.846,293,1.55,300,1.489,334,1.51,391,2.178,392,2.052,434,2.766,474,2.544,507,3.085,849,1.956,850,1.956,851,2.811,852,2.019,853,1.956,854,2.019,855,1.841,856,3.111,864,1.897,866,2.052,882,2.296,891,2.085,930,1.175,932,1.43,1086,1.736,1200,1.897,1209,1.687,1305,3.208,1370,1.897,1371,2.835,1483,2.992,1484,2.019,1485,2.992,1486,2.992,1487,2.992,1488,2.992,1489,2.992,1490,1.687,1491,2.156,1492,2.085,1493,1.956,1494,2.085,1495,2.587,1496,2.156,1497,2.156,1498,3.535,1499,3.535,1500,2.156,1501,2.085,1502,3.535,1503,3.402,1504,2.085,1505,2.156,1506,2.156,1507,2.156]],["title/interfaces/StrapiMedia.html",[930,0.576,1495,1.76]],["body/interfaces/StrapiMedia.html",[3,0.106,4,0.106,9,0.096,20,0.307,28,0.01,32,0.218,56,2.191,74,2.08,117,0.819,152,0.908,170,0.007,171,0.007,208,2.158,220,0.604,269,0.786,293,1.466,300,1.492,334,1.354,391,2.398,392,1.906,434,2.871,474,2.64,507,1.754,849,1.754,850,1.754,851,2.331,852,1.81,853,1.754,854,1.81,855,1.65,856,2.66,864,1.701,866,1.906,882,2.133,891,1.87,930,1.159,932,1.283,1086,1.556,1200,1.701,1209,1.512,1305,3.329,1370,1.701,1371,2.843,1483,3.436,1484,1.81,1485,2.831,1486,2.831,1487,2.831,1488,2.831,1489,2.831,1490,1.512,1491,1.933,1492,1.87,1493,1.754,1494,1.87,1495,2.743,1496,3.252,1497,3.252,1498,3.669,1499,3.669,1500,3.252,1501,3.145,1502,3.669,1503,3.436,1504,3.145,1505,3.252,1506,1.933,1507,1.933]],["title/interfaces/StrapiRegisterPayload.html",[853,1.76,930,0.576]],["body/interfaces/StrapiRegisterPayload.html",[3,0.118,4,0.118,9,0.106,20,0.339,28,0.01,32,0.22,56,2.105,74,1.999,117,0.787,152,0.972,170,0.007,171,0.007,208,2.249,220,0.551,269,0.842,293,1.544,300,1.492,334,1.497,391,2.169,392,2.537,434,2.759,474,2.537,507,1.94,849,1.94,850,1.94,851,2.495,852,2.002,853,2.573,854,2.002,855,1.826,856,2.8,864,1.882,866,2.537,882,2.839,891,2.068,930,1.174,932,1.419,1086,1.722,1200,1.882,1209,1.673,1305,3.2,1370,1.882,1371,2.833,1483,2.98,1484,2.002,1485,2.98,1486,2.98,1487,2.98,1488,2.98,1489,2.98,1490,1.673,1491,2.138,1492,2.068,1493,1.94,1494,2.068,1495,2.573,1496,2.138,1497,2.138,1498,3.526,1499,3.526,1500,2.138,1501,2.068,1502,3.526,1503,3.394,1504,2.068,1505,2.138,1506,2.138,1507,2.138]],["title/interfaces/StrapiResponse.html",[855,1.656,930,0.576]],["body/interfaces/StrapiResponse.html",[3,0.12,4,0.12,9,0.108,20,0.345,28,0.01,32,0.22,56,2.117,74,2.009,117,0.791,152,0.983,170,0.007,171,0.007,208,2.263,220,0.518,269,0.851,293,1.766,300,1.488,334,1.522,391,2.186,392,2.063,434,2.774,474,2.551,507,1.972,849,1.972,850,1.972,851,2.522,852,2.035,853,1.972,854,2.035,855,2.448,856,2.823,864,1.912,866,2.063,882,2.308,891,2.102,930,1.176,932,1.442,1086,1.75,1200,1.912,1209,1.701,1305,3.217,1370,1.912,1371,2.837,1483,3.004,1484,2.035,1485,3.004,1486,3.004,1487,3.004,1488,3.004,1489,3.32,1490,1.701,1491,2.173,1492,2.102,1493,1.972,1494,2.102,1495,2.601,1496,2.173,1497,2.173,1498,3.545,1499,3.545,1500,2.173,1501,2.102,1502,3.545,1503,3.41,1504,2.102,1505,2.173,1506,2.173,1507,2.173]],["title/interfaces/StrapiUser.html",[856,1.706,930,0.576]],["body/interfaces/StrapiUser.html",[3,0.118,4,0.118,9,0.106,20,0.339,28,0.01,32,0.22,56,2.105,74,1.999,117,0.787,152,0.972,170,0.007,171,0.007,208,2.249,220,0.551,269,0.842,293,1.544,300,1.491,334,1.497,391,2.47,392,2.537,434,2.759,474,2.537,507,1.94,849,1.94,850,1.94,851,2.495,852,2.002,853,1.94,854,2.002,855,1.826,856,2.982,864,1.882,866,2.041,882,2.839,891,2.068,930,1.174,932,1.419,1086,1.722,1200,1.882,1209,1.673,1305,3.2,1370,1.882,1371,2.842,1483,2.98,1484,2.002,1485,2.98,1486,2.98,1487,2.98,1488,2.98,1489,2.98,1490,1.673,1491,2.138,1492,2.068,1493,1.94,1494,2.068,1495,2.573,1496,2.138,1497,2.138,1498,3.526,1499,3.526,1500,2.138,1501,2.068,1502,3.526,1503,3.394,1504,2.068,1505,2.138,1506,2.138,1507,2.138]],["title/interfaces/Thumbnail.html",[930,0.576,1488,1.816]],["body/interfaces/Thumbnail.html",[3,0.112,4,0.112,9,0.101,20,0.322,28,0.01,32,0.219,56,2.216,74,2.103,117,0.828,152,0.938,170,0.007,171,0.007,208,2.421,220,0.591,269,0.813,293,1.503,300,1.492,334,1.42,391,2.112,392,1.97,434,2.903,474,2.67,507,1.84,849,1.84,850,1.84,851,2.409,852,1.899,853,1.84,854,1.899,855,1.732,856,2.726,864,1.785,866,1.97,882,2.204,891,1.962,930,1.166,932,1.346,1086,1.633,1200,1.785,1209,1.587,1305,3.367,1370,1.785,1371,2.846,1483,2.902,1484,1.899,1485,2.902,1486,2.902,1487,2.902,1488,3.107,1489,2.902,1490,1.587,1491,2.028,1492,1.962,1493,1.84,1494,1.962,1495,2.484,1496,2.028,1497,2.028,1498,3.71,1499,3.71,1500,2.028,1501,1.962,1502,3.71,1503,3.475,1504,1.962,1505,2.028,1506,2.028,1507,2.028]],["title/interfaces/User.html",[152,0.665,930,0.576]],["body/interfaces/User.html",[3,0.143,4,0.143,9,0.129,20,0.412,28,0.01,30,0.466,32,0.143,128,2.356,152,1.249,170,0.008,171,0.008,220,0.603,221,1.49,222,1.077,235,5.376,269,0.954,300,1.46,337,4.583,391,2.484,392,2.51,581,5.711,618,4.583,903,5.299,904,5.026,930,0.771,932,1.723,1163,5.999,1164,6.813,1177,5.742,1180,5.742,1371,2.622,1725,4.221,2607,5.074,2608,7.745,2609,5.767,2610,4.617,2611,5.767,2612,5.767,2613,5.767,2614,5.767]],["title/components/UserCardComponent.html",[0,0.61,151,1.322]],["body/components/UserCardComponent.html",[0,0.883,1,0.637,2,1.131,3,0.146,4,0.051,5,0.731,6,0.731,7,0.731,8,0.731,9,0.046,11,1.479,12,1.563,13,0.604,14,2.609,15,2.657,16,1.131,18,1.131,20,0.148,21,0.686,22,2.406,23,0.686,24,1.396,27,0.973,28,0.01,29,1.517,30,0.503,31,0.195,32,0.051,33,0.148,35,2.371,44,2.956,48,1.197,53,2.623,54,2.021,55,2.358,56,1.748,58,1.268,59,2.105,60,2.957,61,2.438,62,1.878,63,2.203,64,2.587,65,2.16,66,2.16,67,2.14,68,1.197,69,2.203,70,1.974,71,3.751,74,1.403,75,1.762,76,1.912,77,1.941,78,2.358,79,2.11,80,2.051,81,1.346,90,2.594,91,2.17,93,1.04,94,2.337,95,3.69,97,3.414,98,2.837,99,2.805,100,1.08,101,1.08,103,1.125,106,1.289,107,1.441,108,1.441,111,1.04,112,1.04,113,0.49,114,1.131,115,0.62,116,0.731,117,0.653,118,0.731,119,0.637,120,0.731,121,0.654,122,0.731,123,0.62,124,0.731,125,0.654,126,0.731,127,0.654,128,0.588,129,1.936,130,0.654,131,0.731,132,0.654,133,1.043,134,0.654,135,1.197,136,0.637,137,0.731,138,0.654,139,0.588,140,0.637,141,0.731,142,0.637,143,0.711,144,1.197,145,0.637,146,0.731,147,0.654,148,0.588,149,0.637,150,0.731,151,1.687,152,1.326,153,0.731,154,1.323,155,1.323,156,0.731,157,0.654,158,0.731,159,0.654,160,0.988,161,0.637,162,0.62,163,0.62,164,0.654,165,0.637,166,0.731,167,0.637,168,0.711,169,0.731,170,0.004,171,0.004,196,0.711,207,0.913,216,2.009,219,1.054,220,0.536,221,0.921,222,0.93,236,1.921,245,1.306,251,1.002,254,1.394,255,1.546,269,0.454,274,2.358,277,2.75,284,2.438,293,1.201,300,1.157,305,2.496,308,3.315,313,2.358,319,1.08,333,3.252,336,1.812,347,1.768,351,1.768,353,1.916,354,1.239,355,0.935,357,1.177,358,1.289,366,0.967,369,1.359,370,2.993,384,1.432,386,1.388,428,1.1,463,2.183,468,3.196,471,1.539,472,2.224,473,2.224,474,1.912,478,3.371,479,3.492,483,3.196,570,2.224,585,1.701,618,1.228,637,1.826,643,2.358,648,1.125,649,4.091,650,2.7,657,1.441,659,1.661,660,1.174,669,1.359,719,1.878,725,1.228,726,2.948,903,3.263,904,3.414,909,1.583,916,2.438,923,2.719,930,0.454,931,4.988,933,5.26,934,5.618,935,1.661,936,3.815,937,1.661,938,4.179,939,5.919,940,5.718,941,3.686,942,2.948,943,1.441,944,1.359,945,2.406,946,1.228,947,1.441,948,1.661,949,1.826,950,2.988,951,3.793,952,3.493,953,1.826,954,1.826,955,3.793,956,3.452,957,5.746,958,5.364,959,4.835,960,2.988,961,2.988,962,2.358,963,2.988,964,2.988,965,3.452,966,3.793,967,4.257,968,4.383,969,2.224,970,2.988,971,4.962,972,2.988,973,5.675,974,2.988,975,2.01,976,1.826,977,4.383,978,1.826,979,3.846,980,2.518,981,3.263,982,2.988,983,1.826,984,1.826,985,1.826,986,1.826,987,3.095,988,1.826,989,1.826,990,1.826,991,1.826,992,2.358,993,3.694,994,2.988,995,2.988,996,4.375,997,1.539,998,1.289,999,1.826,1000,4.383,1001,1.661,1002,1.826,1003,2.518,1004,2.518,1005,2.224,1006,2.518,1007,2.988,1008,2.358,1009,2.518,1010,2.988,1011,3.196,1012,2.518,1013,2.518,1014,2.518,1015,1.539,1016,1.539,1017,1.539,1018,2.988,1019,2.948,1020,4.4,1021,2.988,1022,1.826,1023,4.4,1024,3.793,1025,3.793,1026,1.826,1517,2.358,1543,2.988,1647,1.826,1649,2.518,1738,2.11,1759,1.826,1760,1.539,1772,1.228,2032,2.993,2181,2.988,2484,2.988,2615,3.396,2616,3.396,2617,3.396,2618,2.075,2619,2.075,2620,2.075,2621,2.075,2622,2.075,2623,2.075,2624,2.075,2625,2.075,2626,2.075,2627,2.075,2628,2.075,2629,2.075,2630,2.075,2631,2.075,2632,2.075,2633,2.075,2634,3.396,2635,2.075,2636,3.396,2637,3.396,2638,2.988,2639,3.396,2640,3.396,2641,3.396,2642,3.396,2643,3.396,2644,3.396,2645,2.075,2646,2.075,2647,2.075,2648,2.075,2649,2.075,2650,2.075,2651,2.075,2652,2.075,2653,2.075,2654,1.826,2655,2.075,2656,2.075,2657,2.075,2658,2.075,2659,3.793,2660,2.075,2661,2.075,2662,2.075,2663,2.075,2664,2.075,2665,1.826,2666,2.075,2667,3.396,2668,2.075,2669,2.075,2670,3.396,2671,2.075,2672,2.075,2673,2.075,2674,4.311]],["title/interfaces/UserCredentials.html",[825,2.548,930,0.576]],["body/interfaces/UserCredentials.html",[3,0.166,4,0.166,9,0.15,20,0.479,28,0.01,32,0.166,152,1.034,170,0.009,171,0.009,220,0.534,222,1.251,224,4.386,269,1.043,300,1.388,366,3.121,392,2.676,799,4.16,825,4.617,866,2.676,930,0.895,932,2.001,1725,3.963,2610,5.362,2675,5.892,2676,6.698,2677,5.892]],["title/components/UserFormComponent.html",[0,0.61,154,1.322]],["body/components/UserFormComponent.html",[0,0.865,1,1.106,2,1.733,3,0.089,4,0.089,5,1.27,6,1.27,7,1.27,8,1.27,9,0.08,13,1.049,14,2.783,15,2.854,16,1.733,18,1.733,20,0.258,21,1.051,23,1.051,24,1.421,27,1.254,28,0.01,29,1.685,30,0.54,31,0.338,32,0.089,33,0.258,35,2.67,48,1.833,53,1.886,54,1.234,58,1.345,59,2.062,60,1.886,62,1.57,63,1.942,64,2.57,65,2.606,66,2.606,67,1.307,68,1.27,69,1.942,70,1.428,74,0.92,75,1.473,79,2.238,80,1.345,81,1.428,91,3.627,93,1.805,98,1.52,113,0.851,114,1.733,115,1.077,116,1.27,117,0.742,118,1.27,119,1.106,120,1.27,121,1.136,122,1.27,123,1.077,124,1.27,125,1.136,126,1.27,127,1.136,128,1.021,129,2.497,130,1.136,131,1.27,132,1.136,133,1.597,134,1.136,135,1.833,136,1.106,137,1.27,138,1.136,139,1.021,140,1.106,141,1.27,142,1.106,143,1.782,144,1.833,145,1.106,146,1.27,147,1.136,148,1.021,149,1.106,150,1.27,151,1.106,152,1.331,153,1.27,154,2.052,155,1.106,156,1.27,157,1.136,158,1.27,159,1.136,160,1.514,161,1.106,162,1.077,163,1.077,164,1.136,165,1.106,166,1.27,167,1.106,168,1.234,169,1.27,170,0.006,171,0.006,194,1.57,196,1.234,219,1.17,220,0.485,221,1.023,222,0.673,254,0.851,255,1.363,258,1.049,269,0.695,293,1.137,301,2.606,336,1.514,353,2,366,1.679,392,1.168,463,2.108,476,2.36,483,2.672,586,1.953,591,5.127,656,2.238,794,3.078,909,2.424,910,3.231,918,2.885,933,5.41,938,4.152,943,5.41,945,3.227,952,3.227,998,3.792,1117,4.576,1177,2.672,1180,2.672,1393,3.406,1640,2.885,1772,2.132,1774,2.36,1775,4.237,1776,3.611,1778,4.955,1780,4.64,1781,2.885,1782,5.285,1785,4.164,1790,4.955,1791,4.526,1802,5.127,1803,4.576,1816,2.501,1828,2.501,1829,2.501,1840,2.885,2029,2.672,2040,3.17,2047,7.092,2086,4.64,2296,2.885,2529,3.17,2638,4.576,2678,6.104,2679,5.202,2680,5.202,2681,3.604,2682,8.062,2683,5.202,2684,5.202,2685,5.202,2686,3.604,2687,4.576,2688,4.576,2689,3.604,2690,3.604,2691,3.604,2692,3.604,2693,3.604,2694,3.604,2695,3.604,2696,3.604,2697,3.604,2698,5.202,2699,3.604,2700,3.604,2701,3.604,2702,3.604,2703,3.604,2704,3.604,2705,3.604,2706,3.604,2707,3.604,2708,5.202,2709,5.202,2710,5.202,2711,3.17,2712,3.604,2713,3.604]],["title/components/UserListComponent.html",[0,0.61,155,1.322]],["body/components/UserListComponent.html",[0,0.841,1,1.053,2,1.671,3,0.085,4,0.085,5,1.208,6,1.208,7,1.208,8,1.208,9,0.077,11,2.186,12,2.151,13,0.998,14,2.77,15,2.833,16,1.671,18,1.671,20,0.245,21,1.014,22,3.153,23,1.014,24,1.435,27,1.156,28,0.01,29,1.385,30,0.561,31,0.322,32,0.085,33,0.245,35,1.719,48,1.768,53,2.844,56,1.349,58,1.28,59,2.282,60,2.963,62,2.585,74,1.281,75,1.401,76,1.111,80,1.28,90,1.785,94,3.216,98,2.93,103,2.719,113,0.81,114,1.671,115,1.025,116,1.208,117,0.699,118,1.208,119,1.053,120,1.208,121,1.081,122,1.208,123,1.025,124,1.208,125,1.081,126,1.208,127,1.081,128,0.972,129,2.448,130,1.081,131,1.208,132,1.081,133,1.54,134,1.081,135,1.768,136,1.053,137,1.208,138,1.081,139,0.972,140,1.053,141,1.208,142,1.053,143,1.175,144,1.768,145,1.053,146,1.208,147,1.081,148,0.972,149,1.053,150,1.208,151,1.053,152,1.359,153,1.208,154,1.053,155,2.004,156,1.208,157,1.081,158,1.208,159,1.081,160,1.46,161,1.053,162,1.025,163,1.025,164,1.081,165,1.053,166,1.208,167,1.053,168,1.175,169,1.208,170,0.006,171,0.006,196,1.175,206,1.175,207,0.922,217,3.355,219,0.962,220,0.476,221,0.841,222,0.64,225,4.017,233,2.542,236,3.93,254,0.81,255,1.554,257,2.38,269,0.671,274,4.119,277,3.383,284,3.693,293,1.68,297,2.969,300,1.184,332,3.483,333,4.295,334,2.059,335,3.117,336,0.998,337,4.437,342,3.286,345,4.414,347,2.612,351,2.612,353,2.281,354,1.476,357,1.401,366,1.598,369,2.246,384,2.502,388,2.745,420,3.72,444,2.745,476,3.286,477,2.13,479,2.969,591,4.533,649,3.693,656,2.13,659,4.017,660,1.939,664,1.718,667,2.38,669,2.246,909,2.338,916,1.939,933,5.444,938,3.117,945,3.505,947,5.444,952,3.153,993,3.72,1019,4.112,1020,5.227,1023,4.75,1066,3.72,1155,4.414,1634,3.117,1778,4.841,1790,4.841,1791,3.72,1795,4.414,1877,4.017,1927,3.72,2086,3.483,2411,4.414,2477,3.017,2478,3.017,2665,3.017,2687,4.414,2688,4.414,2714,3.017,2715,5.934,2716,5.017,2717,5.017,2718,6.53,2719,3.429,2720,5.017,2721,3.429,2722,3.429,2723,5.017,2724,3.429,2725,5.017,2726,3.429,2727,5.017,2728,5.017,2729,5.017,2730,3.429,2731,3.429,2732,3.429,2733,3.429,2734,5.017,2735,3.429,2736,3.429,2737,5.934,2738,3.429,2739,3.429,2740,3.017,2741,3.017,2742,3.429,2743,3.429]],["title/interfaces/UserRegisterInfo.html",[826,2.435,930,0.576]],["body/interfaces/UserRegisterInfo.html",[3,0.163,4,0.163,9,0.147,20,0.47,28,0.01,32,0.163,148,1.862,152,1.014,170,0.009,171,0.009,220,0.561,222,1.227,269,1.032,300,1.425,341,3.887,366,3.061,392,2.655,428,1.677,826,4.363,866,2.655,882,2.97,930,0.878,932,1.963,1064,4.871,1124,5.259,1443,4.871,1725,3.887,2610,5.259,2677,5.779,2744,5.779,2745,6.569,2746,6.569]],["title/injectables/UserService.html",[247,1.099,284,2.435]],["body/injectables/UserService.html",[3,0.147,4,0.06,9,0.107,20,0.173,21,0.776,23,0.776,24,1.43,27,1.416,28,0.01,29,1.061,30,0.48,31,0.227,32,0.06,33,0.173,51,2.63,76,0.784,117,0.692,128,1.355,152,1.386,170,0.004,171,0.004,207,2.255,216,2.538,219,1.319,220,0.508,221,1.154,222,1.238,228,1.368,232,2.274,236,4.524,243,2.841,244,4.195,245,2.285,247,0.981,249,0.668,251,1.168,252,1.089,253,0.988,254,1.782,255,1.803,258,2.284,261,1.936,265,0.988,269,0.514,273,2.525,277,3.304,284,2.173,293,1.298,300,1.231,323,1.793,333,2.274,336,1.118,337,4.591,341,3.223,346,2.829,354,1.189,355,2.676,357,1.129,384,2.668,386,0.988,389,4.36,391,1.179,392,2.514,420,1.793,428,1.757,434,0.852,463,1.874,481,2.274,496,1.127,570,3.131,583,2,618,2.274,643,1.679,709,2.63,719,1.674,730,1.793,781,3.099,811,2.676,812,1.793,876,2.952,903,4.643,904,4.758,916,2.173,957,2.849,958,2.849,973,3.076,1037,3.583,1120,3.08,1132,3.076,1133,2.387,1163,4.917,1177,4.038,1180,4.038,1235,2.667,1319,1.679,1321,1.679,1360,4.406,1368,2.849,1369,3.566,1391,2.849,1393,2.516,1402,2.387,1604,3.381,1648,1.679,1866,1.936,1868,2.667,1889,1.936,1890,1.793,1893,4.391,1896,4.391,1948,3.381,1951,3.381,2132,3.076,2417,3.076,2747,2.128,2748,4.781,2749,4.781,2750,3.843,2751,3.843,2752,5.446,2753,3.381,2754,5.446,2755,3.843,2756,3.843,2757,3.843,2758,3.843,2759,2.418,2760,3.843,2761,2.418,2762,3.843,2763,3.843,2764,7.265,2765,2.418,2766,3.843,2767,3.843,2768,2.418,2769,3.843,2770,2.418,2771,2.418,2772,3.843,2773,2.418,2774,4.781,2775,3.843,2776,2.418,2777,3.843,2778,3.843,2779,3.843,2780,3.843,2781,6.632,2782,6.326,2783,2.418,2784,3.843,2785,4.781,2786,3.843,2787,5.942,2788,5.446,2789,3.843,2790,2.418,2791,2.418,2792,2.418,2793,3.843,2794,2.418,2795,2.418,2796,2.418,2797,5.942,2798,5.446,2799,5.446,2800,5.446,2801,5.446,2802,5.446,2803,2.418,2804,2.418,2805,2.418,2806,3.843,2807,2.418,2808,4.781,2809,2.418,2810,2.418,2811,2.418,2812,2.418,2813,2.418,2814,5.446,2815,4.781,2816,4.781,2817,4.781,2818,3.843,2819,3.843,2820,2.418,2821,4.781,2822,4.781,2823,3.843,2824,4.781,2825,5.446,2826,3.843,2827,4.781,2828,2.418,2829,2.418,2830,2.418,2831,2.418,2832,2.418,2833,2.418,2834,6.326,2835,2.418,2836,2.418,2837,5.446,2838,2.418,2839,4.781,2840,3.843,2841,5.446,2842,2.418,2843,3.843,2844,3.843,2845,3.843,2846,3.843,2847,3.381,2848,3.843,2849,2.418,2850,4.781,2851,2.418,2852,2.418,2853,2.418,2854,2.418,2855,2.418,2856,2.418,2857,2.418,2858,2.418,2859,2.418,2860,2.418,2861,2.418,2862,2.418,2863,2.418,2864,2.418,2865,2.418]],["title/interfaces/Villager.html",[160,1.253,930,0.576]],["body/interfaces/Villager.html",[3,0.156,4,0.156,9,0.14,20,0.449,28,0.01,30,0.508,32,0.186,117,0.632,160,2.425,170,0.008,171,0.008,220,0.583,222,1.174,269,1.005,293,1.374,300,1.466,358,4.67,391,2.558,449,4.662,581,6.019,588,4.118,930,0.841,932,1.879,1098,4.252,1371,1.983,1490,2.936,1725,4.449,2866,5.034,2867,5.532,2868,5.532,2869,5.532,2870,5.532,2871,5.532,2872,5.532,2873,5.532,2874,6.288,2875,5.034]],["title/components/VillagerComponent.html",[0,0.61,157,1.358]],["body/components/VillagerComponent.html",[0,0.937,1,1.28,2,1.921,3,0.164,4,0.103,5,1.469,6,1.469,7,1.469,8,1.469,9,0.093,12,1.512,13,1.213,14,2.818,15,2.886,16,1.921,18,1.921,20,0.298,23,1.336,24,1.077,28,0.01,30,0.466,31,0.391,32,0.103,33,0.298,35,2.848,44,2.089,48,2.032,53,2.397,54,2.265,56,1.778,58,1.557,59,2.179,60,1.512,61,3.262,63,2.795,64,3.197,65,3.312,66,2.889,67,2.586,68,2.329,69,2.468,70,2.285,71,3.126,72,2.26,74,1.821,75,1.704,76,2.142,77,2.597,80,2.153,81,2.285,82,3.583,83,2.59,84,2.59,86,5.074,88,2.59,90,2.171,93,3.573,94,3.126,95,2.171,99,2.977,100,3.002,101,3.002,103,2.26,111,2.089,112,2.089,113,0.985,114,1.921,115,1.246,116,1.469,117,0.665,118,1.469,119,1.28,120,1.469,121,1.315,122,1.469,123,1.246,124,1.469,125,1.315,126,1.469,127,1.315,128,1.182,129,2.638,130,1.315,131,1.469,132,1.315,133,1.77,134,1.315,135,2.032,136,1.28,137,1.469,138,1.315,139,1.182,140,1.28,141,1.469,142,1.28,143,1.428,144,2.032,145,1.28,146,1.469,147,1.315,148,1.182,149,1.28,150,1.469,151,1.28,152,1.02,153,1.469,154,1.28,155,1.28,156,1.469,157,2.249,158,1.469,159,1.315,160,2.483,161,1.28,162,1.246,163,1.246,164,1.315,165,1.28,166,1.469,167,1.28,168,1.428,169,1.469,170,0.006,171,0.006,220,0.285,319,2.171,336,1.213,353,2.217,449,4.276,468,3.092,474,1.351,648,3.126,649,2.358,650,2.26,652,3.338,653,2.731,654,3.669,657,2.895,660,3.262,669,2.731,909,2.688,975,3.413,1332,4.003,1626,2.59,1627,2.731,1751,2.59,1755,4.276,1760,3.092,2034,3.669,2876,3.669,2877,6.611,2878,5.767,2879,5.767,2880,4.17,2881,5.767,2882,5.767,2883,5.767,2884,5.767,2885,5.767,2886,5.767,2887,5.767,2888,5.767,2889,5.767,2890,5.767,2891,4.17,2892,4.17,2893,4.17,2894,4.17]],["title/components/VillagerItemComponent.html",[0,0.61,159,1.358]],["body/components/VillagerItemComponent.html",[0,0.955,1,1.327,2,1.97,3,0.107,4,0.107,5,1.523,6,1.523,7,1.523,8,1.523,9,0.097,12,1.568,13,1.258,14,2.826,15,2.894,16,1.97,18,1.97,20,0.309,21,1.195,23,1.361,24,1.497,27,1.046,28,0.01,29,1.632,30,0.478,31,0.405,32,0.107,33,0.309,48,2.083,53,2.443,54,1.481,56,1.163,58,1.614,59,2.207,60,2.443,62,2.575,63,1.614,64,1.662,67,1.568,68,1.523,69,2.207,70,1.713,74,1.104,80,2.207,81,1.713,90,2.251,103,2.343,113,1.021,114,1.97,115,1.292,116,1.523,117,0.728,118,1.523,119,1.327,120,1.523,121,1.363,122,1.523,123,1.292,124,1.523,125,1.363,126,1.523,127,1.363,128,1.225,129,2.672,130,1.363,131,1.523,132,1.363,133,1.815,134,1.363,135,2.083,136,1.327,137,1.523,138,1.363,139,1.225,140,1.327,141,1.523,142,1.327,143,1.481,144,2.083,145,1.327,146,1.523,147,1.363,148,1.225,149,1.327,150,1.523,151,1.327,152,1.04,153,1.523,154,1.327,155,1.327,156,1.523,157,1.363,158,1.523,159,2.284,160,2.583,161,1.327,162,1.292,163,1.292,164,1.363,165,1.327,166,1.523,167,1.327,168,1.481,169,1.523,170,0.007,171,0.007,219,0.829,220,0.496,221,0.725,255,1.765,258,1.258,269,0.79,308,3.262,336,1.961,353,1.662,355,3.262,428,1.104,477,2.686,586,2.343,591,4.104,650,2.343,660,2.445,661,3.001,664,3.628,667,4.104,909,2.755,910,3.673,941,3.987,942,2.558,967,2.831,979,3.498,981,3.872,1638,3.206,1738,3.673,1751,2.686,1766,3.461,1772,2.558,2032,3.001,2084,3.461,2086,4.104,2088,3.461,2089,5.927,2090,5.201,2094,3.804,2425,6.072,2569,6.534,2895,6.051,2896,7.243,2897,6.372,2898,4.324,2899,5.912,2900,4.324,2901,4.324,2902,4.324,2903,4.324,2904,4.324,2905,4.324,2906,4.324,2907,4.324,2908,5.912,2909,4.324,2910,4.324,2911,4.324,2912,5.912,2913,3.804,2914,3.804]],["title/components/VillagerSelectableComponent.html",[0,0.61,161,1.322]],["body/components/VillagerSelectableComponent.html",[0,1.133,1,0.741,2,1.278,3,0.06,4,0.06,5,0.851,6,0.851,7,0.851,8,0.851,9,0.054,11,1.671,12,1.732,13,0.702,14,2.664,15,2.717,16,1.278,18,1.278,20,0.173,21,0.775,22,2.627,23,0.775,24,1.551,27,1.355,28,0.01,29,2.082,30,0.572,31,0.226,32,0.095,33,0.173,35,1.314,48,1.352,53,2.403,54,1.314,56,0.649,58,1.432,59,1.839,60,2.153,62,1.671,63,1.432,64,1.475,67,1.391,68,1.352,69,2.031,70,1.521,74,0.616,76,1.244,79,1.5,80,1.432,81,0.957,90,1.257,99,1.087,103,2.08,113,0.57,114,1.278,115,0.721,116,0.851,117,0.831,118,0.851,119,0.741,120,0.851,121,0.761,122,0.851,123,0.721,124,0.851,125,0.761,126,0.851,127,0.761,128,1.878,129,2.092,130,0.761,131,0.851,132,0.761,133,1.178,134,0.761,135,1.352,136,0.741,137,0.851,138,0.761,139,0.684,140,0.741,141,0.851,142,0.741,143,0.827,144,1.352,145,0.741,146,0.851,147,0.761,148,1.682,149,0.741,150,0.851,151,0.741,152,0.737,153,0.851,154,0.741,155,0.741,156,0.851,157,0.761,158,0.851,159,0.761,160,2.467,161,1.822,162,0.721,163,2.215,164,0.761,165,0.741,166,0.851,167,0.741,168,0.827,169,0.851,170,0.004,171,0.004,178,1.568,186,1.671,194,1.052,196,0.827,207,0.649,219,1.446,220,0.56,221,1.3,222,1.384,228,2.17,232,3.219,245,2.645,249,0.666,254,1.808,255,1.976,265,2.426,269,0.513,273,2.175,277,3.656,282,3.072,286,4.107,300,1.265,308,2.847,335,2.384,336,1.39,350,4.388,351,2.832,352,2.513,353,2.645,354,1.876,355,3.097,357,1.624,367,1.676,384,1.618,386,1.568,463,2.09,474,0.782,477,1.5,575,2.673,586,2.08,639,4.504,649,2.17,650,2.08,660,1.365,661,1.676,667,3.315,700,3.513,702,1.676,719,2.996,736,1.676,829,1.676,848,1.365,909,1.788,967,1.581,979,2.271,1281,2.513,1371,1.21,1402,4.922,1569,1.581,1638,1.79,1731,2.124,1751,1.5,1766,1.933,1772,1.428,1783,4.193,1817,1.79,1927,4.687,2032,1.676,2084,1.933,2086,3.777,2292,1.79,2293,4.201,2296,3.072,2297,4.201,2298,3.376,2301,4.201,2302,4.201,2308,3.376,2309,3.376,2310,3.376,2311,3.376,2324,2.124,2335,3.376,2337,6.051,2338,5.223,2339,3.376,2340,2.124,2342,4.787,2343,2.124,2345,5.831,2346,3.376,2349,4.787,2350,4.787,2355,2.124,2357,3.072,2358,3.072,2359,1.933,2360,1.933,2364,2.124,2365,2.124,2425,3.072,2450,4.201,2571,6.189,2895,6.189,2897,3.376,2913,2.124,2914,2.124,2915,3.823,2916,4.776,2917,3.837,2918,5.441,2919,3.837,2920,5.441,2921,3.837,2922,4.776,2923,2.124,2924,3.837,2925,2.414,2926,2.414,2927,3.837,2928,2.414,2929,5.937,2930,2.414,2931,3.837,2932,3.837,2933,7.261,2934,2.414,2935,2.414,2936,3.837,2937,2.414,2938,2.414,2939,2.414,2940,3.837,2941,2.414,2942,3.837,2943,2.414,2944,2.414,2945,2.414,2946,2.414,2947,3.837,2948,2.414,2949,3.837,2950,2.414,2951,2.414,2952,2.414,2953,2.414,2954,2.414,2955,2.414,2956,2.414,2957,2.414,2958,3.837,2959,2.414,2960,2.414,2961,2.414,2962,2.414,2963,4.776,2964,2.414,2965,2.414,2966,2.414,2967,2.414,2968,2.414,2969,2.414,2970,2.414,2971,2.414,2972,2.414,2973,2.414,2974,2.414,2975,2.414,2976,2.414,2977,3.837,2978,2.414,2979,2.414,2980,2.414,2981,2.414,2982,2.414,2983,2.414,2984,3.837,2985,3.837,2986,3.837]],["title/injectables/VillagerService.html",[247,1.099,1783,2.548]],["body/injectables/VillagerService.html",[3,0.096,4,0.096,9,0.086,20,0.276,21,1.103,23,1.103,24,1.45,27,1.337,28,0.01,30,0.627,31,0.362,32,0.096,33,0.276,76,1.77,117,0.885,160,2.498,163,2.473,170,0.006,171,0.006,207,2.225,219,1.215,220,0.517,221,1.063,222,1.02,243,2.662,244,4.47,247,1.394,248,1.797,249,1.065,252,1.737,253,1.576,254,1.29,255,1.979,258,2.198,265,1.576,269,0.73,273,2.565,277,3.52,293,1.506,300,1.233,313,3.791,346,3.231,354,1.577,355,2.855,357,1.497,365,3.088,384,2.303,391,1.946,428,1.618,449,4.7,463,1.722,481,3.231,495,3.328,496,1.797,588,4.151,694,4.272,709,3.328,724,4.151,811,3.276,1019,4.47,1037,3.933,1369,3.576,1393,3.576,1402,3.392,1490,2.234,1540,4.372,1783,3.231,1868,4.401,1871,4.372,1886,3.088,1887,3.088,1890,2.86,1892,3.393,1893,2.678,1896,2.678,2132,4.372,2753,4.804,2867,5.577,2868,5.577,2869,5.577,2870,5.577,2871,5.577,2872,5.577,2873,5.577,2875,3.088,2987,3.393,2988,6.339,2989,6.339,2990,6.894,2991,5.461,2992,3.857,2993,3.857,2994,5.461,2995,3.857,2996,3.857,2997,5.577,2998,5.461,2999,5.461,3000,3.857,3001,3.857,3002,3.857,3003,5.461,3004,3.857,3005,3.857,3006,3.857,3007,5.461,3008,3.857,3009,6.894,3010,6.339,3011,6.339,3012,6.339,3013,6.339,3014,6.339,3015,6.339,3016,6.339,3017,6.339,3018,6.339,3019,6.339,3020,6.339,3021,3.857,3022,3.857,3023,3.857,3024,3.857,3025,3.857,3026,5.461,3027,3.857,3028,3.857,3029,3.857,3030,3.857,3031,3.857,3032,3.857,3033,3.857,3034,3.857,3035,3.857,3036,3.857,3037,3.857,3038,3.857,3039,3.857]],["title/components/VillagersPage.html",[0,0.61,162,1.287]],["body/components/VillagersPage.html",[0,1.071,1,1.313,2,1.955,3,0.106,4,0.106,5,1.508,6,1.508,7,1.508,8,1.508,9,0.096,11,2.557,12,2.43,13,1.245,14,2.824,15,2.892,16,1.955,18,1.955,20,0.42,21,1.186,22,3.482,23,1.186,24,1.493,27,1.039,28,0.01,29,1.85,30,0.646,31,0.401,32,0.106,33,0.306,48,2.068,54,1.466,59,2.098,63,1.597,64,2.257,67,1.551,68,2.541,69,2.191,70,1.695,113,1.01,114,1.955,115,1.279,116,1.508,117,0.76,118,1.508,119,1.313,120,1.508,121,1.349,122,1.508,123,1.279,124,1.508,125,1.349,126,1.508,127,1.349,128,1.213,129,2.663,130,1.349,131,1.508,132,1.349,133,1.802,134,1.349,135,2.068,136,1.313,137,1.508,138,1.349,139,1.213,140,1.313,141,1.508,142,1.313,143,1.466,144,2.068,145,1.313,146,1.508,147,1.349,148,1.213,149,1.313,150,1.508,151,1.313,152,1.034,153,1.508,154,1.313,155,1.313,156,1.508,157,1.349,158,1.508,159,1.349,160,1.95,161,1.313,162,2.155,163,2.522,164,1.349,165,1.313,166,1.508,167,1.313,168,1.466,169,1.508,170,0.007,171,0.007,196,1.466,219,1.125,220,0.534,221,0.984,222,0.799,249,1.181,254,1.01,269,0.785,273,2.396,276,5.164,300,0.698,303,4.699,306,5.773,307,5.347,308,3.515,310,4.699,323,4.352,336,1.708,354,1.064,355,2.643,357,1.01,377,3.425,482,4.075,664,3.357,811,1.927,930,0.572,945,3.648,952,3.648,1006,4.352,1019,3.473,1209,1.508,1281,3.844,1371,1.349,1642,3.764,1751,2.658,1783,4.887,1817,3.172,1918,3.425,1919,3.764,1920,3.425,1921,3.764,1922,3.172,1923,3.764,1924,5.164,1925,5.895,1926,5.164,1927,4.352,2923,3.764,3040,5.87,3041,4.279,3042,4.279,3043,4.279,3044,4.279,3045,4.279]],["title/modules/VillagersPageModule.html",[172,1.128,3046,3.192]],["body/modules/VillagersPageModule.html",[3,0.152,4,0.152,9,0.137,28,0.01,30,0.695,31,0.576,32,0.152,33,0.439,113,1.452,162,2.57,163,1.837,170,0.008,171,0.008,172,1.61,174,2.229,175,2.436,176,3.587,177,2.768,178,2.512,179,2.363,184,3.627,185,3.34,186,2.678,187,2.229,189,2.939,190,2.939,197,3.476,199,3.2,1922,4.557,2585,6.525,2586,5.408,2587,6.525,3046,6.587,3047,5.408,3048,5.408,3049,5.408,3050,5.97,3051,6.147,3052,5.408]],["title/modules/VillagersPageRoutingModule.html",[172,1.128,3050,2.989]],["body/modules/VillagersPageRoutingModule.html",[0,0.936,3,0.164,4,0.164,9,0.147,28,0.01,30,0.663,31,0.619,32,0.164,33,0.472,162,2.312,170,0.009,171,0.009,174,2.393,179,2.538,189,2.616,190,3.066,203,3.733,204,4.112,205,4.376,206,2.261,207,1.775,208,1.973,209,3.906,3050,5.371,3052,5.807,3053,6.601]],["title/coverage.html",[3054,5.187]],["body/coverage.html",[0,1.24,1,1.112,9,0.081,10,3.187,28,0.01,33,0.508,62,1.578,76,2.898,115,1.56,119,1.112,121,1.142,123,1.083,125,1.142,127,1.142,128,1.027,130,1.142,132,1.142,133,1.112,134,1.142,136,1.112,138,1.142,140,1.112,142,1.112,145,1.112,147,1.142,148,1.027,149,1.112,151,1.112,152,0.559,154,1.112,155,1.112,157,1.142,159,1.142,160,1.054,161,1.112,162,1.083,165,1.112,167,1.112,170,0.006,171,0.006,210,4.18,211,2.686,213,3.187,216,1.688,220,0.248,247,2.144,266,3.187,284,2.049,286,2.049,288,2.25,366,2.433,428,0.925,495,1.749,497,3.187,506,2.372,508,2.144,531,3.871,534,2.515,567,3.187,575,2.351,576,2.686,664,1.815,677,4.18,688,2.686,690,2.9,694,2.049,696,2.686,700,2.144,708,2.686,709,1.749,719,2.667,722,2.9,739,2.372,743,2.9,748,2.686,778,3.187,791,3.187,817,3.187,825,2.144,826,2.049,829,2.515,830,3.187,849,1.48,850,1.48,851,1.436,853,1.48,855,1.393,856,1.436,864,1.436,906,3.187,907,3.187,930,1.183,931,2.686,933,4.651,934,3.871,935,4.18,943,2.515,946,3.09,947,2.515,1027,4.18,1028,4.18,1081,3.187,1098,2.049,1108,3.187,1134,2.372,1189,2.9,1191,4.18,1200,1.436,1209,1.276,1220,2.515,1221,4.967,1266,2.515,1483,1.528,1484,3.566,1485,1.528,1486,1.528,1487,1.528,1488,1.528,1489,1.528,1495,1.48,1503,1.528,1508,3.187,1571,2.9,1572,2.686,1573,3.625,1574,2.515,1660,4.18,1661,3.187,1688,3.187,1724,3.187,1732,3.187,1765,3.187,1769,4.594,1772,4.202,1774,4.651,1783,2.144,1810,3.187,1859,3.187,1918,4.18,1928,2.9,1957,3.419,1958,2.515,1960,3.187,1961,3.187,1977,3.187,1986,2.515,1987,3.187,1988,3.187,1997,3.187,2087,2.9,2088,4.18,2103,3.187,2153,3.187,2191,3.187,2192,2.9,2211,3.187,2219,2.9,2220,2.686,2232,2.9,2244,4.18,2252,2.686,2253,3.187,2290,4.18,2291,3.871,2292,4.967,2295,2.9,2396,3.187,2504,3.187,2540,3.187,2569,2.9,2571,3.871,2597,3.187,2607,3.187,2659,3.187,2675,3.187,2714,3.187,2744,3.187,2747,3.187,2866,2.9,2876,3.187,2895,4.539,2915,2.9,2987,3.187,2997,4.594,3054,3.187,3055,3.623,3056,3.623,3057,3.187,3058,7.102,3059,7.951,3060,3.623,3061,6.7,3062,6.7,3063,8.259,3064,7.951,3065,3.623,3066,3.623,3067,7.102,3068,7.805,3069,5.221,3070,3.623,3071,5.221,3072,3.623,3073,3.623,3074,3.623,3075,3.623,3076,3.623,3077,3.623,3078,5.221,3079,3.623,3080,3.623,3081,5.221,3082,6.122,3083,5.221,3084,5.221,3085,3.623,3086,3.623,3087,3.623,3088,3.623,3089,5.221,3090,3.623,3091,3.623,3092,3.623,3093,3.623,3094,5.221,3095,5.221,3096,3.187,3097,2.9,3098,3.623,3099,3.623,3100,3.623,3101,3.623,3102,3.623,3103,3.623,3104,3.623,3105,3.623,3106,3.623,3107,3.187,3108,3.623,3109,5.221,3110,5.221,3111,5.221,3112,3.623,3113,3.623,3114,3.623,3115,3.623,3116,3.187,3117,3.623,3118,3.623,3119,3.623,3120,3.623,3121,3.623,3122,3.623,3123,3.187,3124,3.187,3125,3.623]],["title/dependencies.html",[175,2.054,3126,3.155]],["body/dependencies.html",[28,0.01,31,0.574,51,2.955,170,0.008,171,0.008,175,2.425,192,3.621,194,2.666,196,2.096,206,2.096,249,1.689,353,2.353,679,6.507,680,5.921,706,4.183,707,3.621,735,4.537,1063,5.384,1575,5.384,1942,5.384,2037,4.899,2711,5.384,3127,6.119,3128,8.769,3129,6.119,3130,6.119,3131,6.119,3132,6.119,3133,6.119,3134,8.455,3135,6.119,3136,6.119,3137,6.119,3138,6.119,3139,6.119,3140,6.119,3141,7.949,3142,6.119,3143,6.119,3144,6.119,3145,6.119,3146,6.119,3147,6.119,3148,6.119,3149,6.119,3150,6.119,3151,6.119,3152,6.119,3153,6.119,3154,6.119,3155,6.119,3156,6.119,3157,6.119]],["title/miscellaneous/functions.html",[3158,2.349,3159,4.561]],["body/miscellaneous/functions.html",[20,0.449,28,0.01,35,2.755,51,3.63,117,0.809,170,0.008,171,0.008,219,1.542,220,0.551,221,1.349,222,1.174,300,1.227,495,3.63,507,3.072,508,4.449,510,5.219,677,5.034,685,5.913,705,4.67,706,3.556,708,5.574,709,3.63,715,6.671,719,2.739,720,5.532,722,6.019,723,5.532,724,4.923,743,6.019,1027,5.034,1028,6.019,1032,4.365,1040,5.532,1062,5.532,1064,4.662,1065,5.574,1066,4.662,1067,5.532,1068,5.532,3158,4.118,3159,5.532,3160,7.518,3161,6.288,3162,6.288]],["title/index.html",[20,0.256,3163,3.587,3164,3.587]],["body/index.html",[28,0.008,43,4.597,44,3.358,45,4.597,46,4.183,47,3.422,50,4.183,51,2.523,170,0.008,171,0.008,428,1.711,594,5.366,640,6.463,643,6.088,647,4.183,724,4.389,916,4.672,1477,3.874,1479,3.874,1853,3.627,1959,3.627,2036,3.874,2262,3.627,2654,4.597,2740,7.485,2741,5.897,2847,6.511,3165,5.225,3166,5.225,3167,5.225,3168,7.401,3169,7.401,3170,5.225,3171,9.037,3172,5.225,3173,8.073,3174,5.225,3175,5.225,3176,7.401,3177,5.225,3178,5.225,3179,5.225,3180,6.703,3181,5.225,3182,6.703,3183,5.225,3184,7.401,3185,6.703,3186,6.703,3187,6.703,3188,5.225,3189,6.703,3190,5.225,3191,5.225,3192,5.225,3193,5.225,3194,5.225,3195,7.401,3196,7.401,3197,7.401,3198,8.508,3199,5.225,3200,7.401,3201,7.401,3202,5.225,3203,6.703,3204,5.225,3205,6.703,3206,5.225,3207,5.225,3208,5.225,3209,5.225,3210,5.225,3211,5.225,3212,5.225,3213,5.225,3214,5.225,3215,5.225,3216,5.225,3217,5.225,3218,5.225,3219,5.225,3220,5.225,3221,6.703,3222,5.225,3223,5.225,3224,5.225,3225,5.225,3226,5.225,3227,5.225,3228,5.225,3229,5.225,3230,5.225,3231,5.225,3232,5.897,3233,6.703,3234,5.225,3235,5.225,3236,5.225,3237,5.225,3238,5.225,3239,5.225,3240,5.225,3241,5.225,3242,5.225,3243,5.225,3244,5.225,3245,5.225,3246,5.225,3247,5.225,3248,5.225,3249,5.225,3250,5.225,3251,5.225,3252,5.225,3253,5.225]],["title/modules.html",[174,2.138]],["body/modules.html",[28,0.008,170,0.008,171,0.008,173,4.557,174,2.229,183,4.267,184,2.592,485,4.557,489,4.267,671,4.557,676,4.267,680,7.214,962,5.876,1650,4.557,1654,4.267,2183,4.557,2187,4.267,2236,4.557,2240,4.267,2494,4.557,2498,4.267,2550,4.557,2554,4.267,3046,4.557,3050,4.267,3254,9.012,3255,9.012,3256,9.097,3257,8.465]],["title/classes/numericValidator.html",[33,0.308,3097,3.447]],["body/classes/numericValidator.html",[3,0.143,4,0.143,9,0.129,20,0.413,21,1.443,24,1.078,27,1.433,28,0.01,30,0.467,32,0.143,33,0.413,76,1.872,91,2.516,117,0.718,170,0.008,171,0.008,194,2.516,207,1.92,219,1.107,220,0.395,221,1.197,222,1.078,254,1.364,258,2.255,265,2.36,273,1.773,300,1.165,353,2.745,354,2.107,357,1.364,463,2.444,624,4.282,719,3.376,1065,4.282,1190,3.782,2254,6.818,2260,6.818,2262,5.38,2264,6.818,2270,6.818,2271,5.081,2272,6.281,2273,6.281,2274,5.081,2284,6.281,2285,5.081,3096,5.081,3097,5.716,3258,7.139,3259,8.095,3260,7.139,3261,5.776,3262,5.776,3263,7.139,3264,5.776,3265,5.776,3266,5.776,3267,5.776,3268,5.776,3269,5.776,3270,7.139,3271,5.776]],["title/overview.html",[3272,5.187]],["body/overview.html",[1,1.955,2,1.296,28,0.01,113,0.919,119,1.955,121,2.455,123,1.903,125,2.455,127,2.455,130,2.455,132,2.455,134,2.455,136,1.955,138,2.455,140,1.955,142,2.39,145,1.955,147,2.455,149,1.955,151,2.39,154,2.39,155,2.39,157,2.455,159,2.455,161,2.39,162,1.903,164,1.227,165,2.39,167,2.441,170,0.006,171,0.006,172,1.019,173,5.896,174,1.41,175,1.541,176,1.752,177,1.752,178,1.59,179,1.496,180,3.422,181,3.422,182,3.422,183,5.067,184,3.87,185,2.474,186,1.694,187,1.41,204,1.949,212,3.114,485,5.896,486,3.422,487,3.422,488,3.422,489,4.421,496,1.813,671,6.146,672,3.422,673,3.422,674,3.422,675,3.422,676,5.067,932,1.162,1190,2.547,1631,5.099,1650,5.896,1651,3.422,1652,3.422,1653,3.422,1654,5.067,1807,3.422,1958,5.52,1959,2.7,1986,5.52,2183,5.896,2184,3.422,2185,3.422,2186,3.422,2187,4.421,2236,5.896,2237,3.422,2238,3.422,2239,3.422,2240,4.421,2494,5.896,2495,3.422,2496,3.422,2497,3.422,2498,5.067,2550,5.896,2551,3.422,2552,3.422,2553,3.422,2554,4.421,2558,3.422,2559,3.422,2560,3.422,3046,5.896,3047,3.422,3048,3.422,3049,3.422,3050,4.421,3107,3.422,3116,3.422,3272,3.422,3273,3.89,3274,3.89,3275,3.89]],["title/properties.html",[269,0.693,3126,3.155]],["body/properties.html",[28,0.01,46,6.374,123,2.072,170,0.009,171,0.009,222,1.295,269,0.927,3232,6.101,3276,6.935,3277,6.935,3278,6.935,3279,6.935,3280,6.935]],["title/routes.html",[204,2.953]],["body/routes.html",[28,0.009,170,0.009,171,0.009,204,3.558]],["title/miscellaneous/typealiases.html",[3158,2.349,3281,5.184]],["body/miscellaneous/typealiases.html",[20,0.486,28,0.009,170,0.009,171,0.009,220,0.465,300,1.109,851,2.694,852,3.319,854,3.319,856,2.694,1098,3.844,1484,2.867,1494,3.428,1495,2.778,1928,5.442,1937,6.924,2866,5.442,2875,6.301,3158,4.451,3282,6.797,3283,6.797,3284,6.797,3285,8.308]],["title/miscellaneous/variables.html",[3158,2.349,3286,4.561]],["body/miscellaneous/variables.html",[20,0.391,28,0.01,51,3.652,142,1.681,161,1.681,170,0.008,171,0.008,220,0.561,265,3.091,336,2.009,354,2.037,357,1.934,386,2.238,531,5.889,647,6.056,736,4.794,739,4.522,1685,4.06,1723,4.817,2290,4.383,2291,4.06,2292,5.889,2295,5.528,2357,5.528,2358,5.528,2359,5.528,2360,5.528,2571,4.06,2895,4.06,2915,5.528,3057,6.075,3123,4.817,3124,4.817,3158,3.586,3286,4.817,3287,5.475,3288,5.475,3289,5.475,3290,5.475,3291,5.475,3292,7.943,3293,5.475,3294,5.475,3295,8.489,3296,5.475,3297,5.475,3298,5.475,3299,6.906,3300,6.906,3301,6.906,3302,6.906,3303,7.564,3304,6.906,3305,6.906,3306,7.564,3307,6.906,3308,7.564,3309,7.564,3310,6.906,3311,7.564,3312,6.906,3313,6.906,3314,7.564,3315,7.564,3316,6.906,3317,5.475,3318,7.564,3319,7.564,3320,5.475,3321,5.475,3322,5.475,3323,5.475,3324,5.475,3325,5.475]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/Island.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/JwtService.html":{},"interfaces/Large.html":{},"pipes/LatestThreePipe.html":{},"interfaces/Loan.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"directives/ProgressDirective.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UserService.html":{},"interfaces/Villager.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"classes/numericValidator.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":76,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"injectables/IslandService.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"coverage.html":{},"classes/numericValidator.html":{}}}],["0.0.1",{"_index":3277,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":654,"title":{},"body":{"components/AppComponent.html":{},"components/VillagerComponent.html":{}}}],["0.13.0",{"_index":3157,"title":{},"body":{"dependencies.html":{}}}],["0.171",{"_index":2207,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["0.2",{"_index":1643,"title":{},"body":{"components/HomePage.html":{}}}],["0.296",{"_index":89,"title":{},"body":{"components/AboutPage.html":{}}}],["0.3",{"_index":1632,"title":{},"body":{"components/HomePage.html":{}}}],["0.377",{"_index":2179,"title":{},"body":{"components/LoansPage.html":{}}}],["0.3s",{"_index":2209,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["0.5em",{"_index":2031,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["0.5rem",{"_index":1636,"title":{},"body":{"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoginFormComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{}}}],["0/1",{"_index":3059,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3074,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3067,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":3070,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3069,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3068,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3071,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3066,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3082,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3078,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3075,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":85,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["0rem",{"_index":2665,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserListComponent.html":{}}}],["1",{"_index":92,"title":{"injectables/AuthService-1.html":{}},"body":{"components/AboutPage.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["1)].setvalue(_island.attributes.villagers![index",{"_index":1825,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["1.25rem",{"_index":475,"title":{},"body":{"components/AdminPage.html":{}}}],["1.2rem",{"_index":2484,"title":{},"body":{"components/ProfilePage.html":{},"components/UserCardComponent.html":{}}}],["1.5em",{"_index":2034,"title":{},"body":{"components/LoanComponent.html":{},"components/VillagerComponent.html":{}}}],["1.5px",{"_index":1638,"title":{},"body":{"components/HomePage.html":{},"components/IslandComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["1.5rem",{"_index":2029,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/ProfilePage.html":{},"components/UserFormComponent.html":{}}}],["1.8rem",{"_index":1759,"title":{},"body":{"components/IslandComponent.html":{},"components/UserCardComponent.html":{}}}],["1.9.3",{"_index":3147,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":3085,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":3073,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3081,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":3064,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":3072,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":3065,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3111,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":3117,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1648,"title":{},"body":{"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoansPage.html":{},"injectables/UserService.html":{}}}],["10.7.2",{"_index":3144,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":3086,"title":{},"body":{"coverage.html":{}}}],["10/17",{"_index":3113,"title":{},"body":{"coverage.html":{}}}],["10/19",{"_index":3101,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":62,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"coverage.html":{}}}],["100px",{"_index":2893,"title":{},"body":{"components/VillagerComponent.html":{}}}],["100vh",{"_index":57,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["102px",{"_index":2652,"title":{},"body":{"components/UserCardComponent.html":{}}}],["1052521570202",{"_index":3312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10px",{"_index":648,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{}}}],["115",{"_index":2666,"title":{},"body":{"components/UserCardComponent.html":{}}}],["13/24",{"_index":3121,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":3116,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["140vh",{"_index":2235,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["15",{"_index":2509,"title":{},"body":{"directives/ProgressDirective.html":{}}}],["15.0.0",{"_index":3142,"title":{},"body":{"dependencies.html":{}}}],["150px",{"_index":2892,"title":{},"body":{"components/VillagerComponent.html":{}}}],["15px",{"_index":1644,"title":{},"body":{"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["16",{"_index":3110,"title":{},"body":{"coverage.html":{}}}],["16.0.0",{"_index":3128,"title":{},"body":{"dependencies.html":{}}}],["16.3.1",{"_index":3152,"title":{},"body":{"dependencies.html":{}}}],["16vh",{"_index":2101,"title":{},"body":{"components/LoanItemComponent.html":{}}}],["175",{"_index":2894,"title":{},"body":{"components/VillagerComponent.html":{}}}],["19",{"_index":3273,"title":{},"body":{"overview.html":{}}}],["1:1052521570202:web:59aaf107a3683ec6cda423",{"_index":3313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1:287262785152:web:ee03d84a9aaf81eeb57065",{"_index":3324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1].attributes.name",{"_index":3025,"title":{},"body":{"injectables/VillagerService.html":{}}}],["1].username",{"_index":2813,"title":{},"body":{"injectables/UserService.html":{}}}],["1em",{"_index":2030,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/RegisterFormComponent.html":{}}}],["1kpuxzqcajad2w6nrsp5o",{"_index":3305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1rem",{"_index":94,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{}}}],["2",{"_index":1631,"title":{},"body":{"components/HomePage.html":{},"components/IslandFormComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":3155,"title":{},"body":{"dependencies.html":{}}}],["2.3rem",{"_index":1647,"title":{},"body":{"components/HomePage.html":{},"components/UserCardComponent.html":{}}}],["2.5rem",{"_index":480,"title":{},"body":{"components/AdminPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{}}}],["2/10",{"_index":3060,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":3062,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":3122,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":3114,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":3108,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":3104,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1769,"title":{},"body":{"components/IslandComponent.html":{},"coverage.html":{}}}],["20px",{"_index":82,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/VillagerComponent.html":{}}}],["20rem",{"_index":2644,"title":{},"body":{"components/UserCardComponent.html":{}}}],["22/31",{"_index":3080,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":3274,"title":{},"body":{"overview.html":{}}}],["25",{"_index":2997,"title":{},"body":{"injectables/VillagerService.html":{},"coverage.html":{}}}],["25px",{"_index":471,"title":{},"body":{"components/AdminPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/UserCardComponent.html":{}}}],["26",{"_index":3275,"title":{},"body":{"overview.html":{}}}],["28",{"_index":3107,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["287262785152",{"_index":3323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2em",{"_index":2102,"title":{},"body":{"components/LoanItemComponent.html":{}}}],["2px",{"_index":2177,"title":{},"body":{"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["2rem",{"_index":79,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["3",{"_index":1805,"title":{},"body":{"components/IslandFormComponent.html":{},"pipes/LatestThreePipe.html":{}}}],["3.3.1",{"_index":3149,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":3106,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":3119,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":3095,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":3109,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":3105,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":2385,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{}}}],["30rem",{"_index":2650,"title":{},"body":{"components/UserCardComponent.html":{}}}],["33",{"_index":3063,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1641,"title":{},"body":{"components/HomePage.html":{}}}],["35px",{"_index":668,"title":{},"body":{"components/AppComponent.html":{}}}],["37",{"_index":3094,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":3102,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":2181,"title":{},"body":{"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["3rem",{"_index":1628,"title":{},"body":{"components/HomePage.html":{},"components/LoansPage.html":{}}}],["3vw",{"_index":1773,"title":{},"body":{"components/IslandComponent.html":{}}}],["4",{"_index":1806,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["4/9",{"_index":3084,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1765,"title":{},"body":{"components/IslandComponent.html":{},"coverage.html":{}}}],["40px",{"_index":659,"title":{},"body":{"components/AppComponent.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{}}}],["42",{"_index":3118,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":3083,"title":{},"body":{"coverage.html":{}}}],["45vh",{"_index":2891,"title":{},"body":{"components/VillagerComponent.html":{}}}],["46",{"_index":3076,"title":{},"body":{"coverage.html":{}}}],["4em",{"_index":2033,"title":{},"body":{"components/LoanComponent.html":{}}}],["4px",{"_index":652,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/VillagerComponent.html":{}}}],["5",{"_index":1807,"title":{},"body":{"components/IslandFormComponent.html":{},"overview.html":{}}}],["5.0.6",{"_index":3134,"title":{},"body":{"dependencies.html":{}}}],["5.0.7",{"_index":3137,"title":{},"body":{"dependencies.html":{}}}],["5.5.1",{"_index":3132,"title":{},"body":{"dependencies.html":{}}}],["5.6.0",{"_index":3136,"title":{},"body":{"dependencies.html":{}}}],["5/10",{"_index":3089,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":3091,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1772,"title":{},"body":{"components/IslandComponent.html":{},"components/LoansPage.html":{},"components/PictureSelectableComponent.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"coverage.html":{}}}],["50px",{"_index":1629,"title":{},"body":{"components/HomePage.html":{},"components/RegisterFormComponent.html":{}}}],["52",{"_index":3100,"title":{},"body":{"coverage.html":{}}}],["53",{"_index":3098,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":3120,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":3090,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":3112,"title":{},"body":{"coverage.html":{}}}],["590px",{"_index":1637,"title":{},"body":{"components/HomePage.html":{}}}],["5px",{"_index":86,"title":{},"body":{"components/AboutPage.html":{},"components/VillagerComponent.html":{}}}],["5rem",{"_index":470,"title":{},"body":{"components/AdminPage.html":{}}}],["6",{"_index":1808,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["6/13",{"_index":3077,"title":{},"body":{"coverage.html":{}}}],["6/15",{"_index":3115,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1768,"title":{},"body":{"components/IslandComponent.html":{}}}],["600px",{"_index":73,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{}}}],["60px",{"_index":87,"title":{},"body":{"components/AboutPage.html":{}}}],["60vh",{"_index":1623,"title":{},"body":{"components/HomePage.html":{}}}],["64",{"_index":3092,"title":{},"body":{"coverage.html":{}}}],["640px",{"_index":2651,"title":{},"body":{"components/UserCardComponent.html":{}}}],["65",{"_index":1635,"title":{},"body":{"components/HomePage.html":{}}}],["66",{"_index":3061,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":2178,"title":{},"body":{"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["6rem",{"_index":2671,"title":{},"body":{"components/UserCardComponent.html":{}}}],["7",{"_index":1809,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["7.0.0",{"_index":3141,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":3153,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":3088,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":3079,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2668,"title":{},"body":{"components/UserCardComponent.html":{}}}],["75px",{"_index":2176,"title":{},"body":{"components/LoansPage.html":{}}}],["79vh",{"_index":2234,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["8",{"_index":431,"title":{},"body":{"components/AdminPage.html":{},"components/IslandFormComponent.html":{}}}],["8.0.0",{"_index":3143,"title":{},"body":{"dependencies.html":{}}}],["8/15",{"_index":3099,"title":{},"body":{"coverage.html":{}}}],["8/21",{"_index":3103,"title":{},"body":{"coverage.html":{}}}],["80vh",{"_index":2174,"title":{},"body":{"components/LoansPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["81849",{"_index":3321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81849.appspot.com",{"_index":3322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81849.firebaseapp.com",{"_index":3320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87",{"_index":3087,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":653,"title":{},"body":{"components/AppComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/VillagerComponent.html":{}}}],["8rem",{"_index":1646,"title":{},"body":{"components/HomePage.html":{},"components/IslandComponent.html":{}}}],["9",{"_index":1810,"title":{},"body":{"components/IslandFormComponent.html":{},"coverage.html":{}}}],["9/14",{"_index":3093,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2232,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"coverage.html":{}}}],["9]*\\.?[0",{"_index":3268,"title":{},"body":{"classes/numericValidator.html":{}}}],["9]{0,2",{"_index":3269,"title":{},"body":{"classes/numericValidator.html":{}}}],["9a",{"_index":2279,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["_`\\[\\]]{8",{"_index":2280,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["_app",{"_index":1268,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_auth",{"_index":1270,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_credentials",{"_index":863,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["_credentials).subscribe",{"_index":869,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["_db",{"_index":1269,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_extended_user",{"_index":890,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["_extended_user)).catch",{"_index":894,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["_headers",{"_index":1718,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["_headers.set('accept",{"_index":1721,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["_info",{"_index":881,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["_info.uuid",{"_index":1165,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["_island",{"_index":1777,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoansPage.html":{}}}],["_island.attributes.villagers",{"_index":1822,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["_island.attributes.villagers.foreach((villager",{"_index":1823,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["_islands",{"_index":1860,"title":{},"body":{"injectables/IslandService.html":{}}}],["_islogged",{"_index":1272,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_language",{"_index":1029,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["_loan",{"_index":2053,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["_loans",{"_index":2104,"title":{},"body":{"injectables/LoanService.html":{}}}],["_logged",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["_picture",{"_index":2299,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["_user",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ProfilePage.html":{},"components/UserFormComponent.html":{}}}],["_user.dream_code",{"_index":2693,"title":{},"body":{"components/UserFormComponent.html":{}}}],["_user.profile_picture",{"_index":2695,"title":{},"body":{"components/UserFormComponent.html":{}}}],["_users",{"_index":2748,"title":{},"body":{"injectables/UserService.html":{}}}],["_villager",{"_index":2896,"title":{},"body":{"components/VillagerItemComponent.html":{}}}],["_villager:villager|undefined",{"_index":2905,"title":{},"body":{"components/VillagerItemComponent.html":{}}}],["_villagers",{"_index":2988,"title":{},"body":{"injectables/VillagerService.html":{}}}],["_webstorage",{"_index":1271,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["a.createdat).slice(0",{"_index":1976,"title":{},"body":{"pipes/LatestThreePipe.html":{}}}],["about'},{'name",{"_index":118,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["about.characters",{"_index":38,"title":{},"body":{"components/AboutPage.html":{}}}],["about.functionalities",{"_index":37,"title":{},"body":{"components/AboutPage.html":{}}}],["about.island",{"_index":39,"title":{},"body":{"components/AboutPage.html":{}}}],["about.loans",{"_index":40,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page",{"_index":198,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{}}}],["about.page.html",{"_index":19,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":17,"title":{},"body":{"components/AboutPage.html":{}}}],["about.projecttext",{"_index":36,"title":{},"body":{"components/AboutPage.html":{}}}],["about.projecttitle",{"_index":34,"title":{},"body":{"components/AboutPage.html":{}}}],["about.technologies",{"_index":42,"title":{},"body":{"components/AboutPage.html":{}}}],["about.trans",{"_index":41,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["aboutpagemodule",{"_index":173,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules.html":{},"overview.html":{}}}],["aboutpageroutingmodule",{"_index":183,"title":{"modules/AboutPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["absolute",{"_index":1758,"title":{},"body":{"components/IslandComponent.html":{}}}],["abstract",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/DataService.html":{},"injectables/HttpClientProvider.html":{}}}],["abstractcontrol",{"_index":2272,"title":{},"body":{"classes/PasswordValidation.html":{},"classes/numericValidator.html":{}}}],["accept",{"_index":519,"title":{},"body":{"injectables/ApiService.html":{}}}],["acceso",{"_index":3172,"title":{},"body":{"index.html":{}}}],["access",{"_index":238,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["accessors",{"_index":910,"title":{},"body":{"directives/BackgroundBlurDirective.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoginFormComponent.html":{},"directives/ProgressDirective.html":{},"components/UserFormComponent.html":{},"components/VillagerItemComponent.html":{}}}],["account",{"_index":1443,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/UserRegisterInfo.html":{}}}],["acnh",{"_index":3165,"title":{},"body":{"index.html":{}}}],["action",{"_index":938,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["actions",{"_index":982,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["activated",{"_index":234,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["activatedroute",{"_index":779,"title":{},"body":{"guards/AuthGuard.html":{},"components/ProfilePage.html":{}}}],["activatedroutesnapshot",{"_index":227,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["active",{"_index":1053,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["actividades",{"_index":3193,"title":{},"body":{"index.html":{}}}],["actual",{"_index":2848,"title":{},"body":{"injectables/UserService.html":{}}}],["actual_component",{"_index":169,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["actualizar",{"_index":1481,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["add",{"_index":969,"title":{},"body":{"interfaces/ButtonConfig.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["adddoc",{"_index":1232,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adddoc(collectionref",{"_index":1347,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adding",{"_index":1557,"title":{},"body":{"components/HomePage.html":{},"components/LoansPage.html":{}}}],["addisland",{"_index":1861,"title":{},"body":{"injectables/IslandService.html":{}}}],["addisland(is",{"_index":1869,"title":{},"body":{"injectables/IslandService.html":{}}}],["additional",{"_index":314,"title":{},"body":{"components/AdminPage.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["addloan",{"_index":2105,"title":{},"body":{"injectables/LoanService.html":{}}}],["addloan(loan",{"_index":2113,"title":{},"body":{"injectables/LoanService.html":{}}}],["address",{"_index":1444,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adds",{"_index":1871,"title":{},"body":{"injectables/IslandService.html":{},"injectables/LoanService.html":{},"injectables/VillagerService.html":{}}}],["admin",{"_index":235,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/User.html":{}}}],["admin'},{'name",{"_index":120,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["admin.csv",{"_index":467,"title":{},"body":{"components/AdminPage.html":{}}}],["admin.page",{"_index":491,"title":{},"body":{"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{}}}],["admin.page.html",{"_index":268,"title":{},"body":{"components/AdminPage.html":{}}}],["admin.page.scss",{"_index":267,"title":{},"body":{"components/AdminPage.html":{}}}],["adminguard",{"_index":211,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["adminpage",{"_index":119,"title":{"components/AdminPage.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["adminpagemodule",{"_index":485,"title":{"modules/AdminPageModule.html":{}},"body":{"modules/AdminPageModule.html":{},"modules.html":{},"overview.html":{}}}],["adminpageroutingmodule",{"_index":489,"title":{"modules/AdminPageRoutingModule.html":{}},"body":{"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aizasydti8edc1uv0",{"_index":3304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aizasydtqjjhgae5yv_0dmqwu7ce5jhxhddytou",{"_index":3317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["al",{"_index":2830,"title":{},"body":{"injectables/UserService.html":{}}}],["alert",{"_index":1533,"title":{},"body":{"components/HomePage.html":{},"components/IslandFormComponent.html":{}}}],["alert.present",{"_index":1600,"title":{},"body":{"components/HomePage.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{}}}],["alertcontroller",{"_index":1523,"title":{},"body":{"components/HomePage.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{}}}],["aliases",{"_index":3282,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":67,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["allowed",{"_index":237,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["already",{"_index":1442,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["alternativetext",{"_index":1496,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["altura",{"_index":2657,"title":{},"body":{"components/UserCardComponent.html":{}}}],["amount",{"_index":1978,"title":{},"body":{"interfaces/Loan.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{}}}],["amountpaid",{"_index":2060,"title":{},"body":{"components/LoanFormComponent.html":{},"injectables/LoanService.html":{}}}],["amountpaid:number",{"_index":1982,"title":{},"body":{"interfaces/Loan.html":{}}}],["amounttotal",{"_index":2062,"title":{},"body":{"components/LoanFormComponent.html":{},"injectables/LoanService.html":{}}}],["amounttotal:number",{"_index":1983,"title":{},"body":{"interfaces/Loan.html":{}}}],["android",{"_index":3239,"title":{},"body":{"index.html":{}}}],["androidscheme",{"_index":3297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":47,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/HomePage.html":{},"classes/HttpClientWebProvider.html":{},"index.html":{}}}],["angular/animations",{"_index":3127,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":192,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":687,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"classes/HttpClientWebProvider.html":{},"modules/SharedModule.html":{}}}],["angular/compiler",{"_index":3129,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/JwtService.html":{},"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"classes/StrapiDataService.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{},"dependencies.html":{}}}],["angular/core/testing",{"_index":1264,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["angular/forms",{"_index":194,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/HomePageModule.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoginFormComponent.html":{},"modules/LoginPageModule.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"components/UserFormComponent.html":{},"components/VillagerSelectableComponent.html":{},"dependencies.html":{},"classes/numericValidator.html":{}}}],["angular/platform",{"_index":679,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":206,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/LoansPage.html":{},"modules/LoansPageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"components/UserListComponent.html":{},"modules/VillagersPageRoutingModule.html":{},"dependencies.html":{}}}],["animal",{"_index":3185,"title":{},"body":{"index.html":{}}}],["anonymously",{"_index":1424,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["api",{"_index":724,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{},"injectables/VillagerService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["api.service",{"_index":828,"title":{},"body":{"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["api/api.service",{"_index":1886,"title":{},"body":{"injectables/IslandService.html":{},"injectables/LoanService.html":{},"injectables/VillagerService.html":{}}}],["api/firebase/firebase",{"_index":1889,"title":{},"body":{"injectables/IslandService.html":{},"injectables/LoanService.html":{},"injectables/UserService.html":{}}}],["api/firebase/firebase.service",{"_index":1890,"title":{},"body":{"injectables/IslandService.html":{},"injectables/LoanService.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{}}}],["api/strapi/auth",{"_index":1888,"title":{},"body":{"injectables/IslandService.html":{}}}],["api/strapi/data.service",{"_index":1887,"title":{},"body":{"injectables/IslandService.html":{},"injectables/LoanService.html":{},"injectables/VillagerService.html":{}}}],["api:apiservice",{"_index":1203,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["apikey",{"_index":3303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiservice",{"_index":495,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{},"classes/StrapiDataService.html":{},"injectables/VillagerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apisvc",{"_index":834,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["apiurl",{"_index":3300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aplicaciones",{"_index":3177,"title":{},"body":{"index.html":{}}}],["aplicación",{"_index":3243,"title":{},"body":{"index.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"interfaces/Item.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["app.component",{"_index":684,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":569,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["appbackgroundblur",{"_index":908,"title":{},"body":{"directives/BackgroundBlurDirective.html":{}}}],["appbackgroundblur(condition",{"_index":926,"title":{},"body":{"directives/BackgroundBlurDirective.html":{}}}],["appbackgroundblur]'},{'name",{"_index":166,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["appcomponent",{"_index":121,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":3292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":581,"title":{},"body":{"components/AppComponent.html":{},"interfaces/User.html":{},"interfaces/Villager.html":{}}}],["application/x",{"_index":1722,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["apply",{"_index":922,"title":{},"body":{"directives/BackgroundBlurDirective.html":{}}}],["appmodule",{"_index":671,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":3294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appprogress",{"_index":168,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["approutingmodule",{"_index":676,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arquitectura",{"_index":3242,"title":{},"body":{"index.html":{}}}],["array",{"_index":297,"title":{},"body":{"components/AdminPage.html":{},"components/IslandComponent.html":{},"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"components/ProfilePage.html":{},"components/UserListComponent.html":{}}}],["asegura",{"_index":2653,"title":{},"body":{"components/UserCardComponent.html":{}}}],["asignatura",{"_index":3170,"title":{},"body":{"index.html":{}}}],["assets/i18n",{"_index":1070,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["associated",{"_index":2117,"title":{},"body":{"injectables/LoanService.html":{}}}],["async",{"_index":277,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthStrapiService.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"components/HomePage.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoansPage.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{}}}],["asynchronous",{"_index":2727,"title":{},"body":{"components/UserListComponent.html":{}}}],["attachment",{"_index":1625,"title":{},"body":{"components/HomePage.html":{}}}],["attributes",{"_index":1490,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Island.html":{},"injectables/IslandService.html":{},"interfaces/Large.html":{},"interfaces/Loan.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/Villager.html":{},"injectables/VillagerService.html":{}}}],["auth",{"_index":223,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["auth.service",{"_index":251,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthStrapiService.html":{},"interfaces/ButtonConfig.html":{},"injectables/FirebaseAuthService.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"injectables/UserService.html":{}}}],["auth.service.ts",{"_index":1108,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:111",{"_index":1122,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["auth.service.ts:15",{"_index":1115,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["auth.service.ts:156",{"_index":1131,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["auth.service.ts:17",{"_index":1113,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["auth/email",{"_index":1451,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/invalid",{"_index":1453,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/operation",{"_index":1455,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/weak",{"_index":1458,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth:authservice",{"_index":607,"title":{},"body":{"components/AppComponent.html":{}}}],["auth:firebaseauthservice",{"_index":256,"title":{},"body":{"guards/AdminGuard.html":{}}}],["authdomain",{"_index":3306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticated",{"_index":783,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FirebaseAuthService.html":{},"injectables/IslandService.html":{}}}],["authentication",{"_index":224,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/UserCredentials.html":{}}}],["authguard",{"_index":748,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":3280,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":575,"title":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/VillagerSelectableComponent.html":{},"coverage.html":{}}}],["authservice:12",{"_index":843,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["authservice:127",{"_index":1119,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["authservice:13",{"_index":845,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["authservice:14",{"_index":844,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["authservice:148",{"_index":1118,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["authservice:15",{"_index":846,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["authservice:32",{"_index":839,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["authservice:49",{"_index":1116,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["authservice:52",{"_index":840,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["authservice:59",{"_index":842,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["authservice:82",{"_index":1128,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["authservice:88",{"_index":841,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["authservicefactory",{"_index":722,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authservicefactory(backend",{"_index":3162,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authstrapiservice",{"_index":700,"title":{"injectables/AuthStrapiService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthStrapiService.html":{},"components/HomePage.html":{},"injectables/IslandService.html":{},"components/LoansPage.html":{},"components/VillagerSelectableComponent.html":{},"coverage.html":{}}}],["authstrapiservice(jwt",{"_index":728,"title":{},"body":{"modules/AppModule.html":{}}}],["auto",{"_index":657,"title":{},"body":{"components/AppComponent.html":{},"components/LoansPage.html":{},"components/PictureSelectableComponent.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{}}}],["available",{"_index":962,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/UserCardComponent.html":{},"modules.html":{}}}],["avatar",{"_index":667,"title":{},"body":{"components/AppComponent.html":{},"components/IslandComponent.html":{},"components/UserListComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["await",{"_index":384,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthStrapiService.html":{},"interfaces/ButtonConfig.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoansPage.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{}}}],["b",{"_index":1974,"title":{},"body":{"pipes/LatestThreePipe.html":{}}}],["b.createdat",{"_index":1975,"title":{},"body":{"pipes/LatestThreePipe.html":{}}}],["back",{"_index":50,"title":{},"body":{"components/AboutPage.html":{},"components/PictureSelectableComponent.html":{},"index.html":{}}}],["backend",{"_index":723,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["background",{"_index":58,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"directives/BackgroundBlurDirective.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["backgroundblurdirective",{"_index":165,"title":{"directives/BackgroundBlurDirective.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"directives/BackgroundBlurDirective.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["ban",{"_index":973,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{},"injectables/UserService.html":{}}}],["banned",{"_index":618,"title":{},"body":{"components/AppComponent.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"injectables/UserService.html":{}}}],["bans",{"_index":2762,"title":{},"body":{"injectables/UserService.html":{}}}],["banuser",{"_index":2750,"title":{},"body":{"injectables/UserService.html":{}}}],["banuser(user",{"_index":2760,"title":{},"body":{"injectables/UserService.html":{}}}],["bar",{"_index":2037,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"dependencies.html":{}}}],["base",{"_index":1853,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"index.html":{}}}],["base64",{"_index":2318,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["based",{"_index":351,"title":{},"body":{"components/AdminPage.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"components/HomePage.html":{},"pipes/LatestThreePipe.html":{},"components/LoanFormComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["before",{"_index":1795,"title":{},"body":{"components/IslandFormComponent.html":{},"components/UserListComponent.html":{}}}],["behaviorsubject",{"_index":811,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/LoanService.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{}}}],["behaviorsubject('es",{"_index":1058,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["behaviorsubject(false",{"_index":822,"title":{},"body":{"injectables/AuthService-1.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["behaviorsubject(null",{"_index":804,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/IslandService.html":{},"components/ProfilePage.html":{}}}],["being",{"_index":242,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["between",{"_index":473,"title":{},"body":{"components/AdminPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/UserCardComponent.html":{}}}],["birthday_day",{"_index":2871,"title":{},"body":{"interfaces/Villager.html":{},"injectables/VillagerService.html":{}}}],["birthday_month",{"_index":2870,"title":{},"body":{"interfaces/Villager.html":{},"injectables/VillagerService.html":{}}}],["blob",{"_index":427,"title":{},"body":{"components/AdminPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["blob([csvcontent",{"_index":429,"title":{},"body":{"components/AdminPage.html":{}}}],["blob).then(async",{"_index":1327,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["block",{"_index":2394,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["blur",{"_index":924,"title":{},"body":{"directives/BackgroundBlurDirective.html":{}}}],["blur.directive",{"_index":2581,"title":{},"body":{"modules/SharedModule.html":{}}}],["blur.directive.ts",{"_index":907,"title":{},"body":{"directives/BackgroundBlurDirective.html":{},"coverage.html":{}}}],["blur.directive.ts:10",{"_index":920,"title":{},"body":{"directives/BackgroundBlurDirective.html":{}}}],["blur.directive.ts:16",{"_index":915,"title":{},"body":{"directives/BackgroundBlurDirective.html":{}}}],["body",{"_index":469,"title":{},"body":{"components/AdminPage.html":{},"injectables/ApiService.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["bold",{"_index":101,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{}}}],["boolean",{"_index":245,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandComponent.html":{},"pipes/LoanCompletedPipe.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/UserCardComponent.html":{},"injectables/UserService.html":{},"components/VillagerSelectableComponent.html":{}}}],["bootstrap",{"_index":177,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/VillagersPageModule.html":{},"overview.html":{}}}],["border",{"_index":80,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["both",{"_index":2420,"title":{},"body":{"components/ProfilePage.html":{}}}],["bottom",{"_index":319,"title":{},"body":{"components/AdminPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{}}}],["box",{"_index":83,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/VillagerComponent.html":{}}}],["break",{"_index":987,"title":{},"body":{"interfaces/ButtonConfig.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["browse",{"_index":3256,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":680,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":1043,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["browser/animations",{"_index":718,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":717,"title":{},"body":{"modules/AppModule.html":{}}}],["browserlang",{"_index":1079,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["browsermodule",{"_index":678,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":478,"title":{},"body":{"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/UserCardComponent.html":{}}}],["button.picture",{"_index":2387,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["button_configs",{"_index":966,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["buttonconfig",{"_index":931,"title":{"interfaces/ButtonConfig.html":{}},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{},"coverage.html":{}}}],["buttonconfig.text",{"_index":2636,"title":{},"body":{"components/UserCardComponent.html":{}}}],["buttons",{"_index":1592,"title":{},"body":{"components/HomePage.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{}}}],["buttontype",{"_index":955,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["calculates",{"_index":2007,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["callback",{"_index":1008,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/PictureSelectableComponent.html":{},"components/UserCardComponent.html":{}}}],["called",{"_index":1540,"title":{},"body":{"components/HomePage.html":{},"components/LoansPage.html":{},"injectables/VillagerService.html":{}}}],["calls",{"_index":589,"title":{},"body":{"components/AppComponent.html":{}}}],["cambiar",{"_index":637,"title":{},"body":{"components/AppComponent.html":{},"components/UserCardComponent.html":{}}}],["campo",{"_index":1480,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["canactivate",{"_index":214,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":226,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["canactivate:[adminguard",{"_index":775,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivate:[authguard",{"_index":756,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cancel",{"_index":1791,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["cancels",{"_index":1788,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{}}}],["capacitor",{"_index":3234,"title":{},"body":{"index.html":{}}}],["capacitor.config.ts",{"_index":3057,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["capacitor/android",{"_index":3131,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":3133,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":3135,"title":{},"body":{"dependencies.html":{}}}],["capacitor/geolocation",{"_index":1575,"title":{},"body":{"components/HomePage.html":{},"dependencies.html":{}}}],["capacitor/haptics",{"_index":3138,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":3139,"title":{},"body":{"dependencies.html":{}}}],["capacitor/preferences",{"_index":1942,"title":{},"body":{"injectables/JwtService.html":{},"dependencies.html":{}}}],["capacitor/status",{"_index":3140,"title":{},"body":{"dependencies.html":{}}}],["capacitorconfig",{"_index":3291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capitalize",{"_index":1408,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["caption",{"_index":1497,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["card",{"_index":71,"title":{},"body":{"components/AboutPage.html":{},"interfaces/ButtonConfig.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{}}}],["card'},{'name",{"_index":153,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["card.component",{"_index":2583,"title":{},"body":{"modules/SharedModule.html":{}}}],["card.component.html",{"_index":950,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["card.component.scss",{"_index":951,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["card.component.ts",{"_index":935,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:100",{"_index":2627,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card.component.ts:125",{"_index":2629,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card.component.ts:144",{"_index":2631,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card.component.ts:165",{"_index":2630,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card.component.ts:26",{"_index":2619,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card.component.ts:33",{"_index":2622,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card.component.ts:34",{"_index":2620,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card.component.ts:35",{"_index":2621,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card.component.ts:37",{"_index":2624,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card.component.ts:38",{"_index":2625,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card.component.ts:39",{"_index":2623,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card.component.ts:41",{"_index":2633,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card.component.ts:47",{"_index":2632,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card.component.ts:86",{"_index":2628,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card/user",{"_index":934,"title":{},"body":{"interfaces/ButtonConfig.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"coverage.html":{}}}],["case",{"_index":726,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ButtonConfig.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["catch",{"_index":1321,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/UserService.html":{}}}],["catch((err",{"_index":1358,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catch((error:any",{"_index":1950,"title":{},"body":{"injectables/JwtService.html":{}}}],["catch(async",{"_index":1331,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catch(err",{"_index":1076,"title":{},"body":{"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catch(error",{"_index":1391,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UserService.html":{}}}],["catcherror",{"_index":364,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{}}}],["cell",{"_index":2674,"title":{},"body":{"components/UserCardComponent.html":{}}}],["center",{"_index":69,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["change",{"_index":639,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["changepicture",{"_index":2303,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changepicture(base64",{"_index":2315,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changes",{"_index":580,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{}}}],["characters",{"_index":1462,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["check",{"_index":2416,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{}}}],["checkboxmodule",{"_index":2592,"title":{},"body":{"modules/SharedModule.html":{}}}],["checked",{"_index":2085,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["checks",{"_index":1429,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoanFormComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{}}}],["child",{"_index":1543,"title":{},"body":{"components/HomePage.html":{},"components/UserCardComponent.html":{}}}],["choice",{"_index":1535,"title":{},"body":{"components/HomePage.html":{}}}],["class",{"_index":33,"title":{"classes/FirebaseDataService.html":{},"classes/HttpClientWebProvider.html":{},"classes/PasswordValidation.html":{},"classes/StrapiDataService.html":{},"classes/numericValidator.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/JwtService.html":{},"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"classes/StrapiDataService.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{},"coverage.html":{},"classes/numericValidator.html":{}}}],["classes",{"_index":1190,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/HttpClientWebProvider.html":{},"classes/PasswordValidation.html":{},"classes/StrapiDataService.html":{},"classes/numericValidator.html":{},"overview.html":{}}}],["clave",{"_index":3202,"title":{},"body":{"index.html":{}}}],["cleans",{"_index":2325,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["clear",{"_index":2927,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["clearsearch",{"_index":2917,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["clearsearch(input",{"_index":2925,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["clearsearch(input:ioninput",{"_index":2978,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["click",{"_index":979,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserCardComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["clicked",{"_index":2425,"title":{},"body":{"components/ProfilePage.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["client",{"_index":690,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpClientWebProvider.html":{},"coverage.html":{}}}],["client.provider",{"_index":534,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"coverage.html":{}}}],["close",{"_index":2304,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["closes",{"_index":2322,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["cluster_aboutpagemodule",{"_index":180,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":181,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_aboutpagemodule_imports",{"_index":182,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_aboutpageroutingmodule",{"_index":200,"title":{},"body":{"modules/AboutPageRoutingModule.html":{}}}],["cluster_aboutpageroutingmodule_imports",{"_index":201,"title":{},"body":{"modules/AboutPageRoutingModule.html":{}}}],["cluster_adminpagemodule",{"_index":486,"title":{},"body":{"modules/AdminPageModule.html":{},"overview.html":{}}}],["cluster_adminpagemodule_declarations",{"_index":487,"title":{},"body":{"modules/AdminPageModule.html":{},"overview.html":{}}}],["cluster_adminpagemodule_imports",{"_index":488,"title":{},"body":{"modules/AdminPageModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":672,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":673,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":675,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":674,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_approutingmodule",{"_index":744,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cluster_approutingmodule_imports",{"_index":745,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cluster_homepagemodule",{"_index":1651,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declarations",{"_index":1653,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_imports",{"_index":1652,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepageroutingmodule",{"_index":1657,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["cluster_homepageroutingmodule_imports",{"_index":1658,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["cluster_loanspagemodule",{"_index":2184,"title":{},"body":{"modules/LoansPageModule.html":{},"overview.html":{}}}],["cluster_loanspagemodule_declarations",{"_index":2185,"title":{},"body":{"modules/LoansPageModule.html":{},"overview.html":{}}}],["cluster_loanspagemodule_imports",{"_index":2186,"title":{},"body":{"modules/LoansPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule",{"_index":2237,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule_declarations",{"_index":2238,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule_imports",{"_index":2239,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule",{"_index":2495,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule_declarations",{"_index":2497,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule_imports",{"_index":2496,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_profilepageroutingmodule",{"_index":2501,"title":{},"body":{"modules/ProfilePageRoutingModule.html":{}}}],["cluster_profilepageroutingmodule_imports",{"_index":2502,"title":{},"body":{"modules/ProfilePageRoutingModule.html":{}}}],["cluster_registerpagemodule",{"_index":2551,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule_declarations",{"_index":2552,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule_imports",{"_index":2553,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":2558,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2560,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":2559,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_villagerspagemodule",{"_index":3047,"title":{},"body":{"modules/VillagersPageModule.html":{},"overview.html":{}}}],["cluster_villagerspagemodule_declarations",{"_index":3048,"title":{},"body":{"modules/VillagersPageModule.html":{},"overview.html":{}}}],["cluster_villagerspagemodule_imports",{"_index":3049,"title":{},"body":{"modules/VillagersPageModule.html":{},"overview.html":{}}}],["code",{"_index":1055,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["collapse",{"_index":2667,"title":{},"body":{"components/UserCardComponent.html":{}}}],["collection",{"_index":1233,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collection(this._db",{"_index":1346,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionname",{"_index":1342,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/LoanService.html":{}}}],["collectionref",{"_index":1345,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["color",{"_index":60,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["color:var",{"_index":2084,"title":{},"body":{"components/LoanFormComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["column",{"_index":66,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/VillagerComponent.html":{}}}],["commonmodule",{"_index":191,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{}}}],["compilación",{"_index":3238,"title":{},"body":{"index.html":{}}}],["completed",{"_index":1991,"title":{},"body":{"pipes/LoanCompletedPipe.html":{},"components/LoanFormComponent.html":{},"injectables/LoanService.html":{}}}],["completed.pipe",{"_index":2576,"title":{},"body":{"modules/SharedModule.html":{}}}],["completed.pipe.ts",{"_index":1988,"title":{},"body":{"pipes/LoanCompletedPipe.html":{},"coverage.html":{}}}],["completed.pipe.ts:15",{"_index":1992,"title":{},"body":{"pipes/LoanCompletedPipe.html":{}}}],["completed:boolean",{"_index":1984,"title":{},"body":{"interfaces/Loan.html":{}}}],["completed_loans",{"_index":395,"title":{},"body":{"components/AdminPage.html":{}}}],["completedloans",{"_index":454,"title":{},"body":{"components/AdminPage.html":{}}}],["completes",{"_index":1123,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"injectables/IslandService.html":{}}}],["completevillagers",{"_index":1907,"title":{},"body":{"injectables/IslandService.html":{}}}],["completing",{"_index":2049,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["completion",{"_index":1980,"title":{},"body":{"interfaces/Loan.html":{},"pipes/LoanCompletedPipe.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"interfaces/Item.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"modules/LoansPageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"modules/VillagersPageRoutingModule.html":{},"coverage.html":{}}}],["component's",{"_index":1541,"title":{},"body":{"components/HomePage.html":{}}}],["component_template",{"_index":116,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["componentprops",{"_index":1013,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"overview.html":{}}}],["components/island",{"_index":2565,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/island/island.component",{"_index":2564,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/loan",{"_index":2574,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/loan/loan.component",{"_index":2573,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/login",{"_index":2566,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/picture",{"_index":2584,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/register",{"_index":2567,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/user",{"_index":2582,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/villager",{"_index":2568,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/villager/villager.component",{"_index":2563,"title":{},"body":{"modules/SharedModule.html":{}}}],["con",{"_index":1479,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"index.html":{}}}],["condition",{"_index":921,"title":{},"body":{"directives/BackgroundBlurDirective.html":{}}}],["config",{"_index":739,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":936,"title":{},"body":{"interfaces/ButtonConfig.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserCardComponent.html":{}}}],["configurations",{"_index":961,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["confirm",{"_index":2261,"title":{},"body":{"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{}}}],["confirmation",{"_index":1794,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"classes/PasswordValidation.html":{}}}],["confirmcontrolname",{"_index":2258,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["confirmed",{"_index":1797,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{}}}],["confirming",{"_index":1534,"title":{},"body":{"components/HomePage.html":{}}}],["confirmpassword",{"_index":2282,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["connectanonymously",{"_index":1438,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connected",{"_index":888,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connects",{"_index":1437,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connectuserwithemailandpassword(email",{"_index":1467,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.error(\"error",{"_index":1001,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/UserCardComponent.html":{}}}],["console.error('error",{"_index":1604,"title":{},"body":{"components/HomePage.html":{},"injectables/UserService.html":{}}}],["console.error(err",{"_index":1077,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["console.log(\"app",{"_index":620,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(\"auth",{"_index":1448,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(\"añaña",{"_index":2705,"title":{},"body":{"components/UserFormComponent.html":{}}}],["console.log(\"create",{"_index":1446,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(\"guarda",{"_index":789,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.log(\"island",{"_index":1821,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["console.log(\"login",{"_index":1150,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"components/LoginPage.html":{}}}],["console.log(\"url",{"_index":611,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(\"users",{"_index":2739,"title":{},"body":{"components/UserListComponent.html":{}}}],["console.log('confirm",{"_index":1846,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["console.log('password",{"_index":1459,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(`email",{"_index":1452,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(`error",{"_index":1456,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(err",{"_index":1140,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["console.log(error",{"_index":2378,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["console.log(error.message",{"_index":1466,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(loans",{"_index":374,"title":{},"body":{"components/AdminPage.html":{}}}],["console.log(user",{"_index":453,"title":{},"body":{"components/AdminPage.html":{}}}],["const",{"_index":207,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthStrapiService.html":{},"interfaces/ButtonConfig.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"components/LoanFormComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"modules/LoansPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"directives/ProgressDirective.html":{},"modules/RegisterPageRoutingModule.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"modules/VillagersPageRoutingModule.html":{},"classes/numericValidator.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/JwtService.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"classes/StrapiDataService.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{}}}],["constructor(api",{"_index":1192,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["constructor(auth",{"_index":215,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["constructor(dataservice",{"_index":2992,"title":{},"body":{"injectables/VillagerService.html":{}}}],["constructor(el",{"_index":911,"title":{},"body":{"directives/BackgroundBlurDirective.html":{}}}],["constructor(fbauth",{"_index":2110,"title":{},"body":{"injectables/LoanService.html":{}}}],["constructor(fbsvc",{"_index":1866,"title":{},"body":{"injectables/IslandService.html":{},"components/ProfilePage.html":{},"injectables/UserService.html":{}}}],["constructor(firebasesvc",{"_index":1112,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["constructor(formbuilder",{"_index":2193,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["constructor(formmodal",{"_index":1781,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/UserFormComponent.html":{}}}],["constructor(http",{"_index":505,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(httpclient",{"_index":1691,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["constructor(islandservice",{"_index":1522,"title":{},"body":{"components/HomePage.html":{}}}],["constructor(jwtsvc",{"_index":833,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["constructor(loanservice",{"_index":2157,"title":{},"body":{"components/LoansPage.html":{}}}],["constructor(modal",{"_index":2618,"title":{},"body":{"components/UserCardComponent.html":{}}}],["constructor(modalcontroller",{"_index":2719,"title":{},"body":{"components/UserListComponent.html":{}}}],["constructor(picturemodal",{"_index":2312,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["constructor(private",{"_index":929,"title":{},"body":{"directives/BackgroundBlurDirective.html":{},"classes/HttpClientWebProvider.html":{},"components/PictureSelectableComponent.html":{}}}],["constructor(renderer",{"_index":2506,"title":{},"body":{"directives/ProgressDirective.html":{}}}],["constructor(translate",{"_index":1033,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["constructor(usersvc",{"_index":283,"title":{},"body":{"components/AdminPage.html":{}}}],["constructor(villagerservice",{"_index":2923,"title":{},"body":{"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["construir",{"_index":3241,"title":{},"body":{"index.html":{}}}],["consultas",{"_index":3319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consume",{"_index":3222,"title":{},"body":{"index.html":{}}}],["consumo",{"_index":3220,"title":{},"body":{"index.html":{}}}],["contain",{"_index":661,"title":{},"body":{"components/AppComponent.html":{},"components/IslandComponent.html":{},"components/PictureSelectableComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["container",{"_index":61,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{}}}],["containing",{"_index":301,"title":{},"body":{"components/AdminPage.html":{},"injectables/FirebaseAuthService.html":{},"components/HomePage.html":{},"injectables/IslandService.html":{},"pipes/LatestThreePipe.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"components/ProfilePage.html":{},"components/UserFormComponent.html":{}}}],["content",{"_index":54,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["content_type",{"_index":527,"title":{},"body":{"injectables/ApiService.html":{}}}],["content_type=null",{"_index":561,"title":{},"body":{"injectables/ApiService.html":{}}}],["contenttype",{"_index":520,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["contenttype=null",{"_index":542,"title":{},"body":{"injectables/ApiService.html":{}}}],["control",{"_index":2262,"title":{},"body":{"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"index.html":{},"classes/numericValidator.html":{}}}],["control.errors",{"_index":2289,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control.get(confirmcontrolname)?.value",{"_index":2283,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control.get(controlname)?.value",{"_index":2275,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control.get(formcontrolname)?.value",{"_index":3266,"title":{},"body":{"classes/numericValidator.html":{}}}],["control.get(passwordcontrolname)?.value",{"_index":2281,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control?.errors",{"_index":2285,"title":{},"body":{"classes/PasswordValidation.html":{},"classes/numericValidator.html":{}}}],["control?.value",{"_index":2274,"title":{},"body":{"classes/PasswordValidation.html":{},"classes/numericValidator.html":{}}}],["controlar",{"_index":3191,"title":{},"body":{"index.html":{}}}],["controlerrors",{"_index":2536,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["controlname",{"_index":2269,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["controlvalueaccessor",{"_index":2293,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["converted",{"_index":299,"title":{},"body":{"components/AdminPage.html":{}}}],["converts",{"_index":292,"title":{},"body":{"components/AdminPage.html":{}}}],["converttocsv",{"_index":275,"title":{},"body":{"components/AdminPage.html":{}}}],["converttocsv(data",{"_index":290,"title":{},"body":{"components/AdminPage.html":{}}}],["coordinates",{"_index":1601,"title":{},"body":{"components/HomePage.html":{}}}],["coordinates.coords.latitude",{"_index":1603,"title":{},"body":{"components/HomePage.html":{}}}],["copy",{"_index":535,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"classes/HttpClientWebProvider.html":{}}}],["copy.ts",{"_index":1661,"title":{},"body":{"injectables/HttpClientProvider.html":{},"coverage.html":{}}}],["copy.ts:18",{"_index":1669,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["copy.ts:30",{"_index":1668,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["copy.ts:41",{"_index":1676,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["copy.ts:52",{"_index":1678,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["copy.ts:63",{"_index":1672,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["copy.ts:73",{"_index":1665,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["copy.ts:79",{"_index":1683,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["core/guards/admin.guard",{"_index":750,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/auth.guard",{"_index":749,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/interfaces/user",{"_index":598,"title":{},"body":{"components/AppComponent.html":{}}}],["core/services/api/api.service",{"_index":692,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/api/firebase/firebase",{"_index":603,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["core/services/api/firebase/firebase.service",{"_index":710,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/api/strapi/auth",{"_index":701,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/api/strapi/auth.service",{"_index":599,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["core/services/api/strapi/data.service",{"_index":695,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/api/strapi/jwt.service",{"_index":693,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/api/strapi/strapi",{"_index":697,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/custom",{"_index":601,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["core/services/http/http",{"_index":689,"title":{},"body":{"modules/AppModule.html":{}}}],["corresponds",{"_index":963,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["cover",{"_index":669,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{}}}],["coverage",{"_index":3054,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crear",{"_index":1476,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["create",{"_index":1064,"title":{},"body":{"injectables/CustomTranslateService.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/UserRegisterInfo.html":{},"miscellaneous/functions.html":{}}}],["createbody",{"_index":1689,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["createbody(body",{"_index":1693,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["created",{"_index":1353,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createdat",{"_index":1504,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"pipes/LatestThreePipe.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["createdocument(collectionname",{"_index":1343,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createdocumentwithid",{"_index":1354,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createheaders",{"_index":1690,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["createheaders(headers",{"_index":1696,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["creates",{"_index":1341,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createtranslateloader",{"_index":708,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":1068,"title":{},"body":{"injectables/CustomTranslateService.html":{},"miscellaneous/functions.html":{}}}],["createuserwithemailandpassword",{"_index":1254,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createuserwithemailandpassword(email",{"_index":1445,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createuserwithemailandpassword(this._auth",{"_index":1449,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["creating",{"_index":1125,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["credential",{"_index":1267,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["credentials",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/UserCredentials.html":{}}}],["credentials.password",{"_index":867,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["credentials.password).then((credentials",{"_index":1144,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["credentials.ts",{"_index":2675,"title":{},"body":{"interfaces/UserCredentials.html":{},"coverage.html":{}}}],["credentials.user",{"_index":1145,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["credentials.user.user",{"_index":1146,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["credentials.user.user.uid",{"_index":1147,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["credentials.username",{"_index":865,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["criteria",{"_index":2268,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["crossing",{"_index":3186,"title":{},"body":{"index.html":{}}}],["css",{"_index":49,"title":{},"body":{"components/AboutPage.html":{}}}],["cssclass",{"_index":1845,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["csv",{"_index":294,"title":{},"body":{"components/AdminPage.html":{}}}],["csvcontent",{"_index":328,"title":{},"body":{"components/AdminPage.html":{}}}],["current",{"_index":781,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"injectables/UserService.html":{}}}],["currentcontrol",{"_index":2700,"title":{},"body":{"components/UserFormComponent.html":{}}}],["currentcontrol.dirty",{"_index":2702,"title":{},"body":{"components/UserFormComponent.html":{}}}],["currentcontrol.value",{"_index":2704,"title":{},"body":{"components/UserFormComponent.html":{}}}],["currentisland",{"_index":2401,"title":{},"body":{"components/ProfilePage.html":{}}}],["currently",{"_index":1430,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["currentposition",{"_index":1511,"title":{},"body":{"components/HomePage.html":{}}}],["currentuser",{"_index":2764,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuser!.uuid",{"_index":2843,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuser.following",{"_index":2838,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuser.following.filter(uuid",{"_index":2849,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuser.uuid",{"_index":2840,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuserid",{"_index":2787,"title":{},"body":{"injectables/UserService.html":{}}}],["currentusers",{"_index":2814,"title":{},"body":{"injectables/UserService.html":{}}}],["currentusers.map(u",{"_index":2862,"title":{},"body":{"injectables/UserService.html":{}}}],["currentusers.map(user",{"_index":2852,"title":{},"body":{"injectables/UserService.html":{}}}],["currentvillagers",{"_index":3026,"title":{},"body":{"injectables/VillagerService.html":{}}}],["curso",{"_index":3175,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":107,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/UserCardComponent.html":{}}}],["custom",{"_index":477,"title":{},"body":{"components/AdminPage.html":{},"components/AppComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["customtranslateservice",{"_index":576,"title":{"injectables/CustomTranslateService.html":{}},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"coverage.html":{}}}],["da",{"_index":2493,"title":{},"body":{"components/ProfilePage.html":{}}}],["danger",{"_index":974,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["dark",{"_index":2032,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/UserCardComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["data",{"_index":293,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthStrapiService.html":{},"interfaces/ButtonConfig.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"components/IslandFormComponent.html":{},"interfaces/Large.html":{},"components/LoanFormComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"interfaces/Villager.html":{},"injectables/VillagerService.html":{}}}],["data).then(docref",{"_index":1348,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["data.attributes",{"_index":1207,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["data.data['dream_code",{"_index":1181,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["data.data['followers",{"_index":1184,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["data.data['following",{"_index":1185,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["data.data['profile_picture",{"_index":1178,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["data.data['role",{"_index":1182,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["data.data['username",{"_index":1179,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["data.id",{"_index":1183,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["data.jwt",{"_index":873,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["data.map(user",{"_index":418,"title":{},"body":{"components/AdminPage.html":{}}}],["data.role",{"_index":1151,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["data.service",{"_index":698,"title":{},"body":{"modules/AppModule.html":{},"classes/StrapiDataService.html":{}}}],["data.service.ts",{"_index":1191,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{},"coverage.html":{}}}],["data.service.ts:12",{"_index":1193,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.service.ts:8",{"_index":2598,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["data.user.id",{"_index":892,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["data:any):observable",{"_index":1105,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["data:data",{"_index":1215,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["data:data}).pipe(map((response:strapiresponse",{"_index":1218,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["data:t",{"_index":2249,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{}}}],["data['amountpaid",{"_index":2145,"title":{},"body":{"injectables/LoanService.html":{}}}],["data['amounttotal",{"_index":2146,"title":{},"body":{"injectables/LoanService.html":{}}}],["data['birthday_month",{"_index":3014,"title":{},"body":{"injectables/VillagerService.html":{}}}],["data['completed",{"_index":2147,"title":{},"body":{"injectables/LoanService.html":{}}}],["data['dream_code",{"_index":2799,"title":{},"body":{"injectables/UserService.html":{}}}],["data['followers",{"_index":2801,"title":{},"body":{"injectables/UserService.html":{}}}],["data['following",{"_index":2802,"title":{},"body":{"injectables/UserService.html":{}}}],["data['gender",{"_index":3013,"title":{},"body":{"injectables/VillagerService.html":{}}}],["data['image_url",{"_index":3010,"title":{},"body":{"injectables/VillagerService.html":{}}}],["data['island",{"_index":2808,"title":{},"body":{"injectables/UserService.html":{}}}],["data['islander",{"_index":3020,"title":{},"body":{"injectables/VillagerService.html":{}}}],["data['name",{"_index":3009,"title":{},"body":{"injectables/VillagerService.html":{}}}],["data['personality",{"_index":3012,"title":{},"body":{"injectables/VillagerService.html":{}}}],["data['phrase",{"_index":3018,"title":{},"body":{"injectables/VillagerService.html":{}}}],["data['profile_picture",{"_index":2798,"title":{},"body":{"injectables/UserService.html":{}}}],["data['quote",{"_index":3017,"title":{},"body":{"injectables/VillagerService.html":{}}}],["data['role",{"_index":2800,"title":{},"body":{"injectables/UserService.html":{}}}],["data['sign",{"_index":3016,"title":{},"body":{"injectables/VillagerService.html":{}}}],["data['species",{"_index":3011,"title":{},"body":{"injectables/VillagerService.html":{}}}],["data['title",{"_index":2148,"title":{},"body":{"injectables/LoanService.html":{}}}],["data['type",{"_index":2144,"title":{},"body":{"injectables/LoanService.html":{}}}],["data['username",{"_index":2797,"title":{},"body":{"injectables/UserService.html":{}}}],["database",{"_index":1127,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dataservice",{"_index":694,"title":{"injectables/DataService.html":{}},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{},"classes/StrapiDataService.html":{},"injectables/VillagerService.html":{},"coverage.html":{}}}],["dataservice:10",{"_index":1199,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:16",{"_index":2603,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["dataservice:20",{"_index":1198,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:24",{"_index":2605,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["dataservice:28",{"_index":1195,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:32",{"_index":2600,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["dataservice:34",{"_index":1196,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:38",{"_index":2601,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["dataservice:40",{"_index":1197,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:44",{"_index":2602,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["dataservice:46",{"_index":1194,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:50",{"_index":2599,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["date.now",{"_index":1323,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["datos",{"_index":3173,"title":{},"body":{"index.html":{}}}],["de",{"_index":3171,"title":{},"body":{"index.html":{}}}],["debouncetime",{"_index":2448,"title":{},"body":{"components/ProfilePage.html":{}}}],["declarations",{"_index":176,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/VillagersPageModule.html":{},"overview.html":{}}}],["decoration",{"_index":105,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{}}}],["deep",{"_index":2712,"title":{},"body":{"components/UserFormComponent.html":{}}}],["default",{"_index":357,"title":{},"body":{"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"injectables/JwtService.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"classes/numericValidator.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1048,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"injectables/JwtService.html":{},"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"classes/StrapiDataService.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"classes/numericValidator.html":{}}}],["defines",{"_index":960,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["del",{"_index":2741,"title":{},"body":{"components/UserListComponent.html":{},"index.html":{}}}],["delay",{"_index":784,"title":{},"body":{"guards/AuthGuard.html":{}}}],["delete",{"_index":498,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"classes/StrapiDataService.html":{}}}],["delete(path",{"_index":511,"title":{},"body":{"injectables/ApiService.html":{}}}],["delete(path:string",{"_index":564,"title":{},"body":{"injectables/ApiService.html":{}}}],["delete(resource",{"_index":1084,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["delete(resource:string):observable",{"_index":1107,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["delete(url",{"_index":1663,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["deleted",{"_index":1550,"title":{},"body":{"components/HomePage.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{}}}],["deletedoc",{"_index":1241,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedoc(doc(this._db",{"_index":1414,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedocument(collectionname",{"_index":1412,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletefile(path",{"_index":1338,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deleteisland",{"_index":1862,"title":{},"body":{"injectables/IslandService.html":{}}}],["deleteisland(is",{"_index":1872,"title":{},"body":{"injectables/IslandService.html":{}}}],["deleteloan",{"_index":2106,"title":{},"body":{"injectables/LoanService.html":{}}}],["deleteloan(loan",{"_index":2115,"title":{},"body":{"injectables/LoanService.html":{}}}],["deleteobject",{"_index":1252,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deleteobject(fileref",{"_index":1340,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletes",{"_index":1337,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{}}}],["deleteuser",{"_index":1255,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["demostración",{"_index":3252,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":175,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"directives/BackgroundBlurDirective.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"directives/ProgressDirective.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/VillagersPageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":738,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["desarrollar",{"_index":3181,"title":{},"body":{"index.html":{}}}],["desarrollo",{"_index":3176,"title":{},"body":{"index.html":{}}}],["descripción",{"_index":3167,"title":{},"body":{"index.html":{}}}],["description",{"_index":222,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/Island.html":{},"components/IslandComponent.html":{},"injectables/IslandService.html":{},"pipes/LatestThreePipe.html":{},"interfaces/Loan.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UserService.html":{},"interfaces/Villager.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"miscellaneous/functions.html":{},"classes/numericValidator.html":{},"properties.html":{}}}],["deselect",{"_index":2918,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["deselect(popover",{"_index":2928,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["deselect(popover:ionpopover|null=null",{"_index":2981,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["destroyed",{"_index":2327,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["destroytoken",{"_index":1930,"title":{},"body":{"injectables/JwtService.html":{}}}],["detail",{"_index":1155,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"components/UserListComponent.html":{}}}],["details",{"_index":1005,"title":{},"body":{"interfaces/ButtonConfig.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"components/UserCardComponent.html":{}}}],["detallada",{"_index":3226,"title":{},"body":{"index.html":{}}}],["detected",{"_index":1045,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["detects",{"_index":1042,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["determines",{"_index":231,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["deudas",{"_index":3200,"title":{},"body":{"index.html":{}}}],["direction",{"_index":65,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/VillagerComponent.html":{}}}],["direction:column",{"_index":1761,"title":{},"body":{"components/IslandComponent.html":{}}}],["directivas",{"_index":3215,"title":{},"body":{"index.html":{}}}],["directive",{"_index":115,"title":{"directives/BackgroundBlurDirective.html":{},"directives/ProgressDirective.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"directives/BackgroundBlurDirective.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{}}}],["directives",{"_index":164,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"directives/BackgroundBlurDirective.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"overview.html":{}}}],["directives/background",{"_index":2580,"title":{},"body":{"modules/SharedModule.html":{}}}],["directives/progress.directive",{"_index":2577,"title":{},"body":{"modules/SharedModule.html":{}}}],["dirty",{"_index":2682,"title":{},"body":{"components/UserFormComponent.html":{}}}],["dirtyvalues",{"_index":2698,"title":{},"body":{"components/UserFormComponent.html":{}}}],["dirtyvalues[key",{"_index":2703,"title":{},"body":{"components/UserFormComponent.html":{}}}],["disabled",{"_index":2345,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["disabled):hover",{"_index":2490,"title":{},"body":{"components/ProfilePage.html":{}}}],["dismiss",{"_index":2932,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["dismissal",{"_index":1796,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["dismissed",{"_index":1009,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["dismisses",{"_index":1790,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["display",{"_index":63,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["displaying",{"_index":2323,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["displays",{"_index":1532,"title":{},"body":{"components/HomePage.html":{},"components/LoanFormComponent.html":{}}}],["disponible",{"_index":2658,"title":{},"body":{"components/UserCardComponent.html":{}}}],["distinctuntilchanged",{"_index":2449,"title":{},"body":{"components/ProfilePage.html":{}}}],["div",{"_index":2661,"title":{},"body":{"components/UserCardComponent.html":{}}}],["div.user",{"_index":2383,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["divider",{"_index":484,"title":{},"body":{"components/AdminPage.html":{}}}],["dividermodule",{"_index":492,"title":{},"body":{"modules/AdminPageModule.html":{},"modules/SharedModule.html":{}}}],["doc",{"_index":1235,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/LoanService.html":{},"injectables/UserService.html":{}}}],["doc(this._db",{"_index":1356,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.data",{"_index":1369,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/LoanService.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{}}}],["doc.id",{"_index":1368,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UserService.html":{}}}],["doc['data']()['amountpaid",{"_index":2134,"title":{},"body":{"injectables/LoanService.html":{}}}],["doc['data']()['amounttotal",{"_index":2135,"title":{},"body":{"injectables/LoanService.html":{}}}],["doc['data']()['completed",{"_index":2136,"title":{},"body":{"injectables/LoanService.html":{}}}],["doc['data']()['title",{"_index":2137,"title":{},"body":{"injectables/LoanService.html":{}}}],["doc['data']()['type",{"_index":2133,"title":{},"body":{"injectables/LoanService.html":{}}}],["doc['id",{"_index":2132,"title":{},"body":{"injectables/LoanService.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{}}}],["docid",{"_index":1352,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docref",{"_index":1355,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docs",{"_index":3035,"title":{},"body":{"injectables/VillagerService.html":{}}}],["docs.length",{"_index":3037,"title":{},"body":{"injectables/VillagerService.html":{}}}],["docs[0].data",{"_index":3038,"title":{},"body":{"injectables/VillagerService.html":{}}}],["docs[0].id",{"_index":3039,"title":{},"body":{"injectables/VillagerService.html":{}}}],["docsnap",{"_index":1395,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.data",{"_index":1399,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.exists",{"_index":1397,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.id",{"_index":1398,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["document",{"_index":1223,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["document.body.appendchild(link",{"_index":440,"title":{},"body":{"components/AdminPage.html":{}}}],["document.body.removechild(link",{"_index":442,"title":{},"body":{"components/AdminPage.html":{}}}],["document.createelement(\"a",{"_index":432,"title":{},"body":{"components/AdminPage.html":{}}}],["documentation",{"_index":3055,"title":{},"body":{"coverage.html":{}}}],["documentdata",{"_index":1225,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/LoanService.html":{}}}],["documentref",{"_index":1474,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documents",{"_index":1363,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documents.map(doc",{"_index":2796,"title":{},"body":{"injectables/UserService.html":{}}}],["doinfinite",{"_index":276,"title":{},"body":{"components/AdminPage.html":{},"components/VillagersPage.html":{}}}],["doinfinite(event",{"_index":303,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Item.html":{},"components/VillagersPage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["download",{"_index":296,"title":{},"body":{"components/AdminPage.html":{}}}],["downloadcsv",{"_index":278,"title":{},"body":{"components/AdminPage.html":{}}}],["downloadcsvfile",{"_index":279,"title":{},"body":{"components/AdminPage.html":{}}}],["downloadcsvfile(csvcontent",{"_index":324,"title":{},"body":{"components/AdminPage.html":{}}}],["downloaded",{"_index":329,"title":{},"body":{"components/AdminPage.html":{}}}],["downloads",{"_index":327,"title":{},"body":{"components/AdminPage.html":{}}}],["downloadurl",{"_index":1329,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dream_code",{"_index":1180,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"interfaces/User.html":{},"components/UserFormComponent.html":{},"injectables/UserService.html":{}}}],["dream_code?:string",{"_index":2614,"title":{},"body":{"interfaces/User.html":{}}}],["drppyskfqr",{"_index":3316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["during",{"_index":1457,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dynamic",{"_index":3130,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":1309,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["each",{"_index":313,"title":{},"body":{"components/AdminPage.html":{},"interfaces/ButtonConfig.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"injectables/VillagerService.html":{}}}],["ease",{"_index":2210,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["edit",{"_index":971,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/UserCardComponent.html":{}}}],["edited",{"_index":1555,"title":{},"body":{"components/HomePage.html":{},"components/LoansPage.html":{}}}],["editing",{"_index":1004,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["editmodal",{"_index":959,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["el",{"_index":916,"title":{},"body":{"directives/BackgroundBlurDirective.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"directives/ProgressDirective.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["el:elementref",{"_index":2519,"title":{},"body":{"directives/ProgressDirective.html":{}}}],["element",{"_index":114,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"directives/BackgroundBlurDirective.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["elementref",{"_index":912,"title":{},"body":{"directives/BackgroundBlurDirective.html":{},"directives/ProgressDirective.html":{}}}],["email",{"_index":882,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserRegisterInfo.html":{}}}],["email:string",{"_index":2746,"title":{},"body":{"interfaces/UserRegisterInfo.html":{}}}],["emit",{"_index":2097,"title":{},"body":{"components/LoanItemComponent.html":{}}}],["emitevent",{"_index":2067,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["emits",{"_index":981,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/IslandComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserCardComponent.html":{},"components/VillagerItemComponent.html":{}}}],["empty",{"_index":2942,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["empuja",{"_index":2660,"title":{},"body":{"components/UserCardComponent.html":{}}}],["en",{"_index":640,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"index.html":{}}}],["encapsulation",{"_index":2397,"title":{},"body":{"components/ProfilePage.html":{}}}],["encoded",{"_index":1674,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["encontr",{"_index":2846,"title":{},"body":{"injectables/UserService.html":{}}}],["end",{"_index":44,"title":{},"body":{"components/AboutPage.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{},"index.html":{}}}],["end:0",{"_index":2390,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["enforce",{"_index":2267,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["english",{"_index":1057,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["enlace",{"_index":3247,"title":{},"body":{"index.html":{}}}],["enough",{"_index":1461,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ensures",{"_index":2434,"title":{},"body":{"components/ProfilePage.html":{},"directives/ProgressDirective.html":{}}}],["entire",{"_index":2524,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["environment",{"_index":531,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl}${path",{"_index":559,"title":{},"body":{"injectables/ApiService.html":{}}}],["environment.firebase",{"_index":741,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":877,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/RegisterPage.html":{}}}],["error",{"_index":876,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"injectables/UserService.html":{}}}],["error(\"not",{"_index":731,"title":{},"body":{"modules/AppModule.html":{}}}],["error('error",{"_index":1172,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["error('method",{"_index":1136,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{}}}],["error('user",{"_index":1186,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["error.code",{"_index":1450,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["error:err",{"_index":2225,"title":{},"body":{"components/LoginPage.html":{}}}],["errors",{"_index":2284,"title":{},"body":{"classes/PasswordValidation.html":{},"classes/numericValidator.html":{}}}],["errors['passwordmatch",{"_index":2288,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["es",{"_index":594,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"index.html":{}}}],["especiales",{"_index":3209,"title":{},"body":{"index.html":{}}}],["este",{"_index":3169,"title":{},"body":{"index.html":{}}}],["estilizar",{"_index":3246,"title":{},"body":{"index.html":{}}}],["estructurar",{"_index":3245,"title":{},"body":{"index.html":{}}}],["event",{"_index":308,"title":{},"body":{"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"components/IslandComponent.html":{},"interfaces/Item.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/UserCardComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["event.detail.value",{"_index":381,"title":{},"body":{"components/AdminPage.html":{},"components/ProfilePage.html":{}}}],["event.stoppropagation",{"_index":992,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserCardComponent.html":{}}}],["event.target.complete",{"_index":377,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Item.html":{},"components/VillagersPage.html":{}}}],["eventemitter",{"_index":941,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserCardComponent.html":{},"components/VillagerItemComponent.html":{}}}],["eventos",{"_index":3208,"title":{},"body":{"index.html":{}}}],["events",{"_index":980,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/UserCardComponent.html":{}}}],["evt",{"_index":2940,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["evt.preventdefault",{"_index":2973,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["evt.stoppropagation",{"_index":2972,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["ex",{"_index":1056,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["exceeds",{"_index":2043,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["existing",{"_index":1359,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/IslandService.html":{},"components/LoansPage.html":{}}}],["exists",{"_index":1401,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["experiencia",{"_index":3217,"title":{},"body":{"index.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/Island.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/JwtService.html":{},"interfaces/Large.html":{},"pipes/LatestThreePipe.html":{},"interfaces/Loan.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"directives/ProgressDirective.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UserService.html":{},"interfaces/Villager.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{},"classes/numericValidator.html":{}}}],["exports",{"_index":179,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{},"overview.html":{}}}],["ext",{"_index":1499,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["extended_id",{"_index":2608,"title":{},"body":{"interfaces/User.html":{}}}],["extended_id:extended_user.data[0].id",{"_index":901,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["extended_id?:number",{"_index":2612,"title":{},"body":{"interfaces/User.html":{}}}],["extended_user",{"_index":896,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["extended_user.data[0].attributes.island",{"_index":900,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["extends",{"_index":831,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/HttpClientWebProvider.html":{},"classes/StrapiDataService.html":{}}}],["extension",{"_index":1308,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["extract",{"_index":2685,"title":{},"body":{"components/UserFormComponent.html":{}}}],["f0f0f0",{"_index":1854,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{}}}],["fakeasync",{"_index":1263,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["false",{"_index":386,"title":{},"body":{"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandComponent.html":{},"components/LoanFormComponent.html":{},"components/LoansPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/UserCardComponent.html":{},"injectables/UserService.html":{},"components/VillagerSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["fb.netlify.app",{"_index":3250,"title":{},"body":{"index.html":{}}}],["fbauth",{"_index":570,"title":{},"body":{"components/AppComponent.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"injectables/UserService.html":{}}}],["fbauth:firebaseauthservice",{"_index":954,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["fbsvc",{"_index":1868,"title":{},"body":{"injectables/IslandService.html":{},"injectables/LoanService.html":{},"components/ProfilePage.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{}}}],["fetch",{"_index":309,"title":{},"body":{"components/AdminPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fetched",{"_index":315,"title":{},"body":{"components/AdminPage.html":{}}}],["fetches",{"_index":345,"title":{},"body":{"components/AdminPage.html":{},"components/UserListComponent.html":{}}}],["fetching",{"_index":323,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Item.html":{},"injectables/UserService.html":{},"components/VillagersPage.html":{}}}],["ffdfe9",{"_index":2645,"title":{},"body":{"components/UserCardComponent.html":{}}}],["ffffff2d",{"_index":1766,"title":{},"body":{"components/IslandComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["ffffff5b",{"_index":1639,"title":{},"body":{"components/HomePage.html":{}}}],["field",{"_index":1374,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{}}}],["fieldname",{"_index":1471,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fieldupdate",{"_index":1475,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fieldvalue",{"_index":1472,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/Island.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/JwtService.html":{},"interfaces/Large.html":{},"pipes/LatestThreePipe.html":{},"interfaces/Loan.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"directives/ProgressDirective.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UserService.html":{},"interfaces/Villager.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{},"coverage.html":{},"classes/numericValidator.html":{}}}],["fileloader",{"_index":2330,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.click",{"_index":2380,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files",{"_index":2370,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files.length",{"_index":2371,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files[0",{"_index":2372,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.onchange",{"_index":2369,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["filename",{"_index":325,"title":{},"body":{"components/AdminPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filereader",{"_index":2374,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileref",{"_index":1339,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["files",{"_index":1067,"title":{},"body":{"injectables/CustomTranslateService.html":{},"miscellaneous/functions.html":{}}}],["fileupload(blob",{"_index":1311,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fill",{"_index":939,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["fills",{"_index":1745,"title":{},"body":{"components/IslandComponent.html":{}}}],["filter",{"_index":1402,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/LoanCompletedPipe.html":{},"injectables/UserService.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{}}}],["filter((user",{"_index":2809,"title":{},"body":{"injectables/UserService.html":{}}}],["filter((villager",{"_index":3021,"title":{},"body":{"injectables/VillagerService.html":{}}}],["filter(filtering",{"_index":2934,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["filter(filtering:string",{"_index":2968,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["filterby",{"_index":1373,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filtered",{"_index":481,"title":{},"body":{"components/AdminPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/LoanCompletedPipe.html":{},"components/ProfilePage.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{}}}],["filteredusers",{"_index":270,"title":{},"body":{"components/AdminPage.html":{},"components/ProfilePage.html":{}}}],["filtering",{"_index":350,"title":{},"body":{"components/AdminPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/VillagerSelectableComponent.html":{}}}],["filters",{"_index":2422,"title":{},"body":{"components/ProfilePage.html":{}}}],["firebase",{"_index":51,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["firebase.service",{"_index":1135,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["firebase/app",{"_index":1230,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebase/auth",{"_index":1262,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebase/firestore",{"_index":1246,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/LoanService.html":{}}}],["firebase/storage",{"_index":1253,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebaseapp",{"_index":1229,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebaseauthservice",{"_index":216,"title":{"injectables/FirebaseAuthService.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ButtonConfig.html":{},"injectables/FirebaseAuthService.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["firebaseauthservice(firebase",{"_index":729,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseconfig",{"_index":1279,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebasedataservice",{"_index":1189,"title":{"classes/FirebaseDataService.html":{}},"body":{"classes/FirebaseDataService.html":{},"coverage.html":{}}}],["firebasedocument",{"_index":1220,"title":{"interfaces/FirebaseDocument.html":{}},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firebaseservice",{"_index":709,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{},"components/ProfilePage.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["firebasestorage",{"_index":1251,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebasestoragefile",{"_index":1266,"title":{"interfaces/FirebaseStorageFile.html":{}},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firebasesvc",{"_index":1114,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["firebaseusercredential",{"_index":1134,"title":{"interfaces/FirebaseUserCredential.html":{}},"body":{"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firestorage",{"_index":1316,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firestore",{"_index":1224,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fit",{"_index":660,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["fixed",{"_index":2175,"title":{},"body":{"components/LoansPage.html":{}}}],["flag",{"_index":2525,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["flex",{"_index":64,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["flow",{"_index":1767,"title":{},"body":{"components/IslandComponent.html":{},"components/LoansPage.html":{}}}],["fn",{"_index":2338,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["follow",{"_index":957,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"injectables/UserService.html":{}}}],["followed",{"_index":2414,"title":{},"body":{"components/ProfilePage.html":{}}}],["followers",{"_index":903,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/ButtonConfig.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"injectables/UserService.html":{}}}],["following",{"_index":904,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/ButtonConfig.html":{},"injectables/FirebaseAuthService.html":{},"components/ProfilePage.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"injectables/UserService.html":{}}}],["follows",{"_index":2766,"title":{},"body":{"injectables/UserService.html":{}}}],["followuser",{"_index":2751,"title":{},"body":{"injectables/UserService.html":{}}}],["followuser(usertofollow",{"_index":2763,"title":{},"body":{"injectables/UserService.html":{}}}],["font",{"_index":99,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["footer",{"_index":1856,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{}}}],["forkjoin",{"_index":362,"title":{},"body":{"components/AdminPage.html":{}}}],["form",{"_index":91,"title":{},"body":{"components/AboutPage.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"classes/numericValidator.html":{}}}],["form'},{'name",{"_index":129,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["form.component",{"_index":944,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{}}}],["form.component.html",{"_index":1776,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.scss",{"_index":1775,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts",{"_index":1774,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:12",{"_index":2194,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:14",{"_index":2529,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:15",{"_index":2050,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["form.component.ts:16",{"_index":2051,"title":{},"body":{"components/LoanFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts:17",{"_index":1803,"title":{},"body":{"components/IslandFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:18",{"_index":1801,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoginFormComponent.html":{}}}],["form.component.ts:19",{"_index":1804,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["form.component.ts:20",{"_index":1811,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["form.component.ts:22",{"_index":1786,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["form.component.ts:27",{"_index":2040,"title":{},"body":{"components/LoanFormComponent.html":{},"components/UserFormComponent.html":{}}}],["form.component.ts:32",{"_index":2195,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:33",{"_index":2528,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:36",{"_index":1813,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["form.component.ts:38",{"_index":1784,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["form.component.ts:43",{"_index":2523,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:44",{"_index":2686,"title":{},"body":{"components/UserFormComponent.html":{}}}],["form.component.ts:48",{"_index":2041,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["form.component.ts:52",{"_index":2681,"title":{},"body":{"components/UserFormComponent.html":{}}}],["form.component.ts:57",{"_index":2042,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["form.component.ts:66",{"_index":1787,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["form.component.ts:67",{"_index":2689,"title":{},"body":{"components/UserFormComponent.html":{}}}],["form.component.ts:71",{"_index":2048,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["form.component.ts:73",{"_index":1798,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["form.component.ts:81",{"_index":1792,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["form.controls[key",{"_index":2701,"title":{},"body":{"components/UserFormComponent.html":{}}}],["form/island",{"_index":1572,"title":{},"body":{"components/HomePage.html":{},"components/IslandFormComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["form/loan",{"_index":1574,"title":{},"body":{"components/HomePage.html":{},"components/LoanFormComponent.html":{},"components/LoansPage.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["form/login",{"_index":2192,"title":{},"body":{"components/LoginFormComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["form/register",{"_index":2220,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterFormComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["form/user",{"_index":943,"title":{},"body":{"interfaces/ButtonConfig.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"coverage.html":{}}}],["form:formgroup",{"_index":2531,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form:formgroup|null",{"_index":2202,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["formarray",{"_index":1815,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["format",{"_index":295,"title":{},"body":{"components/AdminPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["formatos",{"_index":3219,"title":{},"body":{"index.html":{}}}],["formats",{"_index":1483,"title":{"interfaces/Formats.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["formatted",{"_index":302,"title":{},"body":{"components/AdminPage.html":{}}}],["formbuilder",{"_index":1782,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserFormComponent.html":{}}}],["formbuilder:formbuilder",{"_index":2203,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["formcontrol",{"_index":2270,"title":{},"body":{"classes/PasswordValidation.html":{},"classes/numericValidator.html":{}}}],["formcontrolname",{"_index":3263,"title":{},"body":{"classes/numericValidator.html":{}}}],["formdata",{"_index":1714,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["formgroup",{"_index":1802,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserFormComponent.html":{}}}],["formmodal",{"_index":1785,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/UserFormComponent.html":{}}}],["formsmodule",{"_index":193,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{}}}],["forwardref",{"_index":2357,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":3232,"title":{},"body":{"index.html":{},"properties.html":{}}}],["freeconnection",{"_index":1317,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["from(this.firebasesvc.createdocumentwithid('users",{"_index":1171,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["from(this.firebasesvc.getdocument('users",{"_index":1175,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["from(this.firebasesvc.signout(false",{"_index":1187,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["fromobject",{"_index":1708,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["front",{"_index":43,"title":{},"body":{"components/AboutPage.html":{},"index.html":{}}}],["full",{"_index":759,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["funcionalidades",{"_index":3201,"title":{},"body":{"index.html":{}}}],["function",{"_index":719,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/UserCardComponent.html":{},"injectables/UserService.html":{},"components/VillagerSelectableComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/numericValidator.html":{}}}],["functions",{"_index":3159,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":3315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gap",{"_index":93,"title":{},"body":{"components/AboutPage.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/VillagerComponent.html":{}}}],["gap:1rem",{"_index":1642,"title":{},"body":{"components/HomePage.html":{},"components/VillagersPage.html":{}}}],["gender",{"_index":2869,"title":{},"body":{"interfaces/Villager.html":{},"injectables/VillagerService.html":{}}}],["generates",{"_index":1743,"title":{},"body":{"components/IslandComponent.html":{}}}],["geolocalización",{"_index":1606,"title":{},"body":{"components/HomePage.html":{}}}],["geolocation",{"_index":1526,"title":{},"body":{"components/HomePage.html":{}}}],["geolocation.getcurrentposition",{"_index":1602,"title":{},"body":{"components/HomePage.html":{}}}],["gestionar",{"_index":3212,"title":{},"body":{"index.html":{}}}],["gestión",{"_index":3195,"title":{},"body":{"index.html":{}}}],["get(key",{"_index":1035,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["get(path",{"_index":514,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(path:string",{"_index":557,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(resource",{"_index":1088,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["get(resource:string):observable",{"_index":1103,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["get(url",{"_index":1667,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["getallusers",{"_index":2752,"title":{},"body":{"injectables/UserService.html":{}}}],["getapp",{"_index":1228,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getbrowserlang",{"_index":1031,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["getdatafromurl",{"_index":499,"title":{},"body":{"injectables/ApiService.html":{}}}],["getdatafromurl(url",{"_index":516,"title":{},"body":{"injectables/ApiService.html":{}}}],["getdatafromurl(url:string):observable",{"_index":554,"title":{},"body":{"injectables/ApiService.html":{}}}],["getdirtyvalues",{"_index":2679,"title":{},"body":{"components/UserFormComponent.html":{}}}],["getdirtyvalues(form",{"_index":2680,"title":{},"body":{"components/UserFormComponent.html":{}}}],["getdoc",{"_index":1237,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdoc(docref",{"_index":1396,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs",{"_index":1239,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs(collection(this._db",{"_index":1366,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs(paginatedquery",{"_index":1387,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs(q",{"_index":1406,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocument(collectionname",{"_index":1394,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocuments(collectionname",{"_index":1364,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocumentsby(collectionname",{"_index":1403,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocumentsfiltered(collectionname",{"_index":1409,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocumentspaginated(collectionname",{"_index":1379,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdownloadurl",{"_index":1249,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdownloadurl(storageref).then(async",{"_index":1328,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getfiltered",{"_index":2753,"title":{},"body":{"injectables/UserService.html":{},"injectables/VillagerService.html":{}}}],["getfiltered(name",{"_index":2994,"title":{},"body":{"injectables/VillagerService.html":{}}}],["getfiltered(username",{"_index":2769,"title":{},"body":{"injectables/UserService.html":{}}}],["getfirestore",{"_index":1231,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getfirestore(this._app",{"_index":1285,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getheader",{"_index":500,"title":{},"body":{"injectables/ApiService.html":{}}}],["getheader(url",{"_index":518,"title":{},"body":{"injectables/ApiService.html":{}}}],["getheader(url:string",{"_index":541,"title":{},"body":{"injectables/ApiService.html":{}}}],["gethemisphere",{"_index":1513,"title":{},"body":{"components/HomePage.html":{}}}],["getimage",{"_index":501,"title":{},"body":{"injectables/ApiService.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["getimage(url",{"_index":522,"title":{},"body":{"injectables/ApiService.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["getimage(url:string):observable",{"_index":552,"title":{},"body":{"injectables/ApiService.html":{}}}],["getisland",{"_index":1812,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["getpaginatedusers",{"_index":2754,"title":{},"body":{"injectables/UserService.html":{}}}],["getpaginatedvillagers",{"_index":2990,"title":{},"body":{"injectables/VillagerService.html":{}}}],["getstorage",{"_index":1247,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getstorage(this._app",{"_index":1287,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getter",{"_index":1301,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getting",{"_index":3163,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":1931,"title":{},"body":{"injectables/JwtService.html":{}}}],["getuserbyid",{"_index":2755,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid(uid",{"_index":2772,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserisland",{"_index":1863,"title":{},"body":{"injectables/IslandService.html":{}}}],["getuserislandbyid",{"_index":1864,"title":{},"body":{"injectables/IslandService.html":{}}}],["getuserislandbyid(uuid",{"_index":1875,"title":{},"body":{"injectables/IslandService.html":{}}}],["getuserloanbyid",{"_index":2107,"title":{},"body":{"injectables/LoanService.html":{}}}],["getuserloanbyid(uuid",{"_index":2118,"title":{},"body":{"injectables/LoanService.html":{}}}],["getuserloans",{"_index":2108,"title":{},"body":{"injectables/LoanService.html":{}}}],["getvillager",{"_index":2902,"title":{},"body":{"components/VillagerItemComponent.html":{}}}],["getvillagerbyname",{"_index":2991,"title":{},"body":{"injectables/VillagerService.html":{}}}],["getvillagerbyname(name",{"_index":2999,"title":{},"body":{"injectables/VillagerService.html":{}}}],["getvillagersslots",{"_index":1735,"title":{},"body":{"components/IslandComponent.html":{}}}],["github",{"_index":52,"title":{},"body":{"components/AboutPage.html":{}}}],["given",{"_index":1039,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["gotouserpage",{"_index":280,"title":{},"body":{"components/AdminPage.html":{},"components/ProfilePage.html":{}}}],["gotouserpage(user",{"_index":330,"title":{},"body":{"components/AdminPage.html":{},"components/ProfilePage.html":{}}}],["gotouserpage(user:any",{"_index":387,"title":{},"body":{"components/AdminPage.html":{}}}],["gotouserprofile",{"_index":2717,"title":{},"body":{"components/UserListComponent.html":{}}}],["gotouserprofile(uuid",{"_index":2723,"title":{},"body":{"components/UserListComponent.html":{}}}],["gradient(circle",{"_index":2230,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["graph",{"_index":3257,"title":{},"body":{"modules.html":{}}}],["group",{"_index":2684,"title":{},"body":{"components/UserFormComponent.html":{}}}],["guard",{"_index":210,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":212,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"overview.html":{}}}],["h1",{"_index":97,"title":{},"body":{"components/AboutPage.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{}}}],["h2",{"_index":102,"title":{},"body":{"components/AboutPage.html":{},"components/LoanComponent.html":{}}}],["h3",{"_index":2035,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["hacia",{"_index":2662,"title":{},"body":{"components/UserCardComponent.html":{}}}],["handle",{"_index":2086,"title":{},"body":{"components/LoanFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["handlebuttonclick",{"_index":2615,"title":{},"body":{"components/UserCardComponent.html":{}}}],["handlebuttonclick(event",{"_index":2626,"title":{},"body":{"components/UserCardComponent.html":{}}}],["handlebuttonclick(event:any",{"_index":983,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["handler",{"_index":1594,"title":{},"body":{"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{}}}],["handles",{"_index":305,"title":{},"body":{"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{}}}],["haserror",{"_index":2520,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["haserror(control",{"_index":2521,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["hash",{"_index":1498,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["hasvalue",{"_index":2300,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["header",{"_index":390,"title":{},"body":{"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{}}}],["header:any",{"_index":543,"title":{},"body":{"injectables/ApiService.html":{}}}],["header['accept",{"_index":545,"title":{},"body":{"injectables/ApiService.html":{}}}],["header['authorization']=`bearer",{"_index":550,"title":{},"body":{"injectables/ApiService.html":{}}}],["header['content",{"_index":547,"title":{},"body":{"injectables/ApiService.html":{}}}],["headers",{"_index":1664,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["headers:headers",{"_index":1716,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["height",{"_index":56,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"interfaces/Large.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["height:300px",{"_index":2384,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["height:3vw",{"_index":2914,"title":{},"body":{"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["height:6rem",{"_index":1771,"title":{},"body":{"components/IslandComponent.html":{}}}],["helper",{"_index":2784,"title":{},"body":{"injectables/UserService.html":{}}}],["hemisphere",{"_index":394,"title":{},"body":{"components/AdminPage.html":{},"components/HomePage.html":{},"interfaces/Island.html":{},"injectables/IslandService.html":{}}}],["hemispherealert",{"_index":1514,"title":{},"body":{"components/HomePage.html":{}}}],["hemispherealert(data",{"_index":1530,"title":{},"body":{"components/HomePage.html":{}}}],["hero",{"_index":1621,"title":{},"body":{"components/HomePage.html":{}}}],["herramientas",{"_index":3210,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":439,"title":{},"body":{"components/AdminPage.html":{}}}],["highlight",{"_index":2492,"title":{},"body":{"components/ProfilePage.html":{}}}],["highlight):not(.p",{"_index":2489,"title":{},"body":{"components/ProfilePage.html":{}}}],["home",{"_index":751,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["home'},{'name",{"_index":124,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["home.edit",{"_index":1754,"title":{},"body":{"components/IslandComponent.html":{}}}],["home.message",{"_index":1620,"title":{},"body":{"components/HomePage.html":{}}}],["home.myloans",{"_index":1619,"title":{},"body":{"components/HomePage.html":{}}}],["home.page",{"_index":1656,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":1510,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":1509,"title":{},"body":{"components/HomePage.html":{}}}],["home.seeall",{"_index":1618,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":123,"title":{"components/HomePage.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{},"properties.html":{}}}],["homepagemodule",{"_index":1650,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["homepageroutingmodule",{"_index":1654,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["hook",{"_index":1539,"title":{},"body":{"components/HomePage.html":{}}}],["horizons",{"_index":3187,"title":{},"body":{"index.html":{}}}],["host",{"_index":918,"title":{},"body":{"directives/BackgroundBlurDirective.html":{},"directives/ProgressDirective.html":{},"components/UserFormComponent.html":{}}}],["hover",{"_index":2485,"title":{},"body":{"components/ProfilePage.html":{}}}],["hr",{"_index":2180,"title":{},"body":{"components/LoansPage.html":{}}}],["html",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["html/css",{"_index":3244,"title":{},"body":{"index.html":{}}}],["htmlinputelement",{"_index":2331,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["http",{"_index":510,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"miscellaneous/functions.html":{}}}],["http/http",{"_index":533,"title":{},"body":{"injectables/ApiService.html":{}}}],["http:httpclientprovider",{"_index":538,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpclient",{"_index":685,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"classes/HttpClientWebProvider.html":{},"modules/SharedModule.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":686,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientprovider",{"_index":506,"title":{"injectables/HttpClientProvider.html":{}},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"coverage.html":{}}}],["httpclientprovider:110",{"_index":1702,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["httpclientprovider:136",{"_index":1699,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["httpclientprovider:153",{"_index":1705,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["httpclientprovider:29",{"_index":1701,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["httpclientprovider:45",{"_index":1700,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["httpclientprovider:68",{"_index":1703,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["httpclientprovider:89",{"_index":1704,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["httpclientwebprovider",{"_index":688,"title":{"classes/HttpClientWebProvider.html":{}},"body":{"modules/AppModule.html":{},"classes/HttpClientWebProvider.html":{},"coverage.html":{}}}],["httpclientwebprovider(http",{"_index":721,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1698,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["httpheaders(headers",{"_index":1719,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["httpparams",{"_index":1695,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["httpproviderfactory",{"_index":743,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httpproviderfactory(http",{"_index":720,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["https",{"_index":3298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://ionicframework.com",{"_index":3279,"title":{},"body":{"properties.html":{}}}],["https://nooks",{"_index":3249,"title":{},"body":{"index.html":{}}}],["https://nookstoolbox",{"_index":3301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.youtube.com/watch?v=edorc8rageo",{"_index":3253,"title":{},"body":{"index.html":{}}}],["icon",{"_index":649,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["icono",{"_index":2742,"title":{},"body":{"components/UserListComponent.html":{}}}],["id",{"_index":391,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthStrapiService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Island.html":{},"injectables/IslandService.html":{},"interfaces/Large.html":{},"interfaces/Loan.html":{},"injectables/LoanService.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/Villager.html":{},"injectables/VillagerService.html":{}}}],["id:data.id",{"_index":1208,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["id:response.data.id",{"_index":1212,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["id:string",{"_index":1729,"title":{},"body":{"interfaces/Island.html":{},"interfaces/Loan.html":{}}}],["identifier",{"_index":864,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/Island.html":{},"interfaces/Large.html":{},"interfaces/Loan.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["idioma",{"_index":638,"title":{},"body":{"components/AppComponent.html":{}}}],["if(!url.includes('auth",{"_index":549,"title":{},"body":{"injectables/ApiService.html":{}}}],["if(accept",{"_index":544,"title":{},"body":{"injectables/ApiService.html":{}}}],["if(body",{"_index":1713,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["if(contenttype",{"_index":546,"title":{},"body":{"injectables/ApiService.html":{}}}],["if(control",{"_index":3265,"title":{},"body":{"classes/numericValidator.html":{}}}],["if(popover",{"_index":2983,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["if(propagate",{"_index":2962,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["if(this.token",{"_index":1947,"title":{},"body":{"injectables/JwtService.html":{}}}],["if(urlencoded",{"_index":1720,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["if(user?.role",{"_index":617,"title":{},"body":{"components/AppComponent.html":{}}}],["image",{"_index":1332,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/VillagerComponent.html":{}}}],["image/jpeg",{"_index":1335,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["image_url",{"_index":2867,"title":{},"body":{"interfaces/Villager.html":{},"injectables/VillagerService.html":{}}}],["imagen",{"_index":2833,"title":{},"body":{"injectables/UserService.html":{}}}],["images",{"_index":1336,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["imageupload(blob",{"_index":1333,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["img",{"_index":90,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/IslandComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["img::part(image",{"_index":2386,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["immediately",{"_index":2436,"title":{},"body":{"components/ProfilePage.html":{}}}],["implemented",{"_index":732,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"guards/AuthGuard.html":{},"interfaces/ButtonConfig.html":{},"interfaces/Item.html":{},"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/PictureSelectableComponent.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/Island.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/JwtService.html":{},"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"classes/StrapiDataService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"interfaces/Villager.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{},"classes/numericValidator.html":{}}}],["import('./pages/about/about.module').then",{"_index":768,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/admin/admin.module').then",{"_index":773,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/home/home.module').then",{"_index":753,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/loans/loans.module').then",{"_index":766,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/login/login.module').then",{"_index":762,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/profile/profile.module').then",{"_index":770,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/register/register.module').then",{"_index":764,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/villagers/villagers.module').then",{"_index":760,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":479,"title":{},"body":{"components/AdminPage.html":{},"components/AppComponent.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{}}}],["imports",{"_index":189,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{}}}],["including",{"_index":1463,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Loan.html":{},"interfaces/Pagination.html":{}}}],["incluyendo",{"_index":3194,"title":{},"body":{"index.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/Island.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/JwtService.html":{},"interfaces/Large.html":{},"interfaces/Loan.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UserService.html":{},"interfaces/Villager.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"miscellaneous/functions.html":{},"classes/numericValidator.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexeddblocalpersistence",{"_index":1260,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["indicating",{"_index":2417,"title":{},"body":{"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"injectables/UserService.html":{}}}],["inesperado",{"_index":1173,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["inferior",{"_index":2664,"title":{},"body":{"components/UserCardComponent.html":{}}}],["infinite",{"_index":306,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Item.html":{},"components/VillagersPage.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/Island.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/JwtService.html":{},"interfaces/Large.html":{},"pipes/LatestThreePipe.html":{},"interfaces/Loan.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"directives/ProgressDirective.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UserService.html":{},"interfaces/Villager.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{},"classes/numericValidator.html":{}}}],["info).subscribe",{"_index":887,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["info).subscribe(is",{"_index":1609,"title":{},"body":{"components/HomePage.html":{}}}],["info.data",{"_index":1614,"title":{},"body":{"components/HomePage.html":{},"components/LoansPage.html":{}}}],["info.data.dream_code",{"_index":2821,"title":{},"body":{"injectables/UserService.html":{}}}],["info.data.profile_picture",{"_index":2824,"title":{},"body":{"injectables/UserService.html":{}}}],["info.data.username",{"_index":2820,"title":{},"body":{"injectables/UserService.html":{}}}],["info.email",{"_index":883,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["info.password",{"_index":885,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["info.password).then((credentials",{"_index":1162,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["info.role",{"_index":997,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["info.ts",{"_index":2744,"title":{},"body":{"interfaces/UserRegisterInfo.html":{},"coverage.html":{}}}],["info.username",{"_index":884,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["info.uuid",{"_index":1170,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["información",{"_index":3203,"title":{},"body":{"index.html":{}}}],["information",{"_index":341,"title":{},"body":{"components/AdminPage.html":{},"injectables/FirebaseAuthService.html":{},"components/HomePage.html":{},"injectables/IslandService.html":{},"components/LoansPage.html":{},"components/RegisterPage.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UserService.html":{}}}],["inherited",{"_index":838,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/HttpClientWebProvider.html":{},"classes/StrapiDataService.html":{}}}],["init",{"_index":832,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{}}}],["init(firebaseconfig",{"_index":1280,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initial",{"_index":1006,"title":{},"body":{"interfaces/ButtonConfig.html":{},"interfaces/Item.html":{},"components/UserCardComponent.html":{},"components/VillagersPage.html":{}}}],["initialization",{"_index":1546,"title":{},"body":{"components/HomePage.html":{}}}],["initialize",{"_index":1281,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Item.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["initializeapp",{"_index":1227,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeapp(firebaseconfig",{"_index":1283,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeauth",{"_index":1259,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeauth(getapp",{"_index":1289,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializes",{"_index":347,"title":{},"body":{"components/AdminPage.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{}}}],["initiates",{"_index":321,"title":{},"body":{"components/AdminPage.html":{},"components/HomePage.html":{},"components/LoansPage.html":{}}}],["inject",{"_index":847,"title":{},"body":{"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"directives/ProgressDirective.html":{},"classes/StrapiDataService.html":{}}}],["inject('firebase",{"_index":1274,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["injectable",{"_index":247,"title":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/HttpClientProvider.html":{},"injectables/IslandService.html":{},"injectables/JwtService.html":{},"injectables/LoanService.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"injectables/IslandService.html":{},"injectables/JwtService.html":{},"injectables/LoanService.html":{},"classes/StrapiDataService.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":537,"title":{},"body":{"injectables/ApiService.html":{},"injectables/JwtService.html":{}}}],["injectable({providedin:'root",{"_index":1686,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["injectables",{"_index":496,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/HttpClientProvider.html":{},"injectables/IslandService.html":{},"injectables/JwtService.html":{},"injectables/LoanService.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{},"overview.html":{}}}],["inner",{"_index":2395,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["input",{"_index":353,"title":{},"body":{"components/AdminPage.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"dependencies.html":{},"classes/numericValidator.html":{}}}],["input('appprogress",{"_index":2512,"title":{},"body":{"directives/ProgressDirective.html":{}}}],["input('username",{"_index":2199,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["input('villager",{"_index":2906,"title":{},"body":{"components/VillagerItemComponent.html":{}}}],["input.value",{"_index":2979,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["inputmaskmodule",{"_index":2588,"title":{},"body":{"modules/SharedModule.html":{}}}],["inputs",{"_index":909,"title":{},"body":{"directives/BackgroundBlurDirective.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginFormComponent.html":{},"directives/ProgressDirective.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["inputtext",{"_index":2713,"title":{},"body":{"components/UserFormComponent.html":{}}}],["inputtextmodule",{"_index":2590,"title":{},"body":{"modules/SharedModule.html":{}}}],["instance",{"_index":1065,"title":{},"body":{"injectables/CustomTranslateService.html":{},"classes/PasswordValidation.html":{},"miscellaneous/functions.html":{},"classes/numericValidator.html":{}}}],["instanceof",{"_index":624,"title":{},"body":{"components/AppComponent.html":{},"classes/HttpClientWebProvider.html":{},"classes/PasswordValidation.html":{},"classes/numericValidator.html":{}}}],["integrar",{"_index":3236,"title":{},"body":{"index.html":{}}}],["interface",{"_index":930,"title":{"interfaces/ButtonConfig.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Island.html":{},"interfaces/Item.html":{},"interfaces/Large.html":{},"interfaces/Loan.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/Villager.html":{}},"body":{"interfaces/ButtonConfig.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Island.html":{},"interfaces/Item.html":{},"interfaces/Large.html":{},"interfaces/Loan.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/Villager.html":{},"components/VillagersPage.html":{},"coverage.html":{}}}],["interfaces",{"_index":932,"title":{},"body":{"interfaces/ButtonConfig.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Island.html":{},"interfaces/Item.html":{},"interfaces/Large.html":{},"interfaces/Loan.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/Villager.html":{},"overview.html":{}}}],["interfaces/data",{"_index":1099,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["interfaces/island",{"_index":1885,"title":{},"body":{"injectables/IslandService.html":{},"injectables/LoanService.html":{}}}],["interfaces/loan",{"_index":2125,"title":{},"body":{"injectables/LoanService.html":{}}}],["interfaces/strapi",{"_index":857,"title":{},"body":{"injectables/AuthStrapiService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["interfaces/user",{"_index":812,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/UserService.html":{}}}],["interfaces/villager",{"_index":1892,"title":{},"body":{"injectables/IslandService.html":{},"injectables/VillagerService.html":{}}}],["interfaz",{"_index":3233,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":1454,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["io.ionic.starter",{"_index":3293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ion",{"_index":53,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["ionic",{"_index":46,"title":{},"body":{"components/AboutPage.html":{},"index.html":{},"properties.html":{}}}],["ionic/angular",{"_index":196,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IslandFormComponent.html":{},"interfaces/Item.html":{},"components/LoanFormComponent.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterFormComponent.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":195,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{}}}],["ionicmodule.forroot",{"_index":733,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicons",{"_index":3145,"title":{},"body":{"dependencies.html":{}}}],["ionicroutestrategy",{"_index":682,"title":{},"body":{"modules/AppModule.html":{}}}],["ioninput",{"_index":2450,"title":{},"body":{"components/ProfilePage.html":{},"components/VillagerSelectableComponent.html":{}}}],["ionpopover",{"_index":2929,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["ios",{"_index":1586,"title":{},"body":{"components/HomePage.html":{},"components/IslandFormComponent.html":{}}}],["is.id",{"_index":1916,"title":{},"body":{"injectables/IslandService.html":{}}}],["is.id).then",{"_index":1912,"title":{},"body":{"injectables/IslandService.html":{}}}],["isdata",{"_index":1595,"title":{},"body":{"components/HomePage.html":{}}}],["isdisabled",{"_index":2301,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["isdoc.length",{"_index":1898,"title":{},"body":{"injectables/IslandService.html":{}}}],["isdoc[0].data['hemisphere",{"_index":1906,"title":{},"body":{"injectables/IslandService.html":{}}}],["isdoc[0].data['name",{"_index":1905,"title":{},"body":{"injectables/IslandService.html":{}}}],["isdoc[0].data['villagers'].map((villagername",{"_index":1901,"title":{},"body":{"injectables/IslandService.html":{}}}],["isdoc[0]['id",{"_index":1904,"title":{},"body":{"injectables/IslandService.html":{}}}],["isfollowing",{"_index":2782,"title":{},"body":{"injectables/UserService.html":{}}}],["isformerror",{"_index":2522,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["isla",{"_index":3197,"title":{},"body":{"index.html":{}}}],["island",{"_index":128,"title":{"interfaces/Island.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"injectables/AuthStrapiService.html":{},"components/HomePage.html":{},"interfaces/Island.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{}}}],["island'},{'name",{"_index":126,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["island(_island",{"_index":1818,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["island.component.html",{"_index":1734,"title":{},"body":{"components/IslandComponent.html":{}}}],["island.component.scss",{"_index":1733,"title":{},"body":{"components/IslandComponent.html":{}}}],["island.form.edit",{"_index":1849,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["island.form.new",{"_index":1848,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["island.form.none",{"_index":2986,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["island.hemisphere",{"_index":1756,"title":{},"body":{"components/IslandComponent.html":{}}}],["island.hemisphere.none",{"_index":1757,"title":{},"body":{"components/IslandComponent.html":{}}}],["island.name",{"_index":1850,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["island.service",{"_index":2126,"title":{},"body":{"injectables/LoanService.html":{}}}],["island?.attributes?.hemisphere",{"_index":460,"title":{},"body":{"components/AdminPage.html":{},"components/IslandComponent.html":{}}}],["island?.attributes?.name",{"_index":459,"title":{},"body":{"components/AdminPage.html":{},"components/IslandComponent.html":{}}}],["island?.attributes?.villagers?.map(villager",{"_index":447,"title":{},"body":{"components/AdminPage.html":{}}}],["island?:any",{"_index":2611,"title":{},"body":{"interfaces/User.html":{}}}],["island_name",{"_index":393,"title":{},"body":{"components/AdminPage.html":{}}}],["islandcomponent",{"_index":125,"title":{"components/IslandComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["islander",{"_index":3019,"title":{},"body":{"injectables/VillagerService.html":{}}}],["islander:boolean",{"_index":2874,"title":{},"body":{"interfaces/Villager.html":{}}}],["islandformcomponent",{"_index":127,"title":{"components/IslandFormComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["islands",{"_index":312,"title":{},"body":{"components/AdminPage.html":{},"components/HomePage.html":{},"injectables/IslandService.html":{}}}],["islandservice",{"_index":286,"title":{"injectables/IslandService.html":{}},"body":{"components/AdminPage.html":{},"components/HomePage.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/ProfilePage.html":{},"components/VillagerSelectableComponent.html":{},"coverage.html":{}}}],["islandsvc",{"_index":285,"title":{},"body":{"components/AdminPage.html":{}}}],["islannd",{"_index":2483,"title":{},"body":{"components/ProfilePage.html":{}}}],["islogged",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["isme",{"_index":956,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{}}}],["ismodalopen",{"_index":1512,"title":{},"body":{"components/HomePage.html":{},"components/LoansPage.html":{},"components/ProfilePage.html":{}}}],["isopen",{"_index":2429,"title":{},"body":{"components/ProfilePage.html":{}}}],["issvc",{"_index":2111,"title":{},"body":{"injectables/LoanService.html":{}}}],["isuserconnected",{"_index":1431,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["isuserconnectedanonymously",{"_index":1435,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["isuserfollowed",{"_index":2403,"title":{},"body":{"components/ProfilePage.html":{}}}],["isuserfollowed(useruuid",{"_index":2412,"title":{},"body":{"components/ProfilePage.html":{}}}],["item",{"_index":664,"title":{"interfaces/Item.html":{}},"body":{"components/AppComponent.html":{},"components/IslandFormComponent.html":{},"interfaces/Item.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{}}}],["item'},{'name",{"_index":135,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["item.component",{"_index":2570,"title":{},"body":{"modules/SharedModule.html":{}}}],["item.component.html",{"_index":2090,"title":{},"body":{"components/LoanItemComponent.html":{},"components/VillagerItemComponent.html":{}}}],["item.component.scss",{"_index":2089,"title":{},"body":{"components/LoanItemComponent.html":{},"components/VillagerItemComponent.html":{}}}],["item.component.ts",{"_index":2088,"title":{},"body":{"components/LoanItemComponent.html":{},"components/VillagerItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:11",{"_index":2094,"title":{},"body":{"components/LoanItemComponent.html":{},"components/VillagerItemComponent.html":{}}}],["item.component.ts:12",{"_index":2093,"title":{},"body":{"components/LoanItemComponent.html":{}}}],["item.component.ts:13",{"_index":2899,"title":{},"body":{"components/VillagerItemComponent.html":{}}}],["item.component.ts:14",{"_index":2092,"title":{},"body":{"components/LoanItemComponent.html":{}}}],["item.component.ts:16",{"_index":2091,"title":{},"body":{"components/LoanItemComponent.html":{}}}],["item.component.ts:17",{"_index":2900,"title":{},"body":{"components/VillagerItemComponent.html":{}}}],["item.component.ts:20",{"_index":2903,"title":{},"body":{"components/VillagerItemComponent.html":{}}}],["item.component.ts:22",{"_index":2898,"title":{},"body":{"components/VillagerItemComponent.html":{}}}],["item.component.ts:23",{"_index":2095,"title":{},"body":{"components/LoanItemComponent.html":{}}}],["item.component.ts:31",{"_index":2901,"title":{},"body":{"components/VillagerItemComponent.html":{}}}],["item.component.ts:32",{"_index":2098,"title":{},"body":{"components/LoanItemComponent.html":{}}}],["item.component.ts:40",{"_index":2096,"title":{},"body":{"components/LoanItemComponent.html":{}}}],["item/loan",{"_index":2087,"title":{},"body":{"components/LoanItemComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["item/villager",{"_index":2569,"title":{},"body":{"modules/SharedModule.html":{},"components/VillagerItemComponent.html":{},"coverage.html":{}}}],["items",{"_index":68,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"interfaces/Item.html":{},"pipes/LatestThreePipe.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["items.sort((a",{"_index":1973,"title":{},"body":{"pipes/LatestThreePipe.html":{}}}],["join(\"\\n",{"_index":426,"title":{},"body":{"components/AdminPage.html":{}}}],["jpg",{"_index":1310,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["json",{"_index":1071,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["json.parse(ret.value",{"_index":1946,"title":{},"body":{"injectables/JwtService.html":{}}}],["json.stringify(token",{"_index":1954,"title":{},"body":{"injectables/JwtService.html":{}}}],["juego",{"_index":3184,"title":{},"body":{"index.html":{}}}],["jugables",{"_index":3206,"title":{},"body":{"index.html":{}}}],["jugadores",{"_index":3190,"title":{},"body":{"index.html":{}}}],["justify",{"_index":70,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["jwt",{"_index":507,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/functions.html":{}}}],["jwt.service",{"_index":827,"title":{},"body":{"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{}}}],["jwt:jwtservice",{"_index":539,"title":{},"body":{"injectables/ApiService.html":{}}}],["jwtservice",{"_index":508,"title":{"injectables/JwtService.html":{}},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["jwtsvc",{"_index":836,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["jwttoken",{"_index":1937,"title":{},"body":{"injectables/JwtService.html":{},"miscellaneous/typealiases.html":{}}}],["jwttoken):observable",{"_index":1952,"title":{},"body":{"injectables/JwtService.html":{}}}],["key",{"_index":370,"title":{},"body":{"components/AdminPage.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/JwtService.html":{},"components/UserCardComponent.html":{}}}],["la",{"_index":643,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/UserCardComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["label",{"_index":1919,"title":{},"body":{"interfaces/Item.html":{},"components/VillagersPage.html":{}}}],["lang",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["lang:string",{"_index":605,"title":{},"body":{"components/AppComponent.html":{}}}],["language",{"_index":582,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{}}}],["languages",{"_index":1047,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["large",{"_index":1485,"title":{"interfaces/Large.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["las",{"_index":3199,"title":{},"body":{"index.html":{}}}],["last",{"_index":1377,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["lastdocument",{"_index":1376,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["lastuser",{"_index":2749,"title":{},"body":{"injectables/UserService.html":{}}}],["lastvaluefrom",{"_index":848,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/VillagerSelectableComponent.html":{}}}],["lastvaluefrom(this.apisvc.get(`/extended",{"_index":897,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["lastvaluefrom(this.apisvc.post(\"/extended",{"_index":893,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["lastvaluefrom(this.jwtsvc.savetoken(data.jwt",{"_index":871,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["lastvaluefrom(this.translate.get('island.alert.cancel",{"_index":1844,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["lastvaluefrom(this.translate.get('island.alert.header",{"_index":1842,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["lastvaluefrom(this.translate.get('island.alert.message",{"_index":1843,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["lastvaluefrom(this.translate.get('island.hemisphere.confirm",{"_index":1587,"title":{},"body":{"components/HomePage.html":{}}}],["lastvaluefrom(this.translate.get('island.hemisphere.continue",{"_index":1591,"title":{},"body":{"components/HomePage.html":{}}}],["lastvaluefrom(this.translate.get('island.hemisphere.no",{"_index":1599,"title":{},"body":{"components/HomePage.html":{}}}],["lastvaluefrom(this.translate.get('island.hemisphere.yes",{"_index":1593,"title":{},"body":{"components/HomePage.html":{}}}],["lastvaluefrom(this.translate.get('island.hemisphere.youarein",{"_index":1589,"title":{},"body":{"components/HomePage.html":{}}}],["lastvaluefrom(this.translate.get('loans.confirm.yes",{"_index":2068,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["lastvaluefrom(this.translate.get('login.ban",{"_index":1156,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["lastvaluefrom(this.translate.get(`island.hemisphere.${hemisphere",{"_index":1590,"title":{},"body":{"components/HomePage.html":{}}}],["lastvaluefrom(this.translate.use(language)).then(_",{"_index":1074,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["lastvillager",{"_index":2989,"title":{},"body":{"injectables/VillagerService.html":{}}}],["latest",{"_index":1967,"title":{},"body":{"pipes/LatestThreePipe.html":{}}}],["latestthree",{"_index":1962,"title":{},"body":{"pipes/LatestThreePipe.html":{}}}],["latestthreepipe",{"_index":1958,"title":{"pipes/LatestThreePipe.html":{}},"body":{"pipes/LatestThreePipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["left",{"_index":1640,"title":{},"body":{"components/HomePage.html":{},"components/ProfilePage.html":{},"components/UserFormComponent.html":{}}}],["legacy",{"_index":1682,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["legend",{"_index":113,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"modules/LoansPageModule.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"modules/VillagersPageModule.html":{},"overview.html":{}}}],["lenguaje",{"_index":3230,"title":{},"body":{"index.html":{}}}],["level",{"_index":2526,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["li.p",{"_index":2491,"title":{},"body":{"components/ProfilePage.html":{}}}],["li:not(.p",{"_index":2488,"title":{},"body":{"components/ProfilePage.html":{}}}],["lifecycle",{"_index":1538,"title":{},"body":{"components/HomePage.html":{}}}],["light",{"_index":2182,"title":{},"body":{"components/LoansPage.html":{}}}],["limba",{"_index":642,"title":{},"body":{"components/AppComponent.html":{}}}],["limit",{"_index":1244,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["limit(pagesize",{"_index":1385,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["link",{"_index":104,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["link.click",{"_index":441,"title":{},"body":{"components/AdminPage.html":{}}}],["link.download",{"_index":433,"title":{},"body":{"components/AdminPage.html":{}}}],["link.setattribute(\"download",{"_index":437,"title":{},"body":{"components/AdminPage.html":{}}}],["link.setattribute(\"href",{"_index":436,"title":{},"body":{"components/AdminPage.html":{}}}],["link.style.visibility",{"_index":438,"title":{},"body":{"components/AdminPage.html":{}}}],["link:hover",{"_index":665,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":1019,"title":{},"body":{"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"interfaces/Item.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{}}}],["list'},{'name",{"_index":156,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["list.component",{"_index":948,"title":{},"body":{"interfaces/ButtonConfig.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{}}}],["list.component.html",{"_index":2716,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.scss",{"_index":2715,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts",{"_index":2714,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["list.component.ts:14",{"_index":2722,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:15",{"_index":2721,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:16",{"_index":2720,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:27",{"_index":2730,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:34",{"_index":2731,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:41",{"_index":2726,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:58",{"_index":2724,"title":{},"body":{"components/UserListComponent.html":{}}}],["list/user",{"_index":947,"title":{},"body":{"interfaces/ButtonConfig.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["listener",{"_index":1278,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["lists",{"_index":2786,"title":{},"body":{"injectables/UserService.html":{}}}],["listtype",{"_index":1020,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{}}}],["listtype:string",{"_index":2732,"title":{},"body":{"components/UserListComponent.html":{}}}],["literal",{"_index":358,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Island.html":{},"interfaces/Loan.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiExtendedUser.html":{},"components/UserCardComponent.html":{},"interfaces/Villager.html":{}}}],["load",{"_index":1927,"title":{},"body":{"interfaces/Item.html":{},"components/UserListComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["loadchildren",{"_index":752,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":343,"title":{},"body":{"components/AdminPage.html":{}}}],["loader",{"_index":735,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["loading",{"_index":1066,"title":{},"body":{"injectables/CustomTranslateService.html":{},"components/PictureSelectableComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{}}}],["loadislandsforusers",{"_index":281,"title":{},"body":{"components/AdminPage.html":{}}}],["loadislandsforusers(users",{"_index":339,"title":{},"body":{"components/AdminPage.html":{}}}],["loadmutualusers",{"_index":2404,"title":{},"body":{"components/ProfilePage.html":{}}}],["loads",{"_index":311,"title":{},"body":{"components/AdminPage.html":{},"components/ProfilePage.html":{}}}],["loadtoken",{"_index":1932,"title":{},"body":{"injectables/JwtService.html":{}}}],["loaduser",{"_index":1109,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["loadusers",{"_index":2718,"title":{},"body":{"components/UserListComponent.html":{}}}],["loadvillagers",{"_index":2919,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["loadvillagers(filter",{"_index":2936,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["loan",{"_index":133,"title":{"interfaces/Loan.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"interfaces/Loan.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{}}}],["loan!.attributes!.amountpaid",{"_index":2025,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["loan!.attributes!.amounttotal",{"_index":2026,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["loan!.attributes!.type",{"_index":2024,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["loan'},{'name",{"_index":131,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["loan(_loan",{"_index":2054,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["loan.attributes",{"_index":1613,"title":{},"body":{"components/HomePage.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{}}}],["loan.attributes.completed",{"_index":1996,"title":{},"body":{"pipes/LoanCompletedPipe.html":{}}}],["loan.attributes.completed).length",{"_index":456,"title":{},"body":{"components/AdminPage.html":{}}}],["loan.component.html",{"_index":1999,"title":{},"body":{"components/LoanComponent.html":{}}}],["loan.component.scss",{"_index":1998,"title":{},"body":{"components/LoanComponent.html":{}}}],["loan.id",{"_index":2151,"title":{},"body":{"injectables/LoanService.html":{}}}],["loan:loan",{"_index":2013,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{}}}],["loan?.attributes?.title",{"_index":2022,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["loancompleted",{"_index":1989,"title":{},"body":{"pipes/LoanCompletedPipe.html":{}}}],["loancompletedpipe",{"_index":1986,"title":{"pipes/LoanCompletedPipe.html":{}},"body":{"pipes/LoanCompletedPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["loancomponent",{"_index":130,"title":{"components/LoanComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["loanformcomponent",{"_index":132,"title":{"components/LoanFormComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["loanitemcomponent",{"_index":134,"title":{"components/LoanItemComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["loans",{"_index":451,"title":{},"body":{"components/AdminPage.html":{},"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"pipes/LoanCompletedPipe.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"modules/LoansPageModule.html":{}}}],["loans!.filter(loan",{"_index":455,"title":{},"body":{"components/AdminPage.html":{}}}],["loans!.length",{"_index":458,"title":{},"body":{"components/AdminPage.html":{}}}],["loans'},{'name",{"_index":137,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["loans.amountpaid",{"_index":2079,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["loans.amounttotal",{"_index":2080,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["loans.bells",{"_index":2027,"title":{},"body":{"components/LoanComponent.html":{}}}],["loans.complete",{"_index":2081,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["loans.completed",{"_index":2173,"title":{},"body":{"components/LoansPage.html":{}}}],["loans.filter(loan",{"_index":1995,"title":{},"body":{"pipes/LoanCompletedPipe.html":{}}}],["loans.form.edit",{"_index":2074,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["loans.form.new",{"_index":2073,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["loans.nocompleted",{"_index":2172,"title":{},"body":{"components/LoansPage.html":{}}}],["loans.page",{"_index":2189,"title":{},"body":{"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{}}}],["loans.page.html",{"_index":2155,"title":{},"body":{"components/LoansPage.html":{}}}],["loans.page.scss",{"_index":2154,"title":{},"body":{"components/LoansPage.html":{}}}],["loans.submit",{"_index":2082,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["loans.title",{"_index":2075,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["loans.type",{"_index":2023,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["loans.type.bridge",{"_index":2078,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["loans.type.house",{"_index":2076,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["loans.type.incline",{"_index":2077,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["loansdoc.length",{"_index":2142,"title":{},"body":{"injectables/LoanService.html":{}}}],["loansdoc.map(doc",{"_index":2143,"title":{},"body":{"injectables/LoanService.html":{}}}],["loanservice",{"_index":288,"title":{"injectables/LoanService.html":{}},"body":{"components/AdminPage.html":{},"components/HomePage.html":{},"components/LoanFormComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"coverage.html":{}}}],["loanspage",{"_index":136,"title":{"components/LoansPage.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["loanspagemodule",{"_index":2183,"title":{"modules/LoansPageModule.html":{}},"body":{"modules/LoansPageModule.html":{},"modules.html":{},"overview.html":{}}}],["loanspageroutingmodule",{"_index":2187,"title":{"modules/LoansPageRoutingModule.html":{}},"body":{"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["loansvc",{"_index":287,"title":{},"body":{"components/AdminPage.html":{},"components/HomePage.html":{}}}],["local",{"_index":2785,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.getitem('returnurl",{"_index":610,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["localstorage.removeitem('returnurl",{"_index":613,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["localstorage.setitem('returnurl",{"_index":262,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["logged",{"_index":790,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FirebaseAuthService.html":{}}}],["login",{"_index":139,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["login'},{'name",{"_index":141,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["login(credentials",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["login(credentials:object):observable",{"_index":813,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{}}}],["login.account",{"_index":2549,"title":{},"body":{"components/RegisterPage.html":{}}}],["login.confirmerror",{"_index":2539,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["login.create",{"_index":2228,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterFormComponent.html":{}}}],["login.login",{"_index":2206,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["login.page",{"_index":2242,"title":{},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{}}}],["login.page.html",{"_index":2213,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":2212,"title":{},"body":{"components/LoginPage.html":{}}}],["login.passworderror",{"_index":2538,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["login.register",{"_index":2227,"title":{},"body":{"components/LoginPage.html":{}}}],["login.username",{"_index":2709,"title":{},"body":{"components/UserFormComponent.html":{}}}],["login.welcome",{"_index":2226,"title":{},"body":{"components/LoginPage.html":{}}}],["loginformcomponent",{"_index":138,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["loginpage",{"_index":140,"title":{"components/LoginPage.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["loginpagemodule",{"_index":2236,"title":{"modules/LoginPageModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules.html":{},"overview.html":{}}}],["loginpageroutingmodule",{"_index":2240,"title":{"modules/LoginPageRoutingModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["logout",{"_index":590,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["logout():observable",{"_index":815,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{}}}],["logs",{"_index":1117,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"components/UserFormComponent.html":{}}}],["los",{"_index":3189,"title":{},"body":{"index.html":{}}}],["lxdbtcqwg9",{"_index":3325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m",{"_index":754,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.aboutpagemodule",{"_index":769,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.adminpagemodule",{"_index":774,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":755,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.loanspagemodule",{"_index":767,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.loginpagemodule",{"_index":763,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilepagemodule",{"_index":771,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.registerpagemodule",{"_index":765,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.villagerspagemodule",{"_index":761,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main.save",{"_index":2710,"title":{},"body":{"components/UserFormComponent.html":{}}}],["manipulate",{"_index":919,"title":{},"body":{"directives/BackgroundBlurDirective.html":{},"directives/ProgressDirective.html":{}}}],["map",{"_index":248,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/LoanService.html":{},"classes/StrapiDataService.html":{},"injectables/VillagerService.html":{}}}],["map(user",{"_index":260,"title":{},"body":{"guards/AdminGuard.html":{}}}],["mapfunction",{"_index":1417,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["mapfunction(doc",{"_index":1421,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["margin",{"_index":77,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{}}}],["margin:0",{"_index":2388,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["margin:2rem",{"_index":96,"title":{},"body":{"components/AboutPage.html":{}}}],["match",{"_index":1994,"title":{},"body":{"pipes/LoanCompletedPipe.html":{},"classes/PasswordValidation.html":{}}}],["matching",{"_index":171,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/Island.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/JwtService.html":{},"interfaces/Large.html":{},"pipes/LatestThreePipe.html":{},"interfaces/Loan.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"directives/ProgressDirective.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UserService.html":{},"interfaces/Villager.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"classes/numericValidator.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.max(value",{"_index":2514,"title":{},"body":{"directives/ProgressDirective.html":{}}}],["max",{"_index":658,"title":{},"body":{"components/AppComponent.html":{}}}],["me():observable",{"_index":816,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{}}}],["measurementid",{"_index":3314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":111,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{}}}],["medium",{"_index":1486,"title":{"interfaces/Medium.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["mejorar",{"_index":3216,"title":{},"body":{"index.html":{}}}],["menu",{"_index":655,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.about",{"_index":635,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.admin",{"_index":636,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.home",{"_index":632,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.loans",{"_index":633,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.logout",{"_index":645,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.menu",{"_index":631,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.villagers",{"_index":634,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":1588,"title":{},"body":{"components/HomePage.html":{},"components/IslandFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["messageservice",{"_index":715,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthService.html":{},"miscellaneous/functions.html":{}}}],["messagingsenderid",{"_index":3311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meta",{"_index":1491,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["method",{"_index":591,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePage.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerItemComponent.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"injectables/JwtService.html":{},"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"classes/StrapiDataService.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"classes/numericValidator.html":{}}}],["middle",{"_index":663,"title":{},"body":{"components/AppComponent.html":{}}}],["mime",{"_index":1305,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["mimetype",{"_index":1304,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["min",{"_index":55,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{}}}],["min_width",{"_index":2505,"title":{},"body":{"directives/ProgressDirective.html":{}}}],["miscellaneous",{"_index":3158,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":952,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandFormComponent.html":{},"interfaces/Item.html":{},"components/LoanFormComponent.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagersPage.html":{}}}],["modal.auto",{"_index":2393,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["modal.ondiddismiss().then(_",{"_index":1026,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["modal.ondiddismiss().then(result",{"_index":1015,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["modal.present",{"_index":1014,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["modal:modalcontroller",{"_index":2221,"title":{},"body":{"components/LoginPage.html":{}}}],["modalcontroller",{"_index":945,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandFormComponent.html":{},"interfaces/Item.html":{},"components/LoanFormComponent.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagersPage.html":{}}}],["mode",{"_index":1585,"title":{},"body":{"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{}}}],["mode==('new')?('main.create",{"_index":1851,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["mode==(\\'new\\')?(\\'main.create",{"_index":1857,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["modified",{"_index":2683,"title":{},"body":{"components/UserFormComponent.html":{}}}],["module",{"_index":172,"title":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/VillagersPageModule.html":{},"overview.html":{}}}],["modules",{"_index":174,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":310,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Item.html":{},"components/VillagersPage.html":{}}}],["msg",{"_index":1315,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["multi",{"_index":2360,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["multiplataforma",{"_index":3178,"title":{},"body":{"index.html":{}}}],["mutual",{"_index":2419,"title":{},"body":{"components/ProfilePage.html":{}}}],["mutualusers",{"_index":2402,"title":{},"body":{"components/ProfilePage.html":{}}}],["mutualuseruuids",{"_index":2473,"title":{},"body":{"components/ProfilePage.html":{}}}],["mutualuseruuids.map(uuid",{"_index":2476,"title":{},"body":{"components/ProfilePage.html":{}}}],["n/a",{"_index":2985,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["name",{"_index":117,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/Island.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"injectables/JwtService.html":{},"interfaces/Large.html":{},"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"interfaces/Villager.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"miscellaneous/functions.html":{},"classes/numericValidator.html":{}}}],["name:string",{"_index":1730,"title":{},"body":{"interfaces/Island.html":{}}}],["nativas",{"_index":3237,"title":{},"body":{"index.html":{}}}],["native",{"_index":2391,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["nav",{"_index":2487,"title":{},"body":{"components/ProfilePage.html":{}}}],["navbar",{"_index":651,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":2411,"title":{},"body":{"components/ProfilePage.html":{},"components/UserListComponent.html":{}}}],["navigates",{"_index":332,"title":{},"body":{"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/ProfilePage.html":{},"components/UserListComponent.html":{}}}],["navigating",{"_index":2725,"title":{},"body":{"components/UserListComponent.html":{}}}],["navigation",{"_index":338,"title":{},"body":{"components/AdminPage.html":{}}}],["navigationend",{"_index":600,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["nbsp",{"_index":2635,"title":{},"body":{"components/UserCardComponent.html":{}}}],["needed",{"_index":2046,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["new",{"_index":428,"title":{},"body":{"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"injectables/JwtService.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/UserCardComponent.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UserService.html":{},"components/VillagerItemComponent.html":{},"injectables/VillagerService.html":{},"coverage.html":{},"index.html":{}}}],["newfollowers",{"_index":2841,"title":{},"body":{"injectables/UserService.html":{}}}],["newfollowing",{"_index":2837,"title":{},"body":{"injectables/UserService.html":{}}}],["newusers",{"_index":2806,"title":{},"body":{"injectables/UserService.html":{}}}],["newusers.length",{"_index":2810,"title":{},"body":{"injectables/UserService.html":{}}}],["newusers[newusers.length",{"_index":2812,"title":{},"body":{"injectables/UserService.html":{}}}],["newvillagers",{"_index":3007,"title":{},"body":{"injectables/VillagerService.html":{}}}],["newvillagers.length",{"_index":3022,"title":{},"body":{"injectables/VillagerService.html":{}}}],["newvillagers[newvillagers.length",{"_index":3024,"title":{},"body":{"injectables/VillagerService.html":{}}}],["next",{"_index":870,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/RegisterPage.html":{}}}],["next:data",{"_index":2224,"title":{},"body":{"components/LoginPage.html":{}}}],["ng",{"_index":2711,"title":{},"body":{"components/UserFormComponent.html":{},"dependencies.html":{}}}],["ng_value_accessor",{"_index":2358,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["ngafterviewinit",{"_index":1515,"title":{},"body":{"components/HomePage.html":{}}}],["ngmodule",{"_index":190,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{}}}],["ngondestroy",{"_index":2305,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"interfaces/Item.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/PictureSelectableComponent.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["ngx",{"_index":706,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["nocheck",{"_index":1680,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["nois",{"_index":1633,"title":{},"body":{"components/HomePage.html":{}}}],["non",{"_index":239,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["none",{"_index":106,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{}}}],["nook's",{"_index":646,"title":{},"body":{"components/AppComponent.html":{}}}],["nook\\'s",{"_index":670,"title":{},"body":{"components/AppComponent.html":{}}}],["nookipedia",{"_index":3223,"title":{},"body":{"index.html":{}}}],["nooks",{"_index":3295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nooks_toolbox_data.csv",{"_index":466,"title":{},"body":{"components/AdminPage.html":{}}}],["normal",{"_index":1164,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"interfaces/User.html":{}}}],["north",{"_index":1528,"title":{},"body":{"components/HomePage.html":{}}}],["notify",{"_index":1749,"title":{},"body":{"components/IslandComponent.html":{}}}],["npcs",{"_index":3207,"title":{},"body":{"index.html":{}}}],["nueva",{"_index":2832,"title":{},"body":{"injectables/UserService.html":{}}}],["null",{"_index":463,"title":{},"body":{"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/JwtService.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"injectables/UserService.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"classes/numericValidator.html":{}}}],["num",{"_index":2922,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["number",{"_index":1371,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Item.html":{},"interfaces/Large.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"interfaces/Medium.html":{},"interfaces/Pagination.html":{},"directives/ProgressDirective.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/Villager.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["number:'1.0",{"_index":2028,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["number:\\'1.0",{"_index":2038,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["numbers",{"_index":1465,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IslandFormComponent.html":{}}}],["numeric",{"_index":3259,"title":{},"body":{"classes/numericValidator.html":{}}}],["numericproto",{"_index":3260,"title":{},"body":{"classes/numericValidator.html":{}}}],["numericproto(formcontrolname",{"_index":3261,"title":{},"body":{"classes/numericValidator.html":{}}}],["numericproto(formcontrolname:string",{"_index":3264,"title":{},"body":{"classes/numericValidator.html":{}}}],["numericvalidator",{"_index":3097,"title":{"classes/numericValidator.html":{}},"body":{"coverage.html":{},"classes/numericValidator.html":{}}}],["obj",{"_index":2349,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["object",{"_index":336,"title":{},"body":{"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"interfaces/ButtonConfig.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"miscellaneous/variables.html":{}}}],["object).pipe(map((response:strapiresponse",{"_index":1216,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["object.assign(errors",{"_index":2287,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["object.keys(form.controls).foreach(key",{"_index":2699,"title":{},"body":{"components/UserFormComponent.html":{}}}],["objects",{"_index":298,"title":{},"body":{"components/AdminPage.html":{}}}],["objetivo",{"_index":3179,"title":{},"body":{"index.html":{}}}],["objeto",{"_index":1478,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["obs.complete",{"_index":875,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["obs.error(err",{"_index":878,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["obs.next",{"_index":874,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["obs.next(ret",{"_index":905,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["observable",{"_index":243,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPage.html":{},"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"injectables/IslandService.html":{},"injectables/JwtService.html":{},"injectables/LoanService.html":{},"components/ProfilePage.html":{},"classes/StrapiDataService.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{}}}],["observable(obs",{"_index":862,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["observable(observer",{"_index":1893,"title":{},"body":{"injectables/IslandService.html":{},"injectables/JwtService.html":{},"injectables/LoanService.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{}}}],["observable(subscr",{"_index":1142,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["observer.complete",{"_index":1896,"title":{},"body":{"injectables/IslandService.html":{},"injectables/JwtService.html":{},"injectables/LoanService.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{}}}],["observer.error('no",{"_index":1948,"title":{},"body":{"injectables/JwtService.html":{},"injectables/UserService.html":{}}}],["observer.error(error",{"_index":1951,"title":{},"body":{"injectables/JwtService.html":{},"injectables/UserService.html":{}}}],["observer.next",{"_index":2138,"title":{},"body":{"injectables/LoanService.html":{}}}],["observer.next(island",{"_index":1908,"title":{},"body":{"injectables/IslandService.html":{}}}],["observer.next(loans",{"_index":2149,"title":{},"body":{"injectables/LoanService.html":{}}}],["observer.next(this.token",{"_index":1949,"title":{},"body":{"injectables/JwtService.html":{}}}],["observer.next(undefined",{"_index":1899,"title":{},"body":{"injectables/IslandService.html":{}}}],["observer.next(updatedusers",{"_index":2818,"title":{},"body":{"injectables/UserService.html":{}}}],["observer.next(updatedvillagers",{"_index":3030,"title":{},"body":{"injectables/VillagerService.html":{}}}],["observer.next(users",{"_index":2803,"title":{},"body":{"injectables/UserService.html":{}}}],["obteniendo",{"_index":1605,"title":{},"body":{"components/HomePage.html":{}}}],["ocupe",{"_index":2655,"title":{},"body":{"components/UserCardComponent.html":{}}}],["ok",{"_index":1847,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["oncancel",{"_index":1778,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["onchangepicture",{"_index":2306,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["onchangepicture(event",{"_index":2329,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondelete",{"_index":1779,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["ondeleteclick",{"_index":2001,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["ondeleteclick(event",{"_index":2008,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["ondeleteclick(event:any",{"_index":2020,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["ondeleteclicked",{"_index":1516,"title":{},"body":{"components/HomePage.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{}}}],["ondeleteclicked(loan",{"_index":1548,"title":{},"body":{"components/HomePage.html":{},"components/LoansPage.html":{}}}],["ondeleteclicked:eventemitter",{"_index":2012,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["ondeletepicture",{"_index":2307,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture(event",{"_index":2333,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondestroy",{"_index":2294,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondismiss",{"_index":996,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["ondismiss(result",{"_index":1017,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["one",{"_index":1561,"title":{},"body":{"components/HomePage.html":{},"components/LoansPage.html":{}}}],["oneditclick",{"_index":1736,"title":{},"body":{"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["oneditclick(event",{"_index":1747,"title":{},"body":{"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["oneditclick(event:any",{"_index":2019,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["oneditclicked",{"_index":1517,"title":{},"body":{"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["oneditclicked(is",{"_index":1551,"title":{},"body":{"components/HomePage.html":{}}}],["oneditclicked(loan",{"_index":2161,"title":{},"body":{"components/LoansPage.html":{}}}],["oneditclicked(user",{"_index":994,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["oneditclicked:eventemitter",{"_index":2011,"title":{},"body":{"components/LoanComponent.html":{}}}],["onfilter",{"_index":282,"title":{},"body":{"components/AdminPage.html":{},"components/ProfilePage.html":{},"components/VillagerSelectableComponent.html":{}}}],["onfilter(event",{"_index":348,"title":{},"body":{"components/AdminPage.html":{},"components/ProfilePage.html":{}}}],["onfilter(evt",{"_index":2938,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["onfilter(evt:any",{"_index":2970,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["onfollowclicked",{"_index":2405,"title":{},"body":{"components/ProfilePage.html":{}}}],["onfollowclicked(user",{"_index":2423,"title":{},"body":{"components/ProfilePage.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"interfaces/ButtonConfig.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"interfaces/Item.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["onlang",{"_index":573,"title":{},"body":{"components/AppComponent.html":{}}}],["onlang(lang",{"_index":578,"title":{},"body":{"components/AppComponent.html":{}}}],["onlang(lang:string",{"_index":629,"title":{},"body":{"components/AppComponent.html":{}}}],["onloadvillagers",{"_index":2920,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["onloanclicked",{"_index":1518,"title":{},"body":{"components/HomePage.html":{},"components/LoanItemComponent.html":{}}}],["onloanclicked(loan",{"_index":1553,"title":{},"body":{"components/HomePage.html":{}}}],["onloanclicked:eventemitter",{"_index":2099,"title":{},"body":{"components/LoanItemComponent.html":{}}}],["onlogin",{"_index":2214,"title":{},"body":{"components/LoginPage.html":{}}}],["onlogin(credentials",{"_index":2216,"title":{},"body":{"components/LoginPage.html":{}}}],["onlogin(credentials:usercredentials",{"_index":2222,"title":{},"body":{"components/LoginPage.html":{}}}],["onmodaledit",{"_index":2406,"title":{},"body":{"components/ProfilePage.html":{}}}],["onmodaledit(isopen",{"_index":2426,"title":{},"body":{"components/ProfilePage.html":{}}}],["onnewisland",{"_index":1519,"title":{},"body":{"components/HomePage.html":{}}}],["onnewloan",{"_index":2156,"title":{},"body":{"components/LoansPage.html":{}}}],["onregister",{"_index":2543,"title":{},"body":{"components/RegisterPage.html":{}}}],["onregister(info",{"_index":2545,"title":{},"body":{"components/RegisterPage.html":{}}}],["onsignout",{"_index":574,"title":{},"body":{"components/AppComponent.html":{}}}],["onsnapshot",{"_index":1236,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["onsnapshot(collection(this._db",{"_index":1419,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["onsubmit",{"_index":1780,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserFormComponent.html":{}}}],["onunfollowclicked",{"_index":2407,"title":{},"body":{"components/ProfilePage.html":{}}}],["onunfollowclicked(user",{"_index":2430,"title":{},"body":{"components/ProfilePage.html":{}}}],["onvillagerclicked",{"_index":2897,"title":{},"body":{"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["onvillagerclicked(popover",{"_index":2943,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["onvillagerclicked(popover:ionpopover",{"_index":2974,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["opacity",{"_index":2743,"title":{},"body":{"components/UserListComponent.html":{}}}],["open",{"_index":993,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{}}}],["open/close",{"_index":2428,"title":{},"body":{"components/ProfilePage.html":{}}}],["opens",{"_index":1018,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["openuserlistmodal",{"_index":2616,"title":{},"body":{"components/UserCardComponent.html":{}}}],["openuserlistmodal(listtype",{"_index":1021,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["operation",{"_index":1789,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{}}}],["optional",{"_index":221,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/Island.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"injectables/JwtService.html":{},"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"classes/StrapiDataService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"miscellaneous/functions.html":{},"classes/numericValidator.html":{}}}],["optionally",{"_index":2931,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["options",{"_index":1687,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["orderby",{"_index":1242,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["orderby(filterby",{"_index":1382,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ordering",{"_index":1375,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["otherwise",{"_index":1746,"title":{},"body":{"components/IslandComponent.html":{},"components/LoanFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["otp",{"_index":3146,"title":{},"body":{"dependencies.html":{}}}],["out",{"_index":187,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageModule.html":{},"components/LoginFormComponent.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterFormComponent.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/VillagersPageModule.html":{},"overview.html":{}}}],["outline",{"_index":970,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["output",{"_index":942,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserCardComponent.html":{},"components/VillagerItemComponent.html":{}}}],["output('clicked",{"_index":2909,"title":{},"body":{"components/VillagerItemComponent.html":{}}}],["outputs",{"_index":1738,"title":{},"body":{"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserCardComponent.html":{},"components/VillagerItemComponent.html":{}}}],["overflow",{"_index":1763,"title":{},"body":{"components/IslandComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["overlaypanel",{"_index":1921,"title":{},"body":{"interfaces/Item.html":{},"components/VillagersPage.html":{}}}],["overlaypanelmodule",{"_index":2587,"title":{},"body":{"modules/SharedModule.html":{},"modules/VillagersPageModule.html":{}}}],["override",{"_index":1202,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["overview",{"_index":3272,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":483,"title":{},"body":{"components/AdminPage.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{}}}],["package",{"_index":3126,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":75,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{}}}],["padding:0!important",{"_index":2392,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["page",{"_index":334,"title":{},"body":{"components/AdminPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"components/UserListComponent.html":{}}}],["page:number",{"_index":2245,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{}}}],["pagecount",{"_index":1492,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["pagecount:number",{"_index":2247,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{}}}],["pages",{"_index":2251,"title":{},"body":{"interfaces/Pagination.html":{}}}],["pagesize",{"_index":1370,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["pagesize:number",{"_index":2246,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{}}}],["paginated",{"_index":346,"title":{},"body":{"components/AdminPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{}}}],["paginateddata",{"_index":1098,"title":{"interfaces/PaginatedData.html":{}},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/StrapiDataService.html":{},"interfaces/Villager.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["paginatedquery",{"_index":1383,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["paginatedvillagers",{"_index":2875,"title":{},"body":{"interfaces/Villager.html":{},"injectables/VillagerService.html":{},"miscellaneous/typealiases.html":{}}}],["pagination",{"_index":1209,"title":{"interfaces/Pagination.html":{}},"body":{"classes/FirebaseDataService.html":{},"interfaces/Formats.html":{},"interfaces/Item.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"components/VillagersPage.html":{},"coverage.html":{}}}],["pagination:pagination",{"_index":2250,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{}}}],["paid",{"_index":1979,"title":{},"body":{"interfaces/Loan.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{}}}],["para",{"_index":2740,"title":{},"body":{"components/UserListComponent.html":{},"index.html":{}}}],["param",{"_index":254,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"classes/numericValidator.html":{}}}],["parameters",{"_index":219,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"injectables/JwtService.html":{},"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"classes/StrapiDataService.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"miscellaneous/functions.html":{},"classes/numericValidator.html":{}}}],["params",{"_index":512,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/ProfilePage.html":{},"classes/StrapiDataService.html":{}}}],["params).pipe(map((response:strapiarrayresponse",{"_index":1205,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["params.get('uuid",{"_index":2454,"title":{},"body":{"components/ProfilePage.html":{}}}],["params:any",{"_index":558,"title":{},"body":{"injectables/ApiService.html":{}}}],["params:any):observable",{"_index":1101,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["params:object",{"_index":565,"title":{},"body":{"injectables/ApiService.html":{}}}],["parent",{"_index":1750,"title":{},"body":{"components/IslandComponent.html":{}}}],["parseint(data['birthday_day",{"_index":3015,"title":{},"body":{"injectables/VillagerService.html":{}}}],["parte",{"_index":2663,"title":{},"body":{"components/UserCardComponent.html":{}}}],["passing",{"_index":1800,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["password",{"_index":866,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"classes/PasswordValidation.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserRegisterInfo.html":{}}}],["password.match(/^(?=.*\\d)(?=.*[a",{"_index":2276,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["password:string",{"_index":2677,"title":{},"body":{"interfaces/UserCredentials.html":{},"interfaces/UserRegisterInfo.html":{}}}],["passwordcontrolname",{"_index":2263,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordmatch",{"_index":2255,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordmatch(passwordcontrolname",{"_index":2257,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordproto",{"_index":2256,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordproto(controlname",{"_index":2265,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordvalidation",{"_index":2252,"title":{"classes/PasswordValidation.html":{}},"body":{"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["passwordvalidation.passwordmatch('password",{"_index":2533,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["passwordvalidation.passwordproto",{"_index":2532,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["patch",{"_index":502,"title":{},"body":{"injectables/ApiService.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["patch(path",{"_index":524,"title":{},"body":{"injectables/ApiService.html":{}}}],["patch(url",{"_index":1670,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["path",{"_index":208,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AdminPageRoutingModule.html":{},"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"modules/HomePageRoutingModule.html":{},"injectables/IslandService.html":{},"interfaces/Large.html":{},"modules/LoansPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"modules/VillagersPageRoutingModule.html":{}}}],["pathmatch",{"_index":758,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pencil",{"_index":972,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["per",{"_index":1372,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["percentage",{"_index":2000,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["percentage:number",{"_index":2014,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["permite",{"_index":3188,"title":{},"body":{"index.html":{}}}],["persistence",{"_index":1290,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["person",{"_index":968,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["personajes",{"_index":3196,"title":{},"body":{"index.html":{}}}],["personality",{"_index":2868,"title":{},"body":{"interfaces/Villager.html":{},"injectables/VillagerService.html":{}}}],["phrase",{"_index":2873,"title":{},"body":{"interfaces/Villager.html":{},"injectables/VillagerService.html":{}}}],["picture",{"_index":143,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"injectables/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["picture_selectable_value_accessor",{"_index":2295,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picturemodal",{"_index":2314,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["pictureselectablecomponent",{"_index":142,"title":{"components/PictureSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pinned",{"_index":1681,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["pipe",{"_index":1957,"title":{"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{}},"body":{"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["pipes",{"_index":1959,"title":{},"body":{"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["pipes/latest",{"_index":2578,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/loan",{"_index":2575,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":1972,"title":{},"body":{"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{}}}],["placeholder",{"_index":1855,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["placeholders",{"_index":1753,"title":{},"body":{"components/IslandComponent.html":{}}}],["planificar",{"_index":3211,"title":{},"body":{"index.html":{}}}],["platform",{"_index":683,"title":{},"body":{"modules/AppModule.html":{}}}],["plugins",{"_index":3240,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":108,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/UserCardComponent.html":{}}}],["popover",{"_index":2933,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["popover.dismiss",{"_index":2977,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["populate",{"_index":1007,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["popup",{"_index":2045,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["position",{"_index":1626,"title":{},"body":{"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/PictureSelectableComponent.html":{},"components/VillagerComponent.html":{}}}],["post",{"_index":503,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"classes/StrapiDataService.html":{}}}],["post(path",{"_index":526,"title":{},"body":{"injectables/ApiService.html":{}}}],["post(resource",{"_index":1090,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["post(resource:string",{"_index":1104,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["post(url",{"_index":1675,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["postdata",{"_index":2819,"title":{},"body":{"injectables/UserService.html":{}}}],["postdata).then",{"_index":1895,"title":{},"body":{"injectables/IslandService.html":{}}}],["postdata.dream_code",{"_index":2822,"title":{},"body":{"injectables/UserService.html":{}}}],["postdata.profile_picture",{"_index":2827,"title":{},"body":{"injectables/UserService.html":{}}}],["postregister",{"_index":1110,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["postregister(info",{"_index":1121,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["preference",{"_index":1044,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["preferences",{"_index":1941,"title":{},"body":{"injectables/JwtService.html":{}}}],["preferences.get({key:'jwttoken'}).then((ret:any",{"_index":1943,"title":{},"body":{"injectables/JwtService.html":{}}}],["preferences.set",{"_index":1953,"title":{},"body":{"injectables/JwtService.html":{}}}],["preferencia",{"_index":2648,"title":{},"body":{"components/UserCardComponent.html":{}}}],["prefix",{"_index":1306,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["preloadallmodules",{"_index":747,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":777,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["prepend",{"_index":1307,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["presentform",{"_index":1520,"title":{},"body":{"components/HomePage.html":{},"components/LoansPage.html":{}}}],["presentform(data",{"_index":1558,"title":{},"body":{"components/HomePage.html":{},"components/LoansPage.html":{}}}],["presentloanform",{"_index":1521,"title":{},"body":{"components/HomePage.html":{}}}],["presentloanform(data",{"_index":1562,"title":{},"body":{"components/HomePage.html":{}}}],["presents",{"_index":1003,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["presentuserform",{"_index":2617,"title":{},"body":{"components/UserCardComponent.html":{}}}],["presentuserform(data",{"_index":1010,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["previewurl",{"_index":1500,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["previous",{"_index":1378,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["primary",{"_index":650,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["primeflex",{"_index":3148,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":3150,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":3151,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":716,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthService.html":{}}}],["primeng/checkbox",{"_index":2593,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/divider",{"_index":493,"title":{},"body":{"modules/AdminPageModule.html":{},"modules/SharedModule.html":{}}}],["primeng/inputmask",{"_index":2589,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/inputtext",{"_index":2591,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/overlaypanel",{"_index":1922,"title":{},"body":{"interfaces/Item.html":{},"modules/SharedModule.html":{},"components/VillagersPage.html":{},"modules/VillagersPageModule.html":{}}}],["primeng/radiobutton",{"_index":2595,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/tabview",{"_index":712,"title":{},"body":{"modules/AppModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{}}}],["primeng/toast",{"_index":714,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/virtualscroller",{"_index":2586,"title":{},"body":{"modules/SharedModule.html":{},"modules/VillagersPageModule.html":{}}}],["principal",{"_index":3180,"title":{},"body":{"index.html":{}}}],["private",{"_index":255,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"components/LoanFormComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{}}}],["process",{"_index":322,"title":{},"body":{"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{}}}],["production",{"_index":3299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":333,"title":{},"body":{"components/AdminPage.html":{},"modules/AppRoutingModule.html":{},"injectables/FirebaseAuthService.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["profile'},{'name",{"_index":146,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["profile.banned",{"_index":2634,"title":{},"body":{"components/UserCardComponent.html":{}}}],["profile.dreamcode",{"_index":2638,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserFormComponent.html":{}}}],["profile.edit",{"_index":2708,"title":{},"body":{"components/UserFormComponent.html":{}}}],["profile.followers",{"_index":2642,"title":{},"body":{"components/UserCardComponent.html":{}}}],["profile.following",{"_index":2640,"title":{},"body":{"components/UserCardComponent.html":{}}}],["profile.mutuals",{"_index":2481,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile.page",{"_index":2500,"title":{},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{}}}],["profile.page.html",{"_index":2400,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile.page.scss",{"_index":2399,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile.search",{"_index":2482,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile/:uuid",{"_index":772,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profile_picture",{"_index":1177,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"interfaces/User.html":{},"components/UserFormComponent.html":{},"injectables/UserService.html":{}}}],["profile_picture?:string",{"_index":2613,"title":{},"body":{"interfaces/User.html":{}}}],["profilepage",{"_index":145,"title":{"components/ProfilePage.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["profilepagemodule",{"_index":2494,"title":{"modules/ProfilePageModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepageroutingmodule",{"_index":2498,"title":{"modules/ProfilePageRoutingModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["programación",{"_index":3231,"title":{},"body":{"index.html":{}}}],["progreso",{"_index":3183,"title":{},"body":{"index.html":{}}}],["progress",{"_index":2036,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"directives/ProgressDirective.html":{},"index.html":{}}}],["progress(value",{"_index":2513,"title":{},"body":{"directives/ProgressDirective.html":{}}}],["progressdirective",{"_index":167,"title":{"directives/ProgressDirective.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":3278,"title":{},"body":{"properties.html":{}}}],["projectid",{"_index":3308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":244,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{}}}],["promise((resolve",{"_index":1344,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["promise(async",{"_index":1312,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["promise.all",{"_index":2469,"title":{},"body":{"components/ProfilePage.html":{}}}],["promise.all(userpromises",{"_index":2478,"title":{},"body":{"components/ProfilePage.html":{},"components/UserListComponent.html":{}}}],["promise.all(userpromises)).filter(user",{"_index":462,"title":{},"body":{"components/AdminPage.html":{}}}],["promise.all(villagerpromises).then(completevillagers",{"_index":1903,"title":{},"body":{"injectables/IslandService.html":{}}}],["propagate",{"_index":2337,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["propagatechange",{"_index":2302,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["propagating",{"_index":2356,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["properties",{"_index":269,"title":{"properties.html":{}},"body":{"components/AdminPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"interfaces/Island.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/JwtService.html":{},"interfaces/Large.html":{},"interfaces/Loan.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UserService.html":{},"interfaces/Villager.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"properties.html":{}}}],["property",{"_index":1969,"title":{},"body":{"pipes/LatestThreePipe.html":{}}}],["proporciona",{"_index":3225,"title":{},"body":{"index.html":{}}}],["protected",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/ProfilePage.html":{},"classes/StrapiDataService.html":{}}}],["provide",{"_index":736,"title":{},"body":{"modules/AppModule.html":{},"components/PictureSelectableComponent.html":{},"modules/SharedModule.html":{},"components/VillagerSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":342,"title":{},"body":{"components/AdminPage.html":{},"injectables/FirebaseAuthService.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/UserListComponent.html":{}}}],["providedin",{"_index":252,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{}}}],["provider",{"_index":1501,"title":{},"body":{"interfaces/Formats.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["provider_metadata",{"_index":1502,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["providermetadata",{"_index":1503,"title":{"interfaces/ProviderMetadata.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["providers",{"_index":178,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"classes/HttpClientWebProvider.html":{},"modules/LoansPageModule.html":{},"modules/LoginPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"components/VillagerSelectableComponent.html":{},"modules/VillagersPageModule.html":{},"overview.html":{}}}],["proyecto",{"_index":3168,"title":{},"body":{"index.html":{}}}],["prueba",{"_index":3318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":273,"title":{},"body":{"components/AdminPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"classes/StrapiDataService.html":{},"injectables/UserService.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"classes/numericValidator.html":{}}}],["public_id",{"_index":1506,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["puedes",{"_index":2646,"title":{},"body":{"components/UserCardComponent.html":{}}}],["purposes",{"_index":2676,"title":{},"body":{"interfaces/UserCredentials.html":{}}}],["put",{"_index":504,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"classes/StrapiDataService.html":{}}}],["put(path",{"_index":529,"title":{},"body":{"injectables/ApiService.html":{}}}],["put(resource",{"_index":1092,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["put(resource:string",{"_index":1106,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["put(url",{"_index":1677,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["página",{"_index":3248,"title":{},"body":{"index.html":{}}}],["q",{"_index":1380,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["que",{"_index":2654,"title":{},"body":{"components/UserCardComponent.html":{},"index.html":{}}}],["query",{"_index":1082,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/StrapiDataService.html":{}}}],["query(collection(this._db",{"_index":1404,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["query(collectionref",{"_index":1381,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["query(q",{"_index":1384,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["query(resource",{"_index":1094,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["query(resource:string",{"_index":1102,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["querypaginated",{"_index":1083,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["querypaginated(resource",{"_index":1096,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["querypaginated(resource:string",{"_index":1100,"title":{},"body":{"injectables/DataService.html":{}}}],["querysnapshot",{"_index":1365,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["querysnapshot.docs.map(doc",{"_index":1389,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["querystring",{"_index":2604,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["quote",{"_index":2872,"title":{},"body":{"interfaces/Villager.html":{},"injectables/VillagerService.html":{}}}],["radial",{"_index":2229,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["radiobuttonmodule",{"_index":2594,"title":{},"body":{"modules/SharedModule.html":{}}}],["radius",{"_index":81,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["reaches",{"_index":318,"title":{},"body":{"components/AdminPage.html":{}}}],["reactiveformsmodule",{"_index":2562,"title":{},"body":{"modules/SharedModule.html":{}}}],["reader",{"_index":2373,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onerror",{"_index":2377,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onload",{"_index":2375,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.readasdataurl(file",{"_index":2379,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["readonly",{"_index":965,"title":{},"body":{"interfaces/ButtonConfig.html":{},"classes/HttpClientWebProvider.html":{},"components/UserCardComponent.html":{}}}],["red",{"_index":2649,"title":{},"body":{"components/UserCardComponent.html":{}}}],["redirected",{"_index":240,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["redirectto",{"_index":757,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ref",{"_index":1248,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ref(this._webstorage",{"_index":1325,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reference",{"_index":917,"title":{},"body":{"directives/BackgroundBlurDirective.html":{},"directives/ProgressDirective.html":{}}}],["reflect",{"_index":2435,"title":{},"body":{"components/ProfilePage.html":{}}}],["regex",{"_index":3267,"title":{},"body":{"classes/numericValidator.html":{}}}],["regex.test(value",{"_index":3271,"title":{},"body":{"classes/numericValidator.html":{}}}],["register",{"_index":148,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserRegisterInfo.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{}}}],["register'].includes(event.urlafterredirects",{"_index":626,"title":{},"body":{"components/AppComponent.html":{}}}],["register'},{'name",{"_index":150,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["register(info",{"_index":802,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["register(info:object):observable",{"_index":814,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{}}}],["register.page",{"_index":2556,"title":{},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{}}}],["register.page.html",{"_index":2542,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.page.scss",{"_index":2541,"title":{},"body":{"components/RegisterPage.html":{}}}],["registerformcomponent",{"_index":147,"title":{"components/RegisterFormComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["registering",{"_index":2341,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["registeronchange",{"_index":2308,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["registeronchange(fn",{"_index":2335,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["registerontouched",{"_index":2309,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["registerontouched(fn",{"_index":2339,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["registerpage",{"_index":149,"title":{"components/RegisterPage.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["registerpagemodule",{"_index":2550,"title":{"modules/RegisterPageModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"modules.html":{},"overview.html":{}}}],["registerpageroutingmodule",{"_index":2554,"title":{"modules/RegisterPageRoutingModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["registers",{"_index":1129,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"components/PictureSelectableComponent.html":{}}}],["registration",{"_index":1124,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"components/RegisterPage.html":{},"interfaces/UserRegisterInfo.html":{}}}],["registro",{"_index":3204,"title":{},"body":{"index.html":{}}}],["reject",{"_index":1314,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject('document",{"_index":1400,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject(err",{"_index":1350,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject(error",{"_index":1322,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["relative",{"_index":1627,"title":{},"body":{"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/PictureSelectableComponent.html":{},"components/VillagerComponent.html":{}}}],["reloads",{"_index":2433,"title":{},"body":{"components/ProfilePage.html":{}}}],["remove",{"_index":923,"title":{},"body":{"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["renderer",{"_index":913,"title":{},"body":{"directives/BackgroundBlurDirective.html":{},"directives/ProgressDirective.html":{}}}],["renderer2",{"_index":914,"title":{},"body":{"directives/BackgroundBlurDirective.html":{},"directives/ProgressDirective.html":{}}}],["renderer:renderer2",{"_index":2518,"title":{},"body":{"directives/ProgressDirective.html":{}}}],["repeat",{"_index":1624,"title":{},"body":{"components/HomePage.html":{}}}],["representation",{"_index":2319,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["representing",{"_index":1222,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IslandComponent.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{}}}],["represents",{"_index":1725,"title":{},"body":{"interfaces/Island.html":{},"interfaces/Loan.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/Villager.html":{}}}],["request",{"_index":1666,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["required",{"_index":2745,"title":{},"body":{"interfaces/UserRegisterInfo.html":{}}}],["reset",{"_index":186,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"components/VillagerSelectableComponent.html":{},"modules/VillagersPageModule.html":{},"overview.html":{}}}],["resets",{"_index":2197,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["residing",{"_index":1728,"title":{},"body":{"interfaces/Island.html":{}}}],["resolve",{"_index":1313,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(await",{"_index":1413,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(deleteuser(this._user",{"_index":1470,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(docref.id",{"_index":1349,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(documents",{"_index":1390,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(false",{"_index":1433,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(null",{"_index":1447,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(querysnapshot.docs.map(doc",{"_index":1367,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(this._auth!.currentuser",{"_index":1434,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolving",{"_index":1527,"title":{},"body":{"components/HomePage.html":{}}}],["resource",{"_index":1087,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["resource_type",{"_index":1507,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["resources",{"_index":2326,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["respective",{"_index":964,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["response",{"_index":1432,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/LoanFormComponent.html":{}}}],["response.data.attributes",{"_index":1213,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["response.data.map(data=>{return",{"_index":1206,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["response.meta.pagination",{"_index":1210,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["responsetype:\"blob",{"_index":1707,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["rest",{"_index":3221,"title":{},"body":{"index.html":{}}}],["result",{"_index":1011,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["result.data",{"_index":1016,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["results",{"_index":170,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/Island.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/JwtService.html":{},"interfaces/Large.html":{},"pipes/LatestThreePipe.html":{},"interfaces/Loan.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"directives/ProgressDirective.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UserService.html":{},"interfaces/Villager.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"classes/numericValidator.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":899,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["ret['value",{"_index":1944,"title":{},"body":{"injectables/JwtService.html":{}}}],["retrieve",{"_index":1393,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserFormComponent.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{}}}],["retrieved",{"_index":1878,"title":{},"body":{"injectables/IslandService.html":{},"injectables/LoanService.html":{}}}],["retrieves",{"_index":1037,"title":{},"body":{"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{}}}],["return",{"_index":258,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"injectables/JwtService.html":{},"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{},"injectables/LoanService.html":{},"classes/PasswordValidation.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"classes/StrapiDataService.html":{},"components/UserFormComponent.html":{},"injectables/UserService.html":{},"components/VillagerItemComponent.html":{},"injectables/VillagerService.html":{},"classes/numericValidator.html":{}}}],["returning",{"_index":2688,"title":{},"body":{"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"injectables/JwtService.html":{},"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"classes/StrapiDataService.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"classes/numericValidator.html":{}}}],["returnurl",{"_index":609,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["rgba(0",{"_index":88,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/VillagerComponent.html":{}}}],["right",{"_index":1760,"title":{},"body":{"components/IslandComponent.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{}}}],["role",{"_index":1163,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"components/IslandFormComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["role:extended_user.data[0].role",{"_index":902,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["rom",{"_index":644,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":253,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IslandService.html":{},"injectables/JwtService.html":{},"injectables/LoanService.html":{},"injectables/UserService.html":{},"injectables/VillagerService.html":{}}}],["root'},{'name",{"_index":122,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["route",{"_index":233,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/ProfilePage.html":{},"components/UserListComponent.html":{}}}],["router",{"_index":217,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/UserListComponent.html":{}}}],["router:router",{"_index":257,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{},"components/UserListComponent.html":{}}}],["routereusestrategy",{"_index":681,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":205,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/VillagersPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":209,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/VillagersPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":776,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":229,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["routes",{"_index":204,"title":{"routes.html":{}},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/VillagersPageRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":197,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoansPageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/VillagersPageModule.html":{}}}],["routing.module.ts",{"_index":203,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AdminPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/VillagersPageRoutingModule.html":{}}}],["row",{"_index":72,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/VillagerComponent.html":{}}}],["row.join",{"_index":425,"title":{},"body":{"components/AdminPage.html":{}}}],["rows",{"_index":417,"title":{},"body":{"components/AdminPage.html":{}}}],["rxjs",{"_index":249,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPage.html":{},"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/JwtService.html":{},"components/LoanFormComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"classes/StrapiDataService.html":{},"injectables/UserService.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":365,"title":{},"body":{"components/AdminPage.html":{},"injectables/LoanService.html":{},"injectables/VillagerService.html":{}}}],["savetoken",{"_index":1933,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken(token",{"_index":1939,"title":{},"body":{"injectables/JwtService.html":{}}}],["schimb",{"_index":641,"title":{},"body":{"components/AppComponent.html":{}}}],["screen",{"_index":112,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{}}}],["scroll",{"_index":307,"title":{},"body":{"components/AdminPage.html":{},"components/HomePage.html":{},"interfaces/Item.html":{},"components/VillagersPage.html":{}}}],["scrolling",{"_index":317,"title":{},"body":{"components/AdminPage.html":{}}}],["se",{"_index":2845,"title":{},"body":{"injectables/UserService.html":{}}}],["search",{"_index":352,"title":{},"body":{"components/AdminPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ProfilePage.html":{},"components/VillagerSelectableComponent.html":{}}}],["secondary",{"_index":98,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["seeall",{"_index":1645,"title":{},"body":{"components/HomePage.html":{}}}],["seguidor",{"_index":3182,"title":{},"body":{"index.html":{}}}],["seguimiento",{"_index":3205,"title":{},"body":{"index.html":{}}}],["segundo",{"_index":3174,"title":{},"body":{"index.html":{}}}],["select",{"_index":2949,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable",{"_index":2296,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/UserFormComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["selectable'},{'name",{"_index":144,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["selectable.component",{"_index":2572,"title":{},"body":{"modules/SharedModule.html":{}}}],["selectable.component.html",{"_index":2298,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["selectable.component.scss",{"_index":2297,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts",{"_index":2292,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable.component.ts:102",{"_index":2946,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:106",{"_index":2334,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:109",{"_index":2950,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:113",{"_index":2321,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:117",{"_index":2935,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:125",{"_index":2939,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:136",{"_index":2944,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:145",{"_index":2926,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:154",{"_index":2930,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:20",{"_index":2351,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:21",{"_index":2354,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:22",{"_index":2352,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:23",{"_index":2313,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:26",{"_index":2956,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:27",{"_index":2953,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:28",{"_index":2954,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:30",{"_index":2324,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:32",{"_index":2955,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:34",{"_index":2328,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:35",{"_index":2924,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:38",{"_index":2957,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:39",{"_index":2355,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:40",{"_index":2952,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:44",{"_index":2347,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:46",{"_index":2937,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:53",{"_index":2941,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:54",{"_index":2336,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:61",{"_index":2340,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:67",{"_index":2344,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:70",{"_index":2948,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:75",{"_index":2316,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:85",{"_index":2332,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:87",{"_index":2951,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable.component.ts:94",{"_index":2945,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectable/picture",{"_index":2291,"title":{},"body":{"components/PictureSelectableComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable/villager",{"_index":2571,"title":{},"body":{"modules/SharedModule.html":{},"components/VillagerSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":2320,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{}}}],["selection",{"_index":2317,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"interfaces/Item.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["selectvillager",{"_index":2921,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["selectvillager(name",{"_index":2947,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["self",{"_index":1649,"title":{},"body":{"components/HomePage.html":{},"components/IslandComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserCardComponent.html":{}}}],["sensitive",{"_index":1407,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["server",{"_index":1685,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/ProfilePage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":225,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/UserListComponent.html":{}}}],["service.onrender.com/api",{"_index":3302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["services",{"_index":1276,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["services/api/firebase/firebase",{"_index":250,"title":{},"body":{"guards/AdminGuard.html":{}}}],["services/api/firebase/firebase.service",{"_index":787,"title":{},"body":{"guards/AuthGuard.html":{}}}],["services/api/strapi/auth.service",{"_index":786,"title":{},"body":{"guards/AuthGuard.html":{}}}],["servicio",{"_index":3213,"title":{},"body":{"index.html":{}}}],["set",{"_index":586,"title":{},"body":{"components/AppComponent.html":{},"directives/BackgroundBlurDirective.html":{},"injectables/CustomTranslateService.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoginFormComponent.html":{},"directives/ProgressDirective.html":{},"components/UserFormComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["setappbackgroundblur(condition",{"_index":925,"title":{},"body":{"directives/BackgroundBlurDirective.html":{}}}],["setdisabledstate",{"_index":2310,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":2343,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":2365,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["setdoc",{"_index":1238,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["setdoc(docref",{"_index":1357,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["setisland(_island",{"_index":1814,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["setloan(_loan",{"_index":2052,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["setprogress(value",{"_index":2511,"title":{},"body":{"directives/ProgressDirective.html":{}}}],["sets",{"_index":585,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/UserCardComponent.html":{}}}],["setservertrustmode",{"_index":1662,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["setservertrustmode(mode",{"_index":1679,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["setuser(_user",{"_index":2690,"title":{},"body":{"components/UserFormComponent.html":{}}}],["setusername(value",{"_index":2198,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["setvillager(_villager",{"_index":2904,"title":{},"body":{"components/VillagerItemComponent.html":{}}}],["severity",{"_index":1153,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["shade",{"_index":1634,"title":{},"body":{"components/HomePage.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/UserListComponent.html":{}}}],["shadow",{"_index":84,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/VillagerComponent.html":{}}}],["shared/shared.module",{"_index":699,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["sharedmodule",{"_index":184,"title":{"modules/SharedModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/VillagersPageModule.html":{},"modules.html":{},"overview.html":{}}}],["showall",{"_index":271,"title":{},"body":{"components/AdminPage.html":{}}}],["showall:boolean",{"_index":371,"title":{},"body":{"components/AdminPage.html":{}}}],["showconfirmpopup",{"_index":2039,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["showedit",{"_index":1737,"title":{},"body":{"components/IslandComponent.html":{}}}],["showing",{"_index":1793,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["shownavbar",{"_index":572,"title":{},"body":{"components/AppComponent.html":{}}}],["shownavbar:boolean",{"_index":604,"title":{},"body":{"components/AppComponent.html":{}}}],["shows",{"_index":2044,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["sign",{"_index":588,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Villager.html":{},"injectables/VillagerService.html":{}}}],["signed",{"_index":1469,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanon",{"_index":1423,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously",{"_index":1256,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously(this._auth",{"_index":1320,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously(this._auth!).catch(error",{"_index":1441,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signing",{"_index":1425,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinwithemailandpassword",{"_index":1258,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinwithemailandpassword(this._auth",{"_index":1468,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout",{"_index":1257,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout(signinanon",{"_index":1426,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout(this._auth",{"_index":1330,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signs",{"_index":1422,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["single",{"_index":1392,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["size",{"_index":474,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"interfaces/Large.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"interfaces/Medium.html":{},"interfaces/Pagination.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["slot",{"_index":940,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["slot:string",{"_index":949,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["slots",{"_index":1744,"title":{},"body":{"components/IslandComponent.html":{}}}],["small",{"_index":1487,"title":{"interfaces/Small.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["snapshot",{"_index":241,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["sobre",{"_index":3227,"title":{},"body":{"index.html":{}}}],["solid",{"_index":967,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/UserCardComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["sorted",{"_index":1971,"title":{},"body":{"pipes/LatestThreePipe.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"modules/AdminPageModule.html":{},"modules/AdminPageRoutingModule.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/Island.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/JwtService.html":{},"interfaces/Large.html":{},"pipes/LatestThreePipe.html":{},"interfaces/Loan.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"modules/LoansPageModule.html":{},"modules/LoansPageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"directives/ProgressDirective.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UserService.html":{},"interfaces/Villager.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{},"classes/numericValidator.html":{}}}],["south",{"_index":1529,"title":{},"body":{"components/HomePage.html":{}}}],["space",{"_index":472,"title":{},"body":{"components/AdminPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/UserCardComponent.html":{}}}],["span",{"_index":468,"title":{},"body":{"components/AdminPage.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{}}}],["spanish",{"_index":1049,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["special",{"_index":1464,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["species",{"_index":449,"title":{},"body":{"components/AdminPage.html":{},"interfaces/Villager.html":{},"components/VillagerComponent.html":{},"injectables/VillagerService.html":{}}}],["specific",{"_index":1351,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{},"components/RegisterFormComponent.html":{}}}],["specified",{"_index":335,"title":{},"body":{"components/AdminPage.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["src/.../app.module.ts",{"_index":3160,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../custom",{"_index":3161,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":3287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":3288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt.service.ts",{"_index":3283,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../picture",{"_index":3289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../strapi.ts",{"_index":3285,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../villager",{"_index":3290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../villager.ts",{"_index":3284,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":746,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":567,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":596,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":595,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":577,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":592,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":597,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":593,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":587,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":579,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":677,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/guards/admin.guard.ts",{"_index":213,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/admin.guard.ts:28",{"_index":230,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:9",{"_index":218,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":778,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:10",{"_index":780,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:30",{"_index":782,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/interfaces/data",{"_index":1923,"title":{},"body":{"interfaces/Item.html":{},"components/VillagersPage.html":{}}}],["src/app/core/interfaces/data.ts",{"_index":2244,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"coverage.html":{}}}],["src/app/core/interfaces/island",{"_index":1569,"title":{},"body":{"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoansPage.html":{},"components/ProfilePage.html":{},"components/VillagerSelectableComponent.html":{}}}],["src/app/core/interfaces/island.ts",{"_index":1724,"title":{},"body":{"interfaces/Island.html":{},"coverage.html":{}}}],["src/app/core/interfaces/loan",{"_index":1570,"title":{},"body":{"components/HomePage.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{}}}],["src/app/core/interfaces/loan.ts",{"_index":1977,"title":{},"body":{"interfaces/Loan.html":{},"coverage.html":{}}}],["src/app/core/interfaces/strapi.ts",{"_index":1484,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/interfaces/user",{"_index":366,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthService-1.html":{},"interfaces/ButtonConfig.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{}}}],["src/app/core/interfaces/user.ts",{"_index":2607,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/interfaces/villager",{"_index":1751,"title":{},"body":{"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"interfaces/Item.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["src/app/core/interfaces/villager.ts",{"_index":2866,"title":{},"body":{"interfaces/Villager.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/api/api.service.ts",{"_index":497,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/core/services/api/api.service.ts:10",{"_index":509,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/api.service.ts:18",{"_index":521,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/api.service.ts:29",{"_index":523,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/api.service.ts:33",{"_index":517,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/api.service.ts:37",{"_index":515,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/api.service.ts:43",{"_index":530,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/api.service.ts:48",{"_index":528,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/api.service.ts:53",{"_index":525,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/api.service.ts:58",{"_index":513,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api/auth.service.ts",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/api/auth.service.ts:12",{"_index":805,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:13",{"_index":808,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:14",{"_index":806,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:15",{"_index":810,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:17",{"_index":798,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:19",{"_index":803,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:21",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.service.ts:23",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/firebase/firebase",{"_index":946,"title":{},"body":{"interfaces/ButtonConfig.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"coverage.html":{}}}],["src/app/core/services/api/firebase/firebase.service",{"_index":2451,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/core/services/api/firebase/firebase.service.ts",{"_index":1221,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["src/app/core/services/api/strapi/auth",{"_index":829,"title":{},"body":{"injectables/AuthStrapiService.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/VillagerSelectableComponent.html":{},"coverage.html":{}}}],["src/app/core/services/api/strapi/auth.service",{"_index":2218,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["src/app/core/services/api/strapi/auth.service.ts",{"_index":817,"title":{},"body":{"injectables/AuthService-1.html":{},"coverage.html":{}}}],["src/app/core/services/api/strapi/auth.service.ts:15",{"_index":823,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["src/app/core/services/api/strapi/auth.service.ts:16",{"_index":824,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["src/app/core/services/api/strapi/auth.service.ts:18",{"_index":818,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["src/app/core/services/api/strapi/auth.service.ts:20",{"_index":821,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["src/app/core/services/api/strapi/auth.service.ts:22",{"_index":819,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["src/app/core/services/api/strapi/auth.service.ts:24",{"_index":820,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["src/app/core/services/api/strapi/data.service.ts",{"_index":1081,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/core/services/api/strapi/data.service.ts:12",{"_index":1097,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/api/strapi/data.service.ts:14",{"_index":1095,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/api/strapi/data.service.ts:16",{"_index":1089,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/api/strapi/data.service.ts:18",{"_index":1091,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/api/strapi/data.service.ts:20",{"_index":1093,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/api/strapi/data.service.ts:22",{"_index":1085,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/api/strapi/jwt.service.ts",{"_index":1928,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/api/strapi/jwt.service.ts:14",{"_index":1938,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/services/api/strapi/jwt.service.ts:33",{"_index":1936,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/services/api/strapi/jwt.service.ts:37",{"_index":1940,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/services/api/strapi/jwt.service.ts:52",{"_index":1935,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/services/api/strapi/jwt.service.ts:9",{"_index":1934,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/services/api/strapi/strapi",{"_index":2597,"title":{},"body":{"classes/StrapiDataService.html":{},"coverage.html":{}}}],["src/app/core/services/custom",{"_index":1027,"title":{},"body":{"injectables/CustomTranslateService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/services/http/http",{"_index":1660,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"coverage.html":{}}}],["src/app/core/services/island.service",{"_index":367,"title":{},"body":{"components/AdminPage.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/ProfilePage.html":{},"components/VillagerSelectableComponent.html":{}}}],["src/app/core/services/island.service.ts",{"_index":1859,"title":{},"body":{"injectables/IslandService.html":{},"coverage.html":{}}}],["src/app/core/services/island.service.ts:128",{"_index":1873,"title":{},"body":{"injectables/IslandService.html":{}}}],["src/app/core/services/island.service.ts:145",{"_index":1880,"title":{},"body":{"injectables/IslandService.html":{}}}],["src/app/core/services/island.service.ts:17",{"_index":1882,"title":{},"body":{"injectables/IslandService.html":{}}}],["src/app/core/services/island.service.ts:18",{"_index":1884,"title":{},"body":{"injectables/IslandService.html":{}}}],["src/app/core/services/island.service.ts:19",{"_index":1867,"title":{},"body":{"injectables/IslandService.html":{}}}],["src/app/core/services/island.service.ts:32",{"_index":1870,"title":{},"body":{"injectables/IslandService.html":{}}}],["src/app/core/services/island.service.ts:57",{"_index":1874,"title":{},"body":{"injectables/IslandService.html":{}}}],["src/app/core/services/island.service.ts:95",{"_index":1876,"title":{},"body":{"injectables/IslandService.html":{}}}],["src/app/core/services/loan.service",{"_index":368,"title":{},"body":{"components/AdminPage.html":{},"components/HomePage.html":{},"components/LoanFormComponent.html":{},"components/LoansPage.html":{}}}],["src/app/core/services/loan.service.ts",{"_index":2103,"title":{},"body":{"injectables/LoanService.html":{},"coverage.html":{}}}],["src/app/core/services/loan.service.ts:125",{"_index":2116,"title":{},"body":{"injectables/LoanService.html":{}}}],["src/app/core/services/loan.service.ts:140",{"_index":2122,"title":{},"body":{"injectables/LoanService.html":{}}}],["src/app/core/services/loan.service.ts:18",{"_index":2123,"title":{},"body":{"injectables/LoanService.html":{}}}],["src/app/core/services/loan.service.ts:19",{"_index":2112,"title":{},"body":{"injectables/LoanService.html":{}}}],["src/app/core/services/loan.service.ts:32",{"_index":2114,"title":{},"body":{"injectables/LoanService.html":{}}}],["src/app/core/services/loan.service.ts:46",{"_index":2120,"title":{},"body":{"injectables/LoanService.html":{}}}],["src/app/core/services/loan.service.ts:84",{"_index":2119,"title":{},"body":{"injectables/LoanService.html":{}}}],["src/app/core/services/user.service",{"_index":369,"title":{},"body":{"components/AdminPage.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{}}}],["src/app/core/services/user.service.ts",{"_index":2747,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:10",{"_index":2759,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:152",{"_index":2765,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:17",{"_index":2792,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:176",{"_index":2776,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:19",{"_index":2791,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:199",{"_index":2783,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:20",{"_index":2794,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:229",{"_index":2773,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:253",{"_index":2770,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:26",{"_index":2768,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:281",{"_index":2761,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:52",{"_index":2771,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:98",{"_index":2790,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/villager.service",{"_index":1817,"title":{},"body":{"components/IslandFormComponent.html":{},"interfaces/Item.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["src/app/core/services/villager.service.ts",{"_index":2987,"title":{},"body":{"injectables/VillagerService.html":{},"coverage.html":{}}}],["src/app/core/services/villager.service.ts:110",{"_index":3000,"title":{},"body":{"injectables/VillagerService.html":{}}}],["src/app/core/services/villager.service.ts:12",{"_index":2993,"title":{},"body":{"injectables/VillagerService.html":{}}}],["src/app/core/services/villager.service.ts:20",{"_index":3001,"title":{},"body":{"injectables/VillagerService.html":{}}}],["src/app/core/services/villager.service.ts:21",{"_index":3004,"title":{},"body":{"injectables/VillagerService.html":{}}}],["src/app/core/services/villager.service.ts:23",{"_index":3002,"title":{},"body":{"injectables/VillagerService.html":{}}}],["src/app/core/services/villager.service.ts:29",{"_index":2996,"title":{},"body":{"injectables/VillagerService.html":{}}}],["src/app/core/services/villager.service.ts:77",{"_index":2995,"title":{},"body":{"injectables/VillagerService.html":{}}}],["src/app/core/validators/numeric.ts",{"_index":3096,"title":{},"body":{"coverage.html":{},"classes/numericValidator.html":{}}}],["src/app/core/validators/numeric.ts:9",{"_index":3262,"title":{},"body":{"classes/numericValidator.html":{}}}],["src/app/core/validators/password",{"_index":2530,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["src/app/core/validators/password.ts",{"_index":2253,"title":{},"body":{"classes/PasswordValidation.html":{},"coverage.html":{}}}],["src/app/core/validators/password.ts:31",{"_index":2259,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["src/app/core/validators/password.ts:9",{"_index":2266,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["src/app/pages/about/about",{"_index":202,"title":{},"body":{"modules/AboutPageRoutingModule.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":188,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/about/about.page.ts:12",{"_index":26,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:8",{"_index":25,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/admin/admin",{"_index":494,"title":{},"body":{"modules/AdminPageRoutingModule.html":{}}}],["src/app/pages/admin/admin.module.ts",{"_index":490,"title":{},"body":{"modules/AdminPageModule.html":{}}}],["src/app/pages/admin/admin.page.ts",{"_index":266,"title":{},"body":{"components/AdminPage.html":{},"coverage.html":{}}}],["src/app/pages/admin/admin.page.ts:148",{"_index":326,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:165",{"_index":320,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:17",{"_index":360,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:18",{"_index":359,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:20",{"_index":356,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:21",{"_index":289,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:25",{"_index":361,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:34",{"_index":344,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:47",{"_index":304,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:58",{"_index":340,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:72",{"_index":349,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:86",{"_index":331,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/admin/admin.page.ts:96",{"_index":291,"title":{},"body":{"components/AdminPage.html":{}}}],["src/app/pages/home/home",{"_index":1659,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":1655,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":1508,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:106",{"_index":1531,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:146",{"_index":1525,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:160",{"_index":1552,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:194",{"_index":1563,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:214",{"_index":1554,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:235",{"_index":1549,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:24",{"_index":1565,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:25",{"_index":1567,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:26",{"_index":1524,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:29",{"_index":1566,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:30",{"_index":1564,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:32",{"_index":1568,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:40",{"_index":1547,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:46",{"_index":1537,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:56",{"_index":1536,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:65",{"_index":1559,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:84",{"_index":1556,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/loans/loans",{"_index":2190,"title":{},"body":{"modules/LoansPageRoutingModule.html":{}}}],["src/app/pages/loans/loans.module.ts",{"_index":2188,"title":{},"body":{"modules/LoansPageModule.html":{}}}],["src/app/pages/loans/loans.page.ts",{"_index":2153,"title":{},"body":{"components/LoansPage.html":{},"coverage.html":{}}}],["src/app/pages/loans/loans.page.ts:104",{"_index":2160,"title":{},"body":{"components/LoansPage.html":{}}}],["src/app/pages/loans/loans.page.ts:19",{"_index":2165,"title":{},"body":{"components/LoansPage.html":{}}}],["src/app/pages/loans/loans.page.ts:20",{"_index":2158,"title":{},"body":{"components/LoansPage.html":{}}}],["src/app/pages/loans/loans.page.ts:23",{"_index":2166,"title":{},"body":{"components/LoansPage.html":{}}}],["src/app/pages/loans/loans.page.ts:32",{"_index":2159,"title":{},"body":{"components/LoansPage.html":{}}}],["src/app/pages/loans/loans.page.ts:45",{"_index":2164,"title":{},"body":{"components/LoansPage.html":{}}}],["src/app/pages/loans/loans.page.ts:64",{"_index":2163,"title":{},"body":{"components/LoansPage.html":{}}}],["src/app/pages/loans/loans.page.ts:84",{"_index":2162,"title":{},"body":{"components/LoansPage.html":{}}}],["src/app/pages/login/login",{"_index":2243,"title":{},"body":{"modules/LoginPageRoutingModule.html":{}}}],["src/app/pages/login/login.module.ts",{"_index":2241,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["src/app/pages/login/login.page.ts",{"_index":2211,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/pages/login/login.page.ts:15",{"_index":2215,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:27",{"_index":2217,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/profile/profile",{"_index":2503,"title":{},"body":{"modules/ProfilePageRoutingModule.html":{}}}],["src/app/pages/profile/profile.module.ts",{"_index":2499,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["src/app/pages/profile/profile.page.ts",{"_index":2396,"title":{},"body":{"components/ProfilePage.html":{},"coverage.html":{}}}],["src/app/pages/profile/profile.page.ts:107",{"_index":2424,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:120",{"_index":2431,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:134",{"_index":2432,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:149",{"_index":2418,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:161",{"_index":2410,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:21",{"_index":2437,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:22",{"_index":2445,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:23",{"_index":2443,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:25",{"_index":2440,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:26",{"_index":2444,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:28",{"_index":2441,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:29",{"_index":2438,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:31",{"_index":2409,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:35",{"_index":2439,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:36",{"_index":2446,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:37",{"_index":2442,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:78",{"_index":2421,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:90",{"_index":2427,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/profile/profile.page.ts:99",{"_index":2413,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/register/register",{"_index":2557,"title":{},"body":{"modules/RegisterPageRoutingModule.html":{}}}],["src/app/pages/register/register.module.ts",{"_index":2555,"title":{},"body":{"modules/RegisterPageModule.html":{}}}],["src/app/pages/register/register.page.ts",{"_index":2540,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{}}}],["src/app/pages/register/register.page.ts:12",{"_index":2544,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:23",{"_index":2546,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/villagers/villagers",{"_index":3053,"title":{},"body":{"modules/VillagersPageRoutingModule.html":{}}}],["src/app/pages/villagers/villagers.module.ts",{"_index":3051,"title":{},"body":{"modules/VillagersPageModule.html":{}}}],["src/app/pages/villagers/villagers.page.ts",{"_index":1918,"title":{},"body":{"interfaces/Item.html":{},"components/VillagersPage.html":{},"coverage.html":{}}}],["src/app/pages/villagers/villagers.page.ts:20",{"_index":3043,"title":{},"body":{"components/VillagersPage.html":{}}}],["src/app/pages/villagers/villagers.page.ts:21",{"_index":3040,"title":{},"body":{"components/VillagersPage.html":{}}}],["src/app/pages/villagers/villagers.page.ts:23",{"_index":3045,"title":{},"body":{"components/VillagersPage.html":{}}}],["src/app/pages/villagers/villagers.page.ts:24",{"_index":3044,"title":{},"body":{"components/VillagersPage.html":{}}}],["src/app/pages/villagers/villagers.page.ts:29",{"_index":3042,"title":{},"body":{"components/VillagersPage.html":{}}}],["src/app/pages/villagers/villagers.page.ts:36",{"_index":3041,"title":{},"body":{"components/VillagersPage.html":{}}}],["src/app/shared/components/island",{"_index":1571,"title":{},"body":{"components/HomePage.html":{},"components/IslandFormComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/island/island.component.ts",{"_index":1732,"title":{},"body":{"components/IslandComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/island/island.component.ts:12",{"_index":1740,"title":{},"body":{"components/IslandComponent.html":{}}}],["src/app/shared/components/island/island.component.ts:13",{"_index":1741,"title":{},"body":{"components/IslandComponent.html":{}}}],["src/app/shared/components/island/island.component.ts:16",{"_index":1739,"title":{},"body":{"components/IslandComponent.html":{}}}],["src/app/shared/components/island/island.component.ts:25",{"_index":1748,"title":{},"body":{"components/IslandComponent.html":{}}}],["src/app/shared/components/island/island.component.ts:34",{"_index":1742,"title":{},"body":{"components/IslandComponent.html":{}}}],["src/app/shared/components/loan",{"_index":1573,"title":{},"body":{"components/HomePage.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"coverage.html":{}}}],["src/app/shared/components/loan/loan.component.ts",{"_index":1997,"title":{},"body":{"components/LoanComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/loan/loan.component.ts:11",{"_index":2005,"title":{},"body":{"components/LoanComponent.html":{}}}],["src/app/shared/components/loan/loan.component.ts:12",{"_index":2004,"title":{},"body":{"components/LoanComponent.html":{}}}],["src/app/shared/components/loan/loan.component.ts:14",{"_index":2003,"title":{},"body":{"components/LoanComponent.html":{}}}],["src/app/shared/components/loan/loan.component.ts:16",{"_index":2002,"title":{},"body":{"components/LoanComponent.html":{}}}],["src/app/shared/components/loan/loan.component.ts:24",{"_index":2006,"title":{},"body":{"components/LoanComponent.html":{}}}],["src/app/shared/components/loan/loan.component.ts:34",{"_index":2010,"title":{},"body":{"components/LoanComponent.html":{}}}],["src/app/shared/components/loan/loan.component.ts:43",{"_index":2009,"title":{},"body":{"components/LoanComponent.html":{}}}],["src/app/shared/components/login",{"_index":2191,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/picture",{"_index":2290,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/register",{"_index":2219,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/user",{"_index":933,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/villager",{"_index":2895,"title":{},"body":{"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/villager/villager.component.ts",{"_index":2876,"title":{},"body":{"components/VillagerComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/villager/villager.component.ts:11",{"_index":2879,"title":{},"body":{"components/VillagerComponent.html":{}}}],["src/app/shared/directives/background",{"_index":906,"title":{},"body":{"directives/BackgroundBlurDirective.html":{},"coverage.html":{}}}],["src/app/shared/directives/progress.directive.ts",{"_index":2504,"title":{},"body":{"directives/ProgressDirective.html":{},"coverage.html":{}}}],["src/app/shared/directives/progress.directive.ts:14",{"_index":2508,"title":{},"body":{"directives/ProgressDirective.html":{}}}],["src/app/shared/directives/progress.directive.ts:21",{"_index":2507,"title":{},"body":{"directives/ProgressDirective.html":{}}}],["src/app/shared/directives/progress.directive.ts:8",{"_index":2510,"title":{},"body":{"directives/ProgressDirective.html":{}}}],["src/app/shared/pipes/latest",{"_index":1960,"title":{},"body":{"pipes/LatestThreePipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/loan",{"_index":1987,"title":{},"body":{"pipes/LoanCompletedPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module",{"_index":199,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/VillagersPageModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":2561,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment",{"_index":532,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":3123,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":3124,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":975,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{}}}],["start:0",{"_index":2389,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["startafter",{"_index":1245,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["startafter(lastdocument",{"_index":1386,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["startat",{"_index":1243,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["started",{"_index":3164,"title":{"index.html":{}},"body":{}}],["state",{"_index":228,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"injectables/UserService.html":{},"components/VillagerSelectableComponent.html":{}}}],["state.url",{"_index":263,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["statements",{"_index":3056,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":2254,"title":{},"body":{"classes/PasswordValidation.html":{},"classes/numericValidator.html":{}}}],["status",{"_index":1544,"title":{},"body":{"components/HomePage.html":{},"interfaces/Loan.html":{},"pipes/LoanCompletedPipe.html":{},"components/ProfilePage.html":{}}}],["storage",{"_index":1265,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["storagebucket",{"_index":3309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageref",{"_index":1324,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stored",{"_index":1126,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stores",{"_index":2729,"title":{},"body":{"components/UserListComponent.html":{}}}],["strapi",{"_index":727,"title":{},"body":{"modules/AppModule.html":{}}}],["strapi.service",{"_index":702,"title":{},"body":{"modules/AppModule.html":{},"components/HomePage.html":{},"injectables/IslandService.html":{},"components/LoansPage.html":{},"components/VillagerSelectableComponent.html":{}}}],["strapi.service.ts",{"_index":830,"title":{},"body":{"injectables/AuthStrapiService.html":{},"coverage.html":{}}}],["strapi.service.ts:14",{"_index":835,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["strapi.service.ts:24",{"_index":837,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["strapi/data.service",{"_index":1201,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["strapi/jwt.service",{"_index":536,"title":{},"body":{"injectables/ApiService.html":{}}}],["strapiarrayresponse",{"_index":1200,"title":{"interfaces/StrapiArrayResponse.html":{}},"body":{"classes/FirebaseDataService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["strapidata",{"_index":1489,"title":{"interfaces/StrapiData.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["strapidataservice",{"_index":696,"title":{"classes/StrapiDataService.html":{}},"body":{"modules/AppModule.html":{},"classes/StrapiDataService.html":{},"coverage.html":{}}}],["strapiextendeduser",{"_index":849,"title":{"interfaces/StrapiExtendedUser.html":{}},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["strapiloginpayload",{"_index":850,"title":{"interfaces/StrapiLoginPayload.html":{}},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["strapiloginresponse",{"_index":851,"title":{"interfaces/StrapiLoginResponse.html":{}},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["strapime",{"_index":852,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/typealiases.html":{}}}],["strapimedia",{"_index":1495,"title":{"interfaces/StrapiMedia.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["strapiregisterpayload",{"_index":853,"title":{"interfaces/StrapiRegisterPayload.html":{}},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["strapiregisterresponse",{"_index":854,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/typealiases.html":{}}}],["strapiresponse",{"_index":855,"title":{"interfaces/StrapiResponse.html":{}},"body":{"injectables/AuthStrapiService.html":{},"classes/FirebaseDataService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["strapiuploadresponse",{"_index":1494,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/typealiases.html":{}}}],["strapiuser",{"_index":856,"title":{"interfaces/StrapiUser.html":{}},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["stretch",{"_index":2233,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["string",{"_index":300,"title":{},"body":{"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/Island.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/JwtService.html":{},"interfaces/Large.html":{},"interfaces/Loan.html":{},"injectables/LoanService.html":{},"components/LoginFormComponent.html":{},"interfaces/Medium.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserListComponent.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UserService.html":{},"interfaces/Villager.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"miscellaneous/functions.html":{},"classes/numericValidator.html":{},"miscellaneous/typealiases.html":{}}}],["string,event:any",{"_index":1022,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["strong",{"_index":1460,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/PasswordValidation.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"interfaces/Item.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["subir",{"_index":2831,"title":{},"body":{"injectables/UserService.html":{}}}],["subject",{"_index":1416,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ProfilePage.html":{}}}],["subject.next(snapshot.docs.map(doc",{"_index":1420,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["submission",{"_index":2196,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["submit",{"_index":998,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{}}}],["submits",{"_index":1799,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{}}}],["subscr.complete",{"_index":1160,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["subscr.error('cannot",{"_index":1148,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["subscr.error('user",{"_index":1158,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["subscr.next(_info",{"_index":1169,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["subscr.next(data",{"_index":1159,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["subscribes",{"_index":1415,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{}}}],["subscribetocollection(collectionname",{"_index":1418,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["successfully",{"_index":1881,"title":{},"body":{"injectables/IslandService.html":{}}}],["such",{"_index":1727,"title":{},"body":{"interfaces/Island.html":{}}}],["summary",{"_index":1154,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["super",{"_index":858,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/HttpClientWebProvider.html":{},"classes/StrapiDataService.html":{}}}],["support",{"_index":3254,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":1046,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["supportedlangs",{"_index":1030,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["sus",{"_index":3192,"title":{},"body":{"index.html":{}}}],["svg",{"_index":3255,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":725,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ButtonConfig.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["switchmap",{"_index":363,"title":{},"body":{"components/AdminPage.html":{}}}],["t",{"_index":1086,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/Formats.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["table",{"_index":2659,"title":{},"body":{"components/UserCardComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3125,"title":{},"body":{"coverage.html":{}}}],["tabview",{"_index":2486,"title":{},"body":{"components/ProfilePage.html":{}}}],["tabviewmodule",{"_index":711,"title":{},"body":{"modules/AppModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{}}}],["tap",{"_index":785,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/LoanService.html":{}}}],["target",{"_index":2788,"title":{},"body":{"injectables/UserService.html":{}}}],["targetuserid",{"_index":2781,"title":{},"body":{"injectables/UserService.html":{}}}],["td",{"_index":2670,"title":{},"body":{"components/UserCardComponent.html":{}}}],["td:first",{"_index":2673,"title":{},"body":{"components/UserCardComponent.html":{}}}],["tecnologías",{"_index":3228,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"interfaces/Item.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["tertiary",{"_index":2231,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["text",{"_index":95,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginPage.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{}}}],["text/csv;charset=utf",{"_index":430,"title":{},"body":{"components/AdminPage.html":{}}}],["text:hover",{"_index":109,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{}}}],["th",{"_index":2669,"title":{},"body":{"components/UserCardComponent.html":{}}}],["then((_",{"_index":1955,"title":{},"body":{"injectables/JwtService.html":{}}}],["then(querysnapshot",{"_index":1388,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._app",{"_index":1282,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth",{"_index":1288,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth!.currentuser.isanonymous",{"_index":1436,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.currentuser",{"_index":1318,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.onauthstatechanged(async",{"_index":1291,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.signout",{"_index":1427,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._db",{"_index":1284,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._island",{"_index":1826,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoansPage.html":{}}}],["this._islands.asobservable",{"_index":1883,"title":{},"body":{"injectables/IslandService.html":{}}}],["this._islands.next(island",{"_index":1909,"title":{},"body":{"injectables/IslandService.html":{}}}],["this._islands.next(null",{"_index":1913,"title":{},"body":{"injectables/IslandService.html":{}}}],["this._islogged.asobservable",{"_index":1273,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.next(false",{"_index":1300,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.next(true",{"_index":1295,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._language.asobservable",{"_index":1060,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this._language.next(language",{"_index":1075,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this._loans",{"_index":2131,"title":{},"body":{"injectables/LoanService.html":{}}}],["this._loans.asobservable",{"_index":2124,"title":{},"body":{"injectables/LoanService.html":{}}}],["this._loans.next",{"_index":2139,"title":{},"body":{"injectables/LoanService.html":{}}}],["this._logged.asobservable",{"_index":807,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["this._logged.next(connected",{"_index":889,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["this._logged.next(data",{"_index":872,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["this._logged.next(false",{"_index":880,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["this._logged.next(true",{"_index":861,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{}}}],["this._picture.asobservable",{"_index":2353,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.complete",{"_index":2361,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(base64",{"_index":2367,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(obj",{"_index":2363,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._user",{"_index":1292,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._user.asobservable",{"_index":809,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/ProfilePage.html":{}}}],["this._user.next(_info",{"_index":1168,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this._user.next(data",{"_index":1139,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"components/ProfilePage.html":{}}}],["this._user.next(null",{"_index":1141,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this._user.next(updateduser",{"_index":1188,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this._user.next(user",{"_index":2457,"title":{},"body":{"components/ProfilePage.html":{}}}],["this._user.value!).subscribe",{"_index":2463,"title":{},"body":{"components/ProfilePage.html":{}}}],["this._user.value!.followers.includes(uuid",{"_index":2475,"title":{},"body":{"components/ProfilePage.html":{}}}],["this._user.value!.following.filter(uuid",{"_index":2474,"title":{},"body":{"components/ProfilePage.html":{}}}],["this._user.value!.following.includes(useruuid",{"_index":2461,"title":{},"body":{"components/ProfilePage.html":{}}}],["this._users.asobservable",{"_index":2793,"title":{},"body":{"injectables/UserService.html":{}}}],["this._users.next(updatedusers",{"_index":2817,"title":{},"body":{"injectables/UserService.html":{}}}],["this._users.value",{"_index":2815,"title":{},"body":{"injectables/UserService.html":{}}}],["this._villager",{"_index":2908,"title":{},"body":{"components/VillagerItemComponent.html":{}}}],["this._villagers.asobservable",{"_index":3003,"title":{},"body":{"injectables/VillagerService.html":{}}}],["this._villagers.next(updatedvillagers",{"_index":3029,"title":{},"body":{"injectables/VillagerService.html":{}}}],["this._villagers.value",{"_index":3027,"title":{},"body":{"injectables/VillagerService.html":{}}}],["this._webstorage",{"_index":1286,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.alertcontroller.create",{"_index":1584,"title":{},"body":{"components/HomePage.html":{},"components/IslandFormComponent.html":{}}}],["this.api.delete(`/${resource}`).pipe(map((response:strapiresponse",{"_index":1219,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["this.api.get(`/${resource",{"_index":1204,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["this.api.get(`/${resource}?${querystring}`).pipe(map((response:strapiarrayresponse",{"_index":2606,"title":{},"body":{"classes/StrapiDataService.html":{}}}],["this.api.get(`/${resource}`).pipe(map((response:strapiresponse",{"_index":1211,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["this.api.post(`/${resource",{"_index":1214,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["this.api.put(`/${resource",{"_index":1217,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/StrapiDataService.html":{}}}],["this.apisvc.get('/users/me').subscribe",{"_index":895,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["this.apisvc.post(\"/auth/local",{"_index":868,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["this.apisvc.post(\"/auth/local/register",{"_index":886,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["this.auth.islogged",{"_index":612,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.islogged$.pipe(tap(logged",{"_index":788,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.auth.login(credentials).subscribe",{"_index":2223,"title":{},"body":{"components/LoginPage.html":{}}}],["this.auth.logout().subscribe(_",{"_index":627,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.register(info).subscribe",{"_index":2547,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.auth.user$.pipe",{"_index":259,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.me",{"_index":2167,"title":{},"body":{"components/LoansPage.html":{}}}],["this.button_configs['follow",{"_index":989,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["this.button_configs['unfollow",{"_index":986,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["this.button_configs[this.buttontype",{"_index":978,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["this.buttonconfig",{"_index":977,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["this.buttonconfig?.action",{"_index":984,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["this.buttontype",{"_index":976,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["this.changepicture",{"_index":2381,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.changepicture(reader.result",{"_index":2376,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.clicked.emit(this._villager",{"_index":2911,"title":{},"body":{"components/VillagerItemComponent.html":{}}}],["this.connectanonymously",{"_index":1428,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.converttocsv(userswithislandinfo",{"_index":464,"title":{},"body":{"components/AdminPage.html":{}}}],["this.createbody(body",{"_index":1711,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["this.createheaders(headers",{"_index":1709,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["this.currentisland",{"_index":2459,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.disabled",{"_index":2967,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["this.downloadcsvfile(csvcontent",{"_index":465,"title":{},"body":{"components/AdminPage.html":{}}}],["this.editmodal.emit(false",{"_index":1000,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["this.editmodal.emit(true",{"_index":995,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["this.el.nativeelement",{"_index":2517,"title":{},"body":{"directives/ProgressDirective.html":{}}}],["this.fbauth.me().subscribe(data",{"_index":2464,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.fbauth.me().subscribe(updateduser",{"_index":2835,"title":{},"body":{"injectables/UserService.html":{}}}],["this.fbauth.updateprofilepictureanduser(updateduser",{"_index":2836,"title":{},"body":{"injectables/UserService.html":{}}}],["this.fbauth.user$.subscribe(user",{"_index":615,"title":{},"body":{"components/AppComponent.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{},"components/ProfilePage.html":{}}}],["this.fbsvc.createdocument(`users/${user!.uuid}/island",{"_index":1894,"title":{},"body":{"injectables/IslandService.html":{}}}],["this.fbsvc.createdocument(`users/${user!.uuid}/island/${is.id}/loans",{"_index":2128,"title":{},"body":{"injectables/LoanService.html":{}}}],["this.fbsvc.deletedocument(`users/${user!.uuid}/island",{"_index":1911,"title":{},"body":{"injectables/IslandService.html":{}}}],["this.fbsvc.deletedocument(`users/${user!.uuid}/island/${is.id}/loans",{"_index":2150,"title":{},"body":{"injectables/LoanService.html":{}}}],["this.fbsvc.deletefile(user.profile_picture",{"_index":2826,"title":{},"body":{"injectables/UserService.html":{}}}],["this.fbsvc.getdocument(\"users",{"_index":2857,"title":{},"body":{"injectables/UserService.html":{}}}],["this.fbsvc.getdocuments(\"users\").then(documents",{"_index":2795,"title":{},"body":{"injectables/UserService.html":{}}}],["this.fbsvc.getdocuments(`users/${user!.uuid}/island`).then(isdoc",{"_index":1897,"title":{},"body":{"injectables/IslandService.html":{}}}],["this.fbsvc.getdocuments(`users/${uuid}/island/${is.id}/loans`).then(loansdoc",{"_index":2141,"title":{},"body":{"injectables/LoanService.html":{}}}],["this.fbsvc.getdocuments(`users/${uuid}/island`).then(isdoc",{"_index":1910,"title":{},"body":{"injectables/IslandService.html":{}}}],["this.fbsvc.getdocumentsby(\"villagers",{"_index":3036,"title":{},"body":{"injectables/VillagerService.html":{}}}],["this.fbsvc.getdocumentsfiltered(\"users",{"_index":2859,"title":{},"body":{"injectables/UserService.html":{}}}],["this.fbsvc.getdocumentsfiltered(\"villagers",{"_index":3032,"title":{},"body":{"injectables/VillagerService.html":{}}}],["this.fbsvc.getdocumentspaginated(\"users",{"_index":2804,"title":{},"body":{"injectables/UserService.html":{}}}],["this.fbsvc.getdocumentspaginated(\"villagers",{"_index":3005,"title":{},"body":{"injectables/VillagerService.html":{}}}],["this.fbsvc.imageupload(file",{"_index":2828,"title":{},"body":{"injectables/UserService.html":{}}}],["this.fbsvc.subscribetocollection",{"_index":2130,"title":{},"body":{"injectables/LoanService.html":{}}}],["this.fbsvc.updatedocument('users",{"_index":2834,"title":{},"body":{"injectables/UserService.html":{}}}],["this.fbsvc.updatedocument(`users/${user!.uid}/island",{"_index":1915,"title":{},"body":{"injectables/IslandService.html":{}}}],["this.fbsvc.updatedocument(`users/${user!.uuid}/island/${is.id}/loans",{"_index":2152,"title":{},"body":{"injectables/LoanService.html":{}}}],["this.fbsvc.user",{"_index":1914,"title":{},"body":{"injectables/IslandService.html":{}}}],["this.fileupload(blob",{"_index":1334,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.filter",{"_index":2980,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["this.filter(evt.detail.value",{"_index":2971,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["this.filteredusers",{"_index":382,"title":{},"body":{"components/AdminPage.html":{},"components/ProfilePage.html":{}}}],["this.filteredusers.length",{"_index":2467,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.filteredusers.map(async",{"_index":2470,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.firebasesvc.connectuserwithemailandpassword(credentials.username",{"_index":1143,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.firebasesvc.createuserwithemailandpassword(info.email",{"_index":1161,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.firebasesvc.islogged$.subscribe(logged",{"_index":1137,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.firebasesvc.user.uid)).pipe(map(data",{"_index":1176,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.firebasesvc.user?.uid",{"_index":1166,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.follow.emit(this.user",{"_index":985,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["this.form",{"_index":1827,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.form.controls['amountpaid'].setvalue(_loan.attributes.amountpaid",{"_index":2055,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["this.form.controls['amounttotal'].setvalue(_loan.attributes.amounttotal",{"_index":2058,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["this.form.controls['completed'].setvalue(_loan.attributes.completed",{"_index":2056,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["this.form.controls['name'].setvalue(_island.attributes.name",{"_index":1820,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["this.form.controls['title'].setvalue(_loan.attributes.title",{"_index":2059,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["this.form.controls['type'].setvalue(_loan.attributes.type",{"_index":2057,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["this.form.controls['villager",{"_index":1824,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["this.form.controls[control].errors",{"_index":2537,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.form.get('amountpaid')?.value",{"_index":2063,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["this.form.get('amounttotal')?.value",{"_index":2064,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["this.form.get('completed')?.value",{"_index":2065,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["this.form.haserror(error",{"_index":2535,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.form?.controls['password'].setvalue",{"_index":2205,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form?.controls['username'].setvalue(value",{"_index":2201,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form?.get('amountpaid')?.setvalue(amounttotal",{"_index":2070,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["this.form?.get('amounttotal')?.value",{"_index":2069,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["this.form?.get('completed')?.setvalue(false",{"_index":2066,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["this.form?.get('completed')?.setvalue(true",{"_index":2071,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["this.formbuilder.group",{"_index":1828,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserFormComponent.html":{}}}],["this.formmodal.dismiss(null",{"_index":1840,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/UserFormComponent.html":{}}}],["this.formmodal.dismiss(this.form.value",{"_index":1841,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["this.formmodal.dismiss(this.form?.value",{"_index":2072,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["this.formmodal.dismiss(this.getdirtyvalues(this.userform",{"_index":2707,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.getdirtyvalues(this.userform",{"_index":2706,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.getdocument('users",{"_index":1297,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.getheader(url",{"_index":556,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.gethemisphere",{"_index":1583,"title":{},"body":{"components/HomePage.html":{}}}],["this.getuserisland",{"_index":1917,"title":{},"body":{"injectables/IslandService.html":{}}}],["this.hasvalue",{"_index":2362,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.hemispherealert(info.data",{"_index":1581,"title":{},"body":{"components/HomePage.html":{}}}],["this.http.delete(url",{"_index":566,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get",{"_index":540,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(url",{"_index":555,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.getimage(url",{"_index":553,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.patch(url",{"_index":563,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(url,body",{"_index":562,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.put(url,body",{"_index":560,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.httpclient.delete(url",{"_index":1717,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["this.httpclient.get(url",{"_index":1706,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["this.httpclient.patch(url",{"_index":1715,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["this.httpclient.post(url",{"_index":1710,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["this.httpclient.put(url",{"_index":1712,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["this.init",{"_index":859,"title":{},"body":{"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{}}}],["this.init(config",{"_index":1275,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.is",{"_index":1577,"title":{},"body":{"components/HomePage.html":{},"components/ProfilePage.html":{}}}],["this.isdisabled",{"_index":2366,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.islandservice.addisland(isdata).subscribe",{"_index":1598,"title":{},"body":{"components/HomePage.html":{}}}],["this.islandservice.deleteisland(is).subscribe",{"_index":1611,"title":{},"body":{"components/HomePage.html":{}}}],["this.islandservice.getuserisland().subscribe",{"_index":1610,"title":{},"body":{"components/HomePage.html":{}}}],["this.islandservice.getuserisland().subscribe(is",{"_index":1576,"title":{},"body":{"components/HomePage.html":{},"components/ProfilePage.html":{}}}],["this.islandservice.getuserisland().subscribe(island",{"_index":2168,"title":{},"body":{"components/LoansPage.html":{}}}],["this.islandservice.getuserisland().subscribe(updatedisland",{"_index":1596,"title":{},"body":{"components/HomePage.html":{}}}],["this.islandservice.getuserislandbyid(user.uuid!).subscribe(is",{"_index":2458,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.islandservice.updateisland(is",{"_index":1608,"title":{},"body":{"components/HomePage.html":{}}}],["this.islandsvc.getuserislandbyid(user.uuid!).topromise",{"_index":446,"title":{},"body":{"components/AdminPage.html":{}}}],["this.islandsvc.getuserislandbyid(user.uuid).subscribe(island",{"_index":380,"title":{},"body":{"components/AdminPage.html":{}}}],["this.isme",{"_index":2455,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.ismodalopen",{"_index":1580,"title":{},"body":{"components/HomePage.html":{},"components/LoansPage.html":{},"components/ProfilePage.html":{}}}],["this.issvc.getuserisland().subscribe(is",{"_index":2127,"title":{},"body":{"injectables/LoanService.html":{}}}],["this.issvc.getuserislandbyid(uuid).subscribe(is",{"_index":2140,"title":{},"body":{"injectables/LoanService.html":{}}}],["this.isuserconnected",{"_index":1439,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.isuserconnectedanonymously",{"_index":1440,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.jwt.gettoken",{"_index":551,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.jwtsvc.destroytoken().pipe(map(_",{"_index":879,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["this.jwtsvc.loadtoken().subscribe(_",{"_index":860,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["this.lang",{"_index":621,"title":{},"body":{"components/AppComponent.html":{}}}],["this.lastuser",{"_index":2811,"title":{},"body":{"injectables/UserService.html":{}}}],["this.lastuser).then(userspaginated",{"_index":2805,"title":{},"body":{"injectables/UserService.html":{}}}],["this.lastvillager",{"_index":3023,"title":{},"body":{"injectables/VillagerService.html":{}}}],["this.lastvillager).then(villagerspaginated",{"_index":3006,"title":{},"body":{"injectables/VillagerService.html":{}}}],["this.loadislandsforusers(users",{"_index":376,"title":{},"body":{"components/AdminPage.html":{}}}],["this.loadmutualusers",{"_index":2460,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.loadusers",{"_index":2733,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.loadvillagers",{"_index":2960,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["this.loadvillagers(filtering",{"_index":2969,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["this.loan.attributes.amountpaid",{"_index":2018,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["this.loan.attributes.amounttotal",{"_index":2016,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["this.loanservice.addloan(info.data).subscribe",{"_index":2169,"title":{},"body":{"components/LoansPage.html":{}}}],["this.loanservice.deleteloan(loan).subscribe",{"_index":2171,"title":{},"body":{"components/LoansPage.html":{}}}],["this.loanservice.deleteloan(loan).subscribe(deleted",{"_index":1617,"title":{},"body":{"components/HomePage.html":{}}}],["this.loanservice.getuserloans().subscribe",{"_index":1578,"title":{},"body":{"components/HomePage.html":{},"components/LoansPage.html":{}}}],["this.loanservice.updateloan(loan).subscribe",{"_index":1615,"title":{},"body":{"components/HomePage.html":{},"components/LoansPage.html":{}}}],["this.loansvc.getuserloanbyid(\"3g4bf9jdpcw4lvqnbgx7g1er0u02\").subscribe(loans",{"_index":373,"title":{},"body":{"components/AdminPage.html":{}}}],["this.loansvc.getuserloanbyid(user.uuid!).topromise",{"_index":452,"title":{},"body":{"components/AdminPage.html":{}}}],["this.logout().subscribe",{"_index":1157,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.me().subscribe",{"_index":1138,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.me().subscribe(async",{"_index":1149,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.messageservice.add",{"_index":1152,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.min_width",{"_index":2515,"title":{},"body":{"directives/ProgressDirective.html":{}}}],["this.modal.create",{"_index":1012,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"components/UserCardComponent.html":{}}}],["this.modalcontroller.dismiss",{"_index":2734,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.mode",{"_index":1819,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{}}}],["this.mutualusers",{"_index":2479,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.ondeleteclicked.emit",{"_index":2021,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["this.oneditclicked(this.user",{"_index":990,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["this.oneditclicked.emit",{"_index":1752,"title":{},"body":{"components/IslandComponent.html":{},"components/LoanComponent.html":{}}}],["this.onloanclicked.emit",{"_index":2100,"title":{},"body":{"components/LoanItemComponent.html":{}}}],["this.onsignout",{"_index":619,"title":{},"body":{"components/AppComponent.html":{}}}],["this.onsubmit.emit(this.form.value",{"_index":2534,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.onsubmit.emit(this.form?.value",{"_index":2204,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.percentage",{"_index":2017,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["this.picturemodal.dismiss",{"_index":2382,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.postregister(_info).subscribe(data",{"_index":1167,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.presentform(is",{"_index":1612,"title":{},"body":{"components/HomePage.html":{}}}],["this.presentform(loan",{"_index":2170,"title":{},"body":{"components/LoansPage.html":{}}}],["this.presentform(null",{"_index":1582,"title":{},"body":{"components/HomePage.html":{},"components/LoansPage.html":{}}}],["this.presentloanform(loan",{"_index":1616,"title":{},"body":{"components/HomePage.html":{}}}],["this.presentuserform(user",{"_index":1002,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["this.propagatechange",{"_index":2364,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["this.propagatechange(file",{"_index":2368,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.propagatechange(this.villagerselected!.attributes.name",{"_index":2966,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["this.propagatechange(undefined",{"_index":2964,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["this.renderer.addclass(this.el.nativeelement",{"_index":927,"title":{},"body":{"directives/BackgroundBlurDirective.html":{}}}],["this.renderer.removeclass(this.el.nativeelement",{"_index":928,"title":{},"body":{"directives/BackgroundBlurDirective.html":{}}}],["this.renderer.setstyle",{"_index":2516,"title":{},"body":{"directives/ProgressDirective.html":{}}}],["this.route.parammap.subscribe(async",{"_index":2452,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.router.events.subscribe(event",{"_index":623,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/loans",{"_index":1579,"title":{},"body":{"components/HomePage.html":{}}}],["this.router.navigate(['/login",{"_index":628,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.router.navigate(['/profile",{"_index":388,"title":{},"body":{"components/AdminPage.html":{},"components/ProfilePage.html":{},"components/UserListComponent.html":{}}}],["this.router.navigate(['home",{"_index":2548,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.router.navigate([returnurl",{"_index":1299,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.router.navigatebyurl(returnurl",{"_index":614,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.parseurl('/login?returnurl",{"_index":264,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["this.savetoken(this.token",{"_index":1956,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.selectvillager(undefined",{"_index":2982,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["this.selectvillager(villager.attributes.name",{"_index":2976,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["this.showall",{"_index":383,"title":{},"body":{"components/AdminPage.html":{}}}],["this.shownavbar",{"_index":625,"title":{},"body":{"components/AppComponent.html":{}}}],["this.supportedlangs.includes(browserlang",{"_index":1080,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.token",{"_index":1945,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.translate.addlangs(['es",{"_index":1072,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.get(key",{"_index":1078,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.getbrowserlang",{"_index":622,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{}}}],["this.translate.setdefaultlang(this._language.value",{"_index":1073,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.use(this.lang",{"_index":630,"title":{},"body":{"components/AppComponent.html":{}}}],["this.unfollow.emit(this.user",{"_index":988,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["this.updatefilteredusers",{"_index":2465,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.updatelocalusers(currentuser.uuid",{"_index":2844,"title":{},"body":{"injectables/UserService.html":{}}}],["this.user",{"_index":616,"title":{},"body":{"components/AppComponent.html":{}}}],["this.user?.followers",{"_index":1025,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["this.user?.followers?.length",{"_index":2643,"title":{},"body":{"components/UserCardComponent.html":{}}}],["this.user?.following",{"_index":1024,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["this.user?.following?.length",{"_index":2641,"title":{},"body":{"components/UserCardComponent.html":{}}}],["this.userform",{"_index":2697,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.userform.controls['dream_code'].setvalue(_user.dream_code",{"_index":2694,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.userform.controls['profile_picture'].setvalue(_user.profile_picture",{"_index":2696,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.userform.controls['username'].setvalue(_user.username",{"_index":2692,"title":{},"body":{"components/UserFormComponent.html":{}}}],["this.userisland[user.uuid",{"_index":379,"title":{},"body":{"components/AdminPage.html":{}}}],["this.users",{"_index":2737,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.usersvc.banuser(this.user!).subscribe",{"_index":991,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["this.usersvc.followuser(user",{"_index":2462,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.usersvc.getallusers().topromise",{"_index":443,"title":{},"body":{"components/AdminPage.html":{}}}],["this.usersvc.getfiltered(event.detail.value",{"_index":385,"title":{},"body":{"components/AdminPage.html":{},"components/ProfilePage.html":{}}}],["this.usersvc.getpaginatedusers().subscribe",{"_index":372,"title":{},"body":{"components/AdminPage.html":{}}}],["this.usersvc.getpaginatedusers().subscribe(users",{"_index":375,"title":{},"body":{"components/AdminPage.html":{}}}],["this.usersvc.getuserbyid(user.uuid",{"_index":2471,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.usersvc.getuserbyid(userid",{"_index":2456,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.usersvc.getuserbyid(uuid",{"_index":2477,"title":{},"body":{"components/ProfilePage.html":{},"components/UserListComponent.html":{}}}],["this.usersvc.unfollowuser(user",{"_index":2466,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.usersvc.updateuser(user",{"_index":999,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["this.useruuids",{"_index":2735,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.useruuids.length",{"_index":2736,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.useruuids.map(uuid",{"_index":2738,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.villagers",{"_index":2958,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["this.villagers.find(v=>v.attributes.name===name",{"_index":2965,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["this.villagerselected",{"_index":2963,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["this.villagerservice.getfiltered(\"a",{"_index":2959,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["this.villagerservice.getfiltered(filter",{"_index":2961,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["this.villagerservice.getpaginatedvillagers().subscribe",{"_index":1926,"title":{},"body":{"interfaces/Item.html":{},"components/VillagersPage.html":{}}}],["this.villagerservice.getvillagerbyname(villagername",{"_index":1902,"title":{},"body":{"injectables/IslandService.html":{}}}],["this?.loan?.attributes",{"_index":2015,"title":{},"body":{"components/LoanComponent.html":{},"components/LoanItemComponent.html":{}}}],["those",{"_index":1993,"title":{},"body":{"pipes/LoanCompletedPipe.html":{}}}],["three",{"_index":1968,"title":{},"body":{"pipes/LatestThreePipe.html":{}}}],["three.pipe",{"_index":2579,"title":{},"body":{"modules/SharedModule.html":{}}}],["three.pipe.ts",{"_index":1961,"title":{},"body":{"pipes/LatestThreePipe.html":{},"coverage.html":{}}}],["three.pipe.ts:12",{"_index":1965,"title":{},"body":{"pipes/LatestThreePipe.html":{}}}],["throw",{"_index":730,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"injectables/UserService.html":{}}}],["throws",{"_index":1174,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["thumbnail",{"_index":1488,"title":{"interfaces/Thumbnail.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["tied",{"_index":2527,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["time",{"_index":2998,"title":{},"body":{"injectables/VillagerService.html":{}}}],["tint",{"_index":103,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["title",{"_index":666,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandFormComponent.html":{},"interfaces/Loan.html":{},"components/LoanFormComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{}}}],["title:string",{"_index":1985,"title":{},"body":{"interfaces/Loan.html":{}}}],["titlecase",{"_index":1755,"title":{},"body":{"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/VillagerComponent.html":{}}}],["toastmodule",{"_index":713,"title":{},"body":{"modules/AppModule.html":{}}}],["toda",{"_index":2656,"title":{},"body":{"components/UserCardComponent.html":{}}}],["toggle",{"_index":2083,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["token",{"_index":1929,"title":{},"body":{"injectables/JwtService.html":{}}}],["toolbar",{"_index":656,"title":{},"body":{"components/AppComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["toolbox",{"_index":647,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["toolbox.appspot.com",{"_index":3310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toolbox.firebaseapp.com",{"_index":3307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["top",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoanItemComponent.html":{},"components/UserCardComponent.html":{}}}],["total",{"_index":1493,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Loan.html":{},"components/LoanFormComponent.html":{},"interfaces/Medium.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["total:number",{"_index":2248,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{}}}],["total_loans",{"_index":396,"title":{},"body":{"components/AdminPage.html":{}}}],["totalloans",{"_index":457,"title":{},"body":{"components/AdminPage.html":{}}}],["touched",{"_index":2342,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["tr:first",{"_index":2672,"title":{},"body":{"components/UserCardComponent.html":{}}}],["tracker",{"_index":3166,"title":{},"body":{"index.html":{}}}],["traducciones",{"_index":3218,"title":{},"body":{"index.html":{}}}],["traducción",{"_index":3214,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1963,"title":{},"body":{"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{}}}],["transform(items",{"_index":1964,"title":{},"body":{"pipes/LatestThreePipe.html":{}}}],["transform(loans",{"_index":1990,"title":{},"body":{"pipes/LoanCompletedPipe.html":{}}}],["transformed",{"_index":1970,"title":{},"body":{"pipes/LatestThreePipe.html":{}}}],["transforms",{"_index":1966,"title":{},"body":{"pipes/LatestThreePipe.html":{},"pipes/LoanCompletedPipe.html":{}}}],["transition",{"_index":2208,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["translate",{"_index":35,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerSelectableComponent.html":{},"miscellaneous/functions.html":{}}}],["translate):('main.save",{"_index":1852,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["translate):(\\'main.save",{"_index":1858,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["translate.service",{"_index":602,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["translate.service.ts",{"_index":1028,"title":{},"body":{"injectables/CustomTranslateService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["translate.service.ts:20",{"_index":1059,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translate.service.ts:21",{"_index":1061,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translate.service.ts:23",{"_index":1034,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translate.service.ts:35",{"_index":1050,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translate.service.ts:44",{"_index":1052,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translate.service.ts:57",{"_index":1036,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translate.service.ts:65",{"_index":1041,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translate/core",{"_index":707,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":1063,"title":{},"body":{"injectables/CustomTranslateService.html":{},"dependencies.html":{}}}],["translate:customtranslateservice",{"_index":608,"title":{},"body":{"components/AppComponent.html":{}}}],["translated",{"_index":1038,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translatehttploader",{"_index":1062,"title":{},"body":{"injectables/CustomTranslateService.html":{},"miscellaneous/functions.html":{}}}],["translatehttploader(http",{"_index":1069,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translateloader",{"_index":703,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule",{"_index":704,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forchild",{"_index":2596,"title":{},"body":{"modules/SharedModule.html":{}}}],["translatemodule.forroot",{"_index":734,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":705,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"miscellaneous/functions.html":{}}}],["translation",{"_index":1040,"title":{},"body":{"injectables/CustomTranslateService.html":{},"miscellaneous/functions.html":{}}}],["translations",{"_index":1054,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["transparent",{"_index":1762,"title":{},"body":{"components/IslandComponent.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["triggered",{"_index":316,"title":{},"body":{"components/AdminPage.html":{}}}],["true",{"_index":265,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/LoansPage.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"injectables/UserService.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"classes/numericValidator.html":{},"miscellaneous/variables.html":{}}}],["trust",{"_index":1684,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["try",{"_index":1319,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/UserService.html":{}}}],["tslib",{"_index":3154,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":2647,"title":{},"body":{"components/UserCardComponent.html":{}}}],["type",{"_index":220,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/Island.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"injectables/JwtService.html":{},"interfaces/Large.html":{},"pipes/LatestThreePipe.html":{},"interfaces/Loan.html":{},"pipes/LoanCompletedPipe.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"classes/StrapiDataService.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UserService.html":{},"interfaces/Villager.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/numericValidator.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type']=contenttype",{"_index":548,"title":{},"body":{"injectables/ApiService.html":{}}}],["type:string",{"_index":1981,"title":{},"body":{"interfaces/Loan.html":{}}}],["typealiases",{"_index":3281,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":2286,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["typescript",{"_index":45,"title":{},"body":{"components/AboutPage.html":{},"index.html":{}}}],["u",{"_index":2865,"title":{},"body":{"injectables/UserService.html":{}}}],["u.uuid",{"_index":2863,"title":{},"body":{"injectables/UserService.html":{}}}],["u00d1",{"_index":2278,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["u00f1",{"_index":2277,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["uid",{"_index":2774,"title":{},"body":{"injectables/UserService.html":{}}}],["un",{"_index":1477,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"index.html":{}}}],["una",{"_index":3224,"title":{},"body":{"index.html":{}}}],["unaryfunction",{"_index":1226,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["undefined",{"_index":355,"title":{},"body":{"components/AdminPage.html":{},"interfaces/ButtonConfig.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Island.html":{},"components/IslandFormComponent.html":{},"interfaces/Item.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"injectables/UserService.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{}}}],["underline",{"_index":110,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/LoginPage.html":{}}}],["unfollow",{"_index":958,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"injectables/UserService.html":{}}}],["unfollowing",{"_index":2779,"title":{},"body":{"injectables/UserService.html":{}}}],["unfollows",{"_index":2777,"title":{},"body":{"injectables/UserService.html":{}}}],["unfollowuser",{"_index":2756,"title":{},"body":{"injectables/UserService.html":{}}}],["unfollowuser(usertounfollow",{"_index":2775,"title":{},"body":{"injectables/UserService.html":{}}}],["unique",{"_index":1726,"title":{},"body":{"interfaces/Island.html":{},"interfaces/Loan.html":{}}}],["unknown",{"_index":1607,"title":{},"body":{"components/HomePage.html":{}}}],["unsubscribe",{"_index":1240,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["up",{"_index":1277,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{}}}],["update",{"_index":1360,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UserService.html":{}}}],["updated",{"_index":1133,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":1505,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["updatedfilteredusers",{"_index":2468,"title":{},"body":{"components/ProfilePage.html":{}}}],["updatedfilteredusers.filter(user",{"_index":2472,"title":{},"body":{"components/ProfilePage.html":{}}}],["updatedisland",{"_index":1597,"title":{},"body":{"components/HomePage.html":{}}}],["updatedoc",{"_index":1234,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedoc(doc(collectionref",{"_index":1362,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedoc(documentref",{"_index":1482,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedocument(collectionname",{"_index":1361,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedocumentfield(collectionname",{"_index":1473,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updateduser",{"_index":1132,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"components/ProfilePage.html":{},"injectables/UserService.html":{}}}],["updateduser.uuid",{"_index":2864,"title":{},"body":{"injectables/UserService.html":{}}}],["updatedusers",{"_index":2816,"title":{},"body":{"injectables/UserService.html":{}}}],["updatedvillagers",{"_index":3028,"title":{},"body":{"injectables/VillagerService.html":{}}}],["updatefilteredusers",{"_index":2408,"title":{},"body":{"components/ProfilePage.html":{}}}],["updateisland",{"_index":1865,"title":{},"body":{"injectables/IslandService.html":{}}}],["updateisland(is",{"_index":1879,"title":{},"body":{"injectables/IslandService.html":{}}}],["updateloan",{"_index":2109,"title":{},"body":{"injectables/LoanService.html":{}}}],["updateloan(loan",{"_index":2121,"title":{},"body":{"injectables/LoanService.html":{}}}],["updatelocalusers",{"_index":2757,"title":{},"body":{"injectables/UserService.html":{}}}],["updatelocalusers(currentuserid",{"_index":2780,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofilepictureanduser",{"_index":1111,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["updateprofilepictureanduser(updateduser",{"_index":1130,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["updates",{"_index":583,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IslandService.html":{},"components/LoanFormComponent.html":{},"injectables/LoanService.html":{},"components/ProfilePage.html":{},"injectables/UserService.html":{}}}],["updateuser",{"_index":2758,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(user",{"_index":2789,"title":{},"body":{"injectables/UserService.html":{}}}],["updating",{"_index":1560,"title":{},"body":{"components/HomePage.html":{},"components/LoansPage.html":{}}}],["upload",{"_index":1303,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["uploadbytes",{"_index":1250,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["uploadbytes(storageref",{"_index":1326,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["uploads",{"_index":1302,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["url",{"_index":434,"title":{},"body":{"components/AdminPage.html":{},"injectables/ApiService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"injectables/UserService.html":{}}}],["url(\"../../../assets/images/background_cropped.jpg",{"_index":1622,"title":{},"body":{"components/HomePage.html":{}}}],["url.createobjecturl(blob",{"_index":435,"title":{},"body":{"components/AdminPage.html":{}}}],["url.file",{"_index":2829,"title":{},"body":{"injectables/UserService.html":{}}}],["urlencoded",{"_index":1671,"title":{},"body":{"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{}}}],["urltree",{"_index":246,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["usado",{"_index":3235,"title":{},"body":{"index.html":{}}}],["use",{"_index":1032,"title":{},"body":{"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["use(language",{"_index":1051,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["useclass",{"_index":742,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":937,"title":{},"body":{"interfaces/ButtonConfig.html":{},"directives/ProgressDirective.html":{},"components/UserCardComponent.html":{}}}],["useexisting",{"_index":2359,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":737,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["user",{"_index":152,"title":{"interfaces/User.html":{}},"body":{"components/AboutPage.html":{},"guards/AdminGuard.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthStrapiService.html":{},"interfaces/ButtonConfig.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Large.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UserService.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{}}}],["user's",{"_index":1120,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/ProfilePage.html":{},"injectables/UserService.html":{}}}],["user(_user",{"_index":2691,"title":{},"body":{"components/UserFormComponent.html":{}}}],["user.completedloans",{"_index":423,"title":{},"body":{"components/AdminPage.html":{}}}],["user.dream_code",{"_index":2823,"title":{},"body":{"injectables/UserService.html":{}}}],["user.email",{"_index":1294,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user.followers",{"_index":2855,"title":{},"body":{"injectables/UserService.html":{}}}],["user.followers.filter(id",{"_index":2856,"title":{},"body":{"injectables/UserService.html":{}}}],["user.following",{"_index":2853,"title":{},"body":{"injectables/UserService.html":{}}}],["user.following.filter(id",{"_index":2854,"title":{},"body":{"injectables/UserService.html":{}}}],["user.hemisphere",{"_index":422,"title":{},"body":{"components/AdminPage.html":{}}}],["user.id",{"_index":419,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthStrapiService.html":{}}}],["user.name",{"_index":421,"title":{},"body":{"components/AdminPage.html":{}}}],["user.profile_picture",{"_index":2825,"title":{},"body":{"injectables/UserService.html":{}}}],["user.role",{"_index":261,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPage.html":{},"injectables/UserService.html":{}}}],["user.totalloans",{"_index":424,"title":{},"body":{"components/AdminPage.html":{}}}],["user.uid",{"_index":1293,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user.username",{"_index":420,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthStrapiService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["user.uuid",{"_index":389,"title":{},"body":{"components/AdminPage.html":{},"components/ProfilePage.html":{},"injectables/UserService.html":{}}}],["user:user|null",{"_index":606,"title":{},"body":{"components/AppComponent.html":{}}}],["user?.dream_code",{"_index":2639,"title":{},"body":{"components/UserCardComponent.html":{}}}],["user?.username",{"_index":2637,"title":{},"body":{"components/UserCardComponent.html":{}}}],["user_id",{"_index":891,"title":{},"body":{"injectables/AuthStrapiService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{}}}],["usercardcomponent",{"_index":151,"title":{"components/UserCardComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["usercredential",{"_index":1261,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["usercredentials",{"_index":825,"title":{"interfaces/UserCredentials.html":{}},"body":{"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/UserCredentials.html":{},"coverage.html":{}}}],["userdata",{"_index":1296,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["userdata.data[\"role",{"_index":1298,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["userform",{"_index":2678,"title":{},"body":{"components/UserFormComponent.html":{}}}],["userformcomponent",{"_index":154,"title":{"components/UserFormComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":2453,"title":{},"body":{"components/ProfilePage.html":{}}}],["userisland",{"_index":272,"title":{},"body":{"components/AdminPage.html":{}}}],["userlistcomponent",{"_index":155,"title":{"components/UserListComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":392,"title":{},"body":{"components/AdminPage.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"components/UserFormComponent.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UserService.html":{}}}],["username(value:string",{"_index":2200,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["username:string",{"_index":2610,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserRegisterInfo.html":{}}}],["userpromises",{"_index":444,"title":{},"body":{"components/AdminPage.html":{},"components/ProfilePage.html":{},"components/UserListComponent.html":{}}}],["userregisterinfo",{"_index":826,"title":{"interfaces/UserRegisterInfo.html":{}},"body":{"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/FirebaseAuthService.html":{},"components/LoginPage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{}}}],["users",{"_index":236,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthStrapiService.html":{},"interfaces/ButtonConfig.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["users!.map(async",{"_index":445,"title":{},"body":{"components/AdminPage.html":{}}}],["users.filter((user",{"_index":2480,"title":{},"body":{"components/ProfilePage.html":{}}}],["users.foreach(user",{"_index":378,"title":{},"body":{"components/AdminPage.html":{}}}],["users.push(user",{"_index":2861,"title":{},"body":{"injectables/UserService.html":{}}}],["users/${user!.uuid}/island/${is.id}/loans",{"_index":2129,"title":{},"body":{"injectables/LoanService.html":{}}}],["users?filters[user_id]=${user.id}&populate=island",{"_index":898,"title":{},"body":{"injectables/AuthStrapiService.html":{}}}],["userservice",{"_index":284,"title":{"injectables/UserService.html":{}},"body":{"components/AdminPage.html":{},"interfaces/ButtonConfig.html":{},"components/HomePage.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usersfiltered",{"_index":2858,"title":{},"body":{"injectables/UserService.html":{}}}],["usersfiltered.foreach(doc",{"_index":2860,"title":{},"body":{"injectables/UserService.html":{}}}],["userspaginated.map(doc",{"_index":2807,"title":{},"body":{"injectables/UserService.html":{}}}],["usersvc",{"_index":274,"title":{},"body":{"components/AdminPage.html":{},"components/HomePage.html":{},"components/ProfilePage.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{}}}],["usersvc:userservice",{"_index":953,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{}}}],["userswithislandinfo",{"_index":461,"title":{},"body":{"components/AdminPage.html":{}}}],["usertofollow",{"_index":2767,"title":{},"body":{"injectables/UserService.html":{}}}],["usertofollow.followers",{"_index":2842,"title":{},"body":{"injectables/UserService.html":{}}}],["usertofollow.uuid",{"_index":2839,"title":{},"body":{"injectables/UserService.html":{}}}],["usertounfollow",{"_index":2778,"title":{},"body":{"injectables/UserService.html":{}}}],["usertounfollow.followers.filter(uuid",{"_index":2851,"title":{},"body":{"injectables/UserService.html":{}}}],["usertounfollow.uuid",{"_index":2850,"title":{},"body":{"injectables/UserService.html":{}}}],["useruuid",{"_index":2415,"title":{},"body":{"components/ProfilePage.html":{}}}],["useruuids",{"_index":1023,"title":{},"body":{"interfaces/ButtonConfig.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{}}}],["usevalue",{"_index":740,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":584,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{}}}],["usuario",{"_index":2847,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["utilizadas",{"_index":3229,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":337,"title":{},"body":{"components/AdminPage.html":{},"injectables/FirebaseAuthService.html":{},"injectables/IslandService.html":{},"injectables/LoanService.html":{},"components/ProfilePage.html":{},"interfaces/User.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["uuid?:string",{"_index":2609,"title":{},"body":{"interfaces/User.html":{}}}],["uuids",{"_index":2728,"title":{},"body":{"components/UserListComponent.html":{}}}],["valid",{"_index":3270,"title":{},"body":{"classes/numericValidator.html":{}}}],["validates",{"_index":3258,"title":{},"body":{"classes/numericValidator.html":{}}}],["validation",{"_index":2271,"title":{},"body":{"classes/PasswordValidation.html":{},"classes/numericValidator.html":{}}}],["validationerrors",{"_index":2273,"title":{},"body":{"classes/PasswordValidation.html":{},"classes/numericValidator.html":{}}}],["validator",{"_index":2260,"title":{},"body":{"classes/PasswordValidation.html":{},"classes/numericValidator.html":{}}}],["validatorfn",{"_index":2264,"title":{},"body":{"classes/PasswordValidation.html":{},"classes/numericValidator.html":{}}}],["validators",{"_index":1816,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserFormComponent.html":{}}}],["validators.min(0",{"_index":2061,"title":{},"body":{"components/LoanFormComponent.html":{}}}],["validators.required",{"_index":1829,"title":{},"body":{"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserFormComponent.html":{}}}],["value",{"_index":354,"title":{},"body":{"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthStrapiService.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"injectables/JwtService.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"injectables/LoanService.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/UserCardComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"classes/numericValidator.html":{},"miscellaneous/variables.html":{}}}],["value.charat(0).touppercase",{"_index":1410,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["value.slice(1).tolowercase",{"_index":1411,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["values",{"_index":2047,"title":{},"body":{"components/LoanFormComponent.html":{},"components/UserFormComponent.html":{}}}],["var",{"_index":59,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/ButtonConfig.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["variable",{"_index":3058,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3286,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":3276,"title":{},"body":{"properties.html":{}}}],["vertical",{"_index":662,"title":{},"body":{"components/AppComponent.html":{}}}],["video",{"_index":3251,"title":{},"body":{"index.html":{}}}],["view",{"_index":1545,"title":{},"body":{"components/HomePage.html":{}}}],["viewchild",{"_index":1920,"title":{},"body":{"interfaces/Item.html":{},"components/ProfilePage.html":{},"components/VillagersPage.html":{}}}],["viewencapsulation",{"_index":2447,"title":{},"body":{"components/ProfilePage.html":{}}}],["viewencapsulation.none",{"_index":2398,"title":{},"body":{"components/ProfilePage.html":{}}}],["views",{"_index":1542,"title":{},"body":{"components/HomePage.html":{}}}],["villager",{"_index":160,"title":{"interfaces/Villager.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"interfaces/Island.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"interfaces/Villager.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"coverage.html":{}}}],["villager'},{'name",{"_index":158,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["villager():villager|undefined",{"_index":2910,"title":{},"body":{"components/VillagerItemComponent.html":{}}}],["villager(_villager:villager|undefined",{"_index":2907,"title":{},"body":{"components/VillagerItemComponent.html":{}}}],["villager.attributes.name",{"_index":448,"title":{},"body":{"components/AdminPage.html":{}}}],["villager.attributes.species",{"_index":450,"title":{},"body":{"components/AdminPage.html":{}}}],["villager.component.html",{"_index":2878,"title":{},"body":{"components/VillagerComponent.html":{}}}],["villager.component.scss",{"_index":2877,"title":{},"body":{"components/VillagerComponent.html":{}}}],["villager.service",{"_index":1891,"title":{},"body":{"injectables/IslandService.html":{}}}],["villager1",{"_index":1830,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["villager10",{"_index":1839,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["villager10_name",{"_index":415,"title":{},"body":{"components/AdminPage.html":{}}}],["villager10_species",{"_index":416,"title":{},"body":{"components/AdminPage.html":{}}}],["villager1_name",{"_index":397,"title":{},"body":{"components/AdminPage.html":{}}}],["villager1_species",{"_index":398,"title":{},"body":{"components/AdminPage.html":{}}}],["villager2",{"_index":1831,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["villager2_name",{"_index":399,"title":{},"body":{"components/AdminPage.html":{}}}],["villager2_species",{"_index":400,"title":{},"body":{"components/AdminPage.html":{}}}],["villager3",{"_index":1832,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["villager3_name",{"_index":401,"title":{},"body":{"components/AdminPage.html":{}}}],["villager3_species",{"_index":402,"title":{},"body":{"components/AdminPage.html":{}}}],["villager4",{"_index":1833,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["villager4_name",{"_index":403,"title":{},"body":{"components/AdminPage.html":{}}}],["villager4_species",{"_index":404,"title":{},"body":{"components/AdminPage.html":{}}}],["villager5",{"_index":1834,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["villager5_name",{"_index":405,"title":{},"body":{"components/AdminPage.html":{}}}],["villager5_species",{"_index":406,"title":{},"body":{"components/AdminPage.html":{}}}],["villager6",{"_index":1835,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["villager6_name",{"_index":407,"title":{},"body":{"components/AdminPage.html":{}}}],["villager6_species",{"_index":408,"title":{},"body":{"components/AdminPage.html":{}}}],["villager7",{"_index":1836,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["villager7_name",{"_index":409,"title":{},"body":{"components/AdminPage.html":{}}}],["villager7_species",{"_index":410,"title":{},"body":{"components/AdminPage.html":{}}}],["villager8",{"_index":1837,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["villager8_name",{"_index":411,"title":{},"body":{"components/AdminPage.html":{}}}],["villager8_species",{"_index":412,"title":{},"body":{"components/AdminPage.html":{}}}],["villager9",{"_index":1838,"title":{},"body":{"components/IslandFormComponent.html":{}}}],["villager9_name",{"_index":413,"title":{},"body":{"components/AdminPage.html":{}}}],["villager9_species",{"_index":414,"title":{},"body":{"components/AdminPage.html":{}}}],["villager:any",{"_index":2880,"title":{},"body":{"components/VillagerComponent.html":{}}}],["villager:villager",{"_index":2975,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["villager?.attributes.birthday_day",{"_index":2890,"title":{},"body":{"components/VillagerComponent.html":{}}}],["villager?.attributes.birthday_month",{"_index":2889,"title":{},"body":{"components/VillagerComponent.html":{}}}],["villager?.attributes.name",{"_index":2883,"title":{},"body":{"components/VillagerComponent.html":{}}}],["villager?.attributes.personality",{"_index":2886,"title":{},"body":{"components/VillagerComponent.html":{}}}],["villager?.attributes.species",{"_index":2882,"title":{},"body":{"components/VillagerComponent.html":{}}}],["villager?.attributes?.name",{"_index":2912,"title":{},"body":{"components/VillagerItemComponent.html":{}}}],["villager_selectable_value_accesor",{"_index":2915,"title":{},"body":{"components/VillagerSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["villagercomponent",{"_index":157,"title":{"components/VillagerComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["villageritemcomponent",{"_index":159,"title":{"components/VillagerItemComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{}}}],["villagerpromises",{"_index":1900,"title":{},"body":{"injectables/IslandService.html":{}}}],["villagers",{"_index":163,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"interfaces/Island.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"modules/VillagersPageModule.html":{}}}],["villagers.birthday",{"_index":2887,"title":{},"body":{"components/VillagerComponent.html":{}}}],["villagers.months",{"_index":2888,"title":{},"body":{"components/VillagerComponent.html":{}}}],["villagers.page",{"_index":3052,"title":{},"body":{"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{}}}],["villagers.page.html",{"_index":1924,"title":{},"body":{"interfaces/Item.html":{},"components/VillagersPage.html":{}}}],["villagers.page.scss",{"_index":1925,"title":{},"body":{"interfaces/Item.html":{},"components/VillagersPage.html":{}}}],["villagers.personalities",{"_index":2885,"title":{},"body":{"components/VillagerComponent.html":{}}}],["villagers.personality",{"_index":2884,"title":{},"body":{"components/VillagerComponent.html":{}}}],["villagers.push(villager",{"_index":3034,"title":{},"body":{"injectables/VillagerService.html":{}}}],["villagers.species",{"_index":2881,"title":{},"body":{"components/VillagerComponent.html":{}}}],["villagers:villager",{"_index":1731,"title":{},"body":{"interfaces/Island.html":{},"components/VillagerSelectableComponent.html":{}}}],["villagerselectablecomponent",{"_index":161,"title":{"components/VillagerSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["villagerselected",{"_index":2916,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["villagerselected.attributes.name",{"_index":2984,"title":{},"body":{"components/VillagerSelectableComponent.html":{}}}],["villagerservice",{"_index":1783,"title":{"injectables/VillagerService.html":{}},"body":{"components/IslandFormComponent.html":{},"injectables/IslandService.html":{},"interfaces/Item.html":{},"components/VillagerSelectableComponent.html":{},"injectables/VillagerService.html":{},"components/VillagersPage.html":{},"coverage.html":{}}}],["villagersfiltered",{"_index":3031,"title":{},"body":{"injectables/VillagerService.html":{}}}],["villagersfiltered.foreach(doc",{"_index":3033,"title":{},"body":{"injectables/VillagerService.html":{}}}],["villagerspage",{"_index":162,"title":{"components/VillagersPage.html":{}},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"interfaces/Item.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{},"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["villagerspagemodule",{"_index":3046,"title":{"modules/VillagersPageModule.html":{}},"body":{"modules/VillagersPageModule.html":{},"modules.html":{},"overview.html":{}}}],["villagerspageroutingmodule",{"_index":3050,"title":{"modules/VillagersPageRoutingModule.html":{}},"body":{"modules/VillagersPageModule.html":{},"modules/VillagersPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["villagerspaginated.map(doc",{"_index":3008,"title":{},"body":{"injectables/VillagerService.html":{}}}],["virtualscrollermodule",{"_index":2585,"title":{},"body":{"modules/SharedModule.html":{},"modules/VillagersPageModule.html":{}}}],["visible",{"_index":1764,"title":{},"body":{"components/IslandComponent.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"injectables/AuthStrapiService.html":{},"directives/BackgroundBlurDirective.html":{},"interfaces/ButtonConfig.html":{},"injectables/CustomTranslateService.html":{},"injectables/FirebaseAuthService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"classes/HttpClientWebProvider.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"interfaces/Item.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginFormComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{},"components/VillagersPage.html":{}}}],["web.provider",{"_index":691,"title":{},"body":{"modules/AppModule.html":{}}}],["web.provider.ts",{"_index":1688,"title":{},"body":{"classes/HttpClientWebProvider.html":{},"coverage.html":{}}}],["web.provider.ts:11",{"_index":1692,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["web.provider.ts:162",{"_index":1697,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["web.provider.ts:180",{"_index":1694,"title":{},"body":{"classes/HttpClientWebProvider.html":{}}}],["webdir",{"_index":3296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":100,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanComponent.html":{},"components/LoanFormComponent.html":{},"components/LoanItemComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/UserCardComponent.html":{},"components/VillagerComponent.html":{}}}],["where(field",{"_index":1405,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["whether",{"_index":232,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"injectables/UserService.html":{},"components/VillagerSelectableComponent.html":{}}}],["white",{"_index":476,"title":{},"body":{"components/AdminPage.html":{},"components/AppComponent.html":{},"components/IslandFormComponent.html":{},"components/LoanFormComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["whose",{"_index":1877,"title":{},"body":{"injectables/IslandService.html":{},"injectables/LoanService.html":{},"components/UserListComponent.html":{}}}],["width",{"_index":74,"title":{},"body":{"components/AboutPage.html":{},"components/AdminPage.html":{},"components/AppComponent.html":{},"interfaces/Formats.html":{},"components/HomePage.html":{},"components/IslandComponent.html":{},"interfaces/Large.html":{},"components/LoanComponent.html":{},"components/LoanItemComponent.html":{},"components/LoansPage.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"components/PictureSelectableComponent.html":{},"components/ProfilePage.html":{},"directives/ProgressDirective.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterFormComponent.html":{},"components/RegisterPage.html":{},"interfaces/Small.html":{},"interfaces/StrapiArrayResponse.html":{},"interfaces/StrapiData.html":{},"interfaces/StrapiExtendedUser.html":{},"interfaces/StrapiLoginPayload.html":{},"interfaces/StrapiLoginResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiRegisterPayload.html":{},"interfaces/StrapiResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/Thumbnail.html":{},"components/UserCardComponent.html":{},"components/UserFormComponent.html":{},"components/UserListComponent.html":{},"components/VillagerComponent.html":{},"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["width:3vw",{"_index":2913,"title":{},"body":{"components/VillagerItemComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["width:6rem",{"_index":1770,"title":{},"body":{"components/IslandComponent.html":{}}}],["without",{"_index":2687,"title":{},"body":{"components/UserFormComponent.html":{},"components/UserListComponent.html":{}}}],["wrap",{"_index":482,"title":{},"body":{"components/AdminPage.html":{},"components/IslandComponent.html":{},"components/LoansPage.html":{},"components/ProfilePage.html":{},"components/VillagersPage.html":{}}}],["write",{"_index":2350,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["writes",{"_index":2348,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["writevalue",{"_index":2311,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["writevalue(obj",{"_index":2346,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/VillagerSelectableComponent.html":{}}}],["www",{"_index":1723,"title":{},"body":{"classes/HttpClientWebProvider.html":{},"miscellaneous/variables.html":{}}}],["y",{"_index":3198,"title":{},"body":{"index.html":{}}}],["yes",{"_index":1673,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["z",{"_index":1630,"title":{},"body":{"components/HomePage.html":{},"components/IslandComponent.html":{},"components/LoansPage.html":{},"classes/PasswordValidation.html":{}}}],["zone.js",{"_index":3156,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":185,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AdminPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoansPageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/VillagersPageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/about/about.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/about/about.page.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n      \n      \n        \n          \n            \n              \n                \n                  {{ 'about.projectTitle' | translate }}\n                \n              \n            \n            \n              \n                {{ 'about.projectText' | translate }}\n              \n              \n                {{ 'about.functionalities' | translate}}\n                \n                  {{ 'about.characters' | translate }}\n                  {{ 'about.island' | translate }}\n                  {{ 'about.loans' | translate }}\n                  {{ 'about.trans' | translate }}\n                \n              \n              \n                {{ 'about.technologies' | translate}}\n                Front-end: Typescript, Ionic, Angular, HTML, CSS\n                Back-end: Firebase\n              \n            \n            \n              \n                \n                  \n                  GitHub\n                \n              \n            \n          \n        \n\n      \n\n    \n\n  \n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                ion-content {\n    min-height: 100vh;\n    background: var(--ion-background-color);\n    \n}\n\n.container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\nion-card {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    height: 600px;\n    width: 100vh;\n    padding: 0;\n    margin-top: -2rem;\n    background-color: var(--ion-background-color);\n    border-radius: 20px;\n    box-shadow: 0px 5px 60px rgba(0, 0, 0, 0.296); \n}\n\n.github {\n    display: flex;  \n    justify-content: center;\n}\n\n\n.img {\n    margin: 0;\n    padding: 0;\n}\n\n.img img {\n    height: 600px;\n    width: 600px;\n}\n\n.form {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n}\n\n.info {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: justify;\n    margin:2rem;\n    gap: 2rem;\n}\n\n\n\nh1 {\n    color: var(--ion-color-secondary);\n    font-weight: bold;\n    text-align: center;\n    margin: 0;\n    padding: 0;\n}\n\nh2 {\n    color: var(--ion-color-secondary-tint);\n    font-weight: bold;\n    \n}\n\nion-card-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\n.link-text {\n    text-decoration: none;\n    color: var(--ion-color-secondary);\n    cursor: pointer;\n}\n\n.link-text:hover {\n    text-decoration: underline;\n}\n\n@media only screen and (width\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                              {{ \\'about.projectTitle\\' | translate }}                                                                                    {{ \\'about.projectText\\' | translate }}                                            {{ \\'about.functionalities\\' | translate}}                                  {{ \\'about.characters\\' | translate }}                  {{ \\'about.island\\' | translate }}                  {{ \\'about.loans\\' | translate }}                  {{ \\'about.trans\\' | translate }}                                                            {{ \\'about.technologies\\' | translate}}                Front-end: Typescript, Ionic, Angular, HTML, CSS                Back-end: Firebase                                                                                                        GitHub                                                                        '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAboutPageModule -->\n\nSharedModule->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AboutPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AboutPageRoutingModule } from './about-routing.module';\n\nimport { AboutPage } from './about.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AboutPageRoutingModule,\n    SharedModule\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageRoutingModule.html":{"url":"modules/AboutPageRoutingModule.html","title":"module - AboutPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageRoutingModule\n\n\n\ncluster_AboutPageRoutingModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule -->\n\nSharedModule->AboutPageRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AboutPage } from './about.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes), SharedModule],\n  exports: [RouterModule],\n})\nexport class AboutPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: FirebaseAuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/admin.guard.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor of AdminGuard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        FirebaseAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Firebase authentication service.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular router service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/admin.guard.ts:28\n                        \n                    \n\n\n            \n                \n                        Determines whether a route can be activated.\nAdmin users are allowed access; non-admin users are redirected to login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The route snapshot that is being activated.\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The router state snapshot.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, map } from 'rxjs';\nimport { FirebaseAuthService } from '../services/api/firebase/firebase-auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n/**\n   * Constructor of AdminGuard.\n   * @param auth  Firebase authentication service.\n   * @param router  Angular router service.\n   */\n  constructor(\n    private auth:FirebaseAuthService,\n    private router:Router\n  ) {}\n\n  /**\n   * Determines whether a route can be activated.\n   * Admin users are allowed access; non-admin users are redirected to login.\n   * @param route The route snapshot that is being activated.\n   * @param state The router state snapshot.\n   * @returns {Observable | Promise | boolean | UrlTree} \n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      \n      return this.auth.user$.pipe(\n        map(user => {\n          if (!user || user.role !== 'admin') {\n            localStorage.setItem('returnUrl', state.url); \n            return this.router.parseUrl('/login?returnUrl=' + state.url);\n          }\n          return true;\n        })\n      );\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminPage.html":{"url":"components/AdminPage.html","title":"component - AdminPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/admin/admin.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n\n\n            \n                styleUrls\n                ./admin.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredUsers\n                            \n                            \n                                showAll\n                            \n                            \n                                userIsland\n                            \n                            \n                                users$\n                            \n                            \n                                    Public\n                                userSvc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToCSV\n                            \n                            \n                                doInfinite\n                            \n                            \n                                    Async\n                                downloadCSV\n                            \n                            \n                                downloadCSVFile\n                            \n                            \n                                goToUserPage\n                            \n                            \n                                    Private\n                                loadIslandsForUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userSvc: UserService, islandSvc: IslandService, loanSvc: LoanService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/admin/admin.page.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        islandSvc\n                                                  \n                                                        \n                                                                        IslandService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loanSvc\n                                                  \n                                                        \n                                                                        LoanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertToCSV\n                        \n                    \n                \n            \n            \n                \nconvertToCSV(data: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/admin/admin.page.ts:96\n                        \n                    \n\n\n            \n                \n                        Converts the user data into CSV format for download.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The array of user data objects to be converted into CSV.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A string containing CSV formatted data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doInfinite\n                        \n                    \n                \n            \n            \n                \ndoInfinite(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/admin/admin.page.ts:47\n                        \n                    \n\n\n            \n                \n                        Handles the infinite scroll event to fetch more users.\nLoads islands for each additional user fetched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event triggered when scrolling reaches the bottom.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        downloadCSV\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadCSV()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/admin/admin.page.ts:165\n                        \n                    \n\n\n            \n                \n                        Initiates the CSV download process by fetching user and island data.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadCSVFile\n                        \n                    \n                \n            \n            \n                \ndownloadCSVFile(csvContent: string, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/admin/admin.page.ts:148\n                        \n                    \n\n\n            \n                \n                        Downloads the CSV file with userS data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                csvContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The CSV content to be downloaded.\n\n                                            \n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The name of the CSV file to be downloaded.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToUserPage\n                        \n                    \n                \n            \n            \n                \ngoToUserPage(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/admin/admin.page.ts:86\n                        \n                    \n\n\n            \n                \n                        Navigates to the user profile page for the specified user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user object containing the UUID for navigation.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadIslandsForUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadIslandsForUsers(users: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/admin/admin.page.ts:58\n                        \n                    \n\n\n            \n                \n                        Loads island information for each user in the provided array.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                users\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The array of users for whom islands are to be loaded.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/admin/admin.page.ts:34\n                        \n                    \n\n\n            \n                \n                        Fetches paginated users from UserService and initializes the component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFilter\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFilter(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/admin/admin.page.ts:72\n                        \n                    \n\n\n            \n                \n                        Handles the user filtering based on the search input value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event containing the search input value.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[] | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/admin/admin.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/admin/admin.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userIsland\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/admin/admin.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/admin/admin.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/admin/admin.page.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, forkJoin } from 'rxjs';\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { User } from 'src/app/core/interfaces/user';\nimport { IslandService } from 'src/app/core/services/island.service';\nimport { LoanService } from 'src/app/core/services/loan.service';\nimport { UserService } from 'src/app/core/services/user.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.page.html',\n  styleUrls: ['./admin.page.scss'],\n})\nexport class AdminPage implements OnInit {\n\n  users$: Observable | undefined;\n  userIsland: { [key: string]: any } = {};\n\n  filteredUsers: User[] | undefined;\n  showAll:boolean = true;\n\n\n  constructor(\n    public userSvc: UserService,\n    private islandSvc: IslandService,\n    private loanSvc: LoanService,\n    private router:Router\n  ) { }\n\n   /**\n     * Fetches paginated users from UserService and initializes the component.\n     */\n  ngOnInit() {\n    this.userSvc.getPaginatedUsers().subscribe();\n\n    this.loanSvc.getUserLoanById(\"3G4bf9jdpcW4LVQnBgX7G1er0u02\").subscribe(loans => {\n      console.log(loans)\n    })\n  }\n\n   /**\n   * Handles the infinite scroll event to fetch more users.\n   * Loads islands for each additional user fetched.\n   * @param event The event triggered when scrolling reaches the bottom.\n   */\n  doInfinite(event: any) {\n    this.userSvc.getPaginatedUsers().subscribe(users => {\n      this.loadIslandsForUsers(users);\n      event.target.complete();\n    });\n  }\n\n  /**\n   * Loads island information for each user in the provided array.\n   * @param users The array of users for whom islands are to be loaded.\n   */\n  private loadIslandsForUsers(users: any[]) {\n    users.forEach(user => {\n      if (user.role !== 'admin' && !this.userIsland[user.uuid]) {\n        this.islandSvc.getUserIslandById(user.uuid).subscribe(island => {\n          this.userIsland[user.uuid] = island;\n        });\n      }\n    });\n  }\n\n  /**\n   * Handles the user filtering based on the search input value.\n   * @param event The event containing the search input value.\n   */\n  async onFilter(event: any) {\n    if (event.detail.value === '') {\n      this.filteredUsers = []\n      this.showAll = true;\n    } else {\n      this.filteredUsers = await this.userSvc.getFiltered(event.detail.value)\n      this.showAll = false;\n    }\n  }\n\n   /**\n   * Navigates to the user profile page for the specified user.\n   * @param user The user object containing the UUID for navigation.\n   */\n  goToUserPage(user:any) {\n    this.router.navigate(['/profile/' + user.uuid])\n  }\n\n\n/**\n   * Converts the user data into CSV format for download.\n   * @param data The array of user data objects to be converted into CSV.\n   * @returns A string containing CSV formatted data.\n   */\n  convertToCSV(data: any[]): string {\n    const header = [\n      \"id\",\n      \"username\",\n      \"island_name\",\n      \"hemisphere\",\n      \"completed_loans\",\n      \"total_loans\",\n      \"villager1_name\", \"villager1_species\",\n      \"villager2_name\", \"villager2_species\",\n      \"villager3_name\", \"villager3_species\",\n      \"villager4_name\", \"villager4_species\",\n      \"villager5_name\", \"villager5_species\",\n      \"villager6_name\", \"villager6_species\",\n      \"villager7_name\", \"villager7_species\",\n      \"villager8_name\", \"villager8_species\",\n      \"villager9_name\", \"villager9_species\",\n      \"villager10_name\", \"villager10_species\"\n    ];\n\n    const rows = data.map(user => {\n      const row = [\n        user.id,\n        user.username,\n        user.name || \"\",\n        user.hemisphere || \"\",\n        user.completedLoans,\n        user.totalLoans\n      ];\n      for (let i = 0; i  row.join(\",\"))\n    ].join(\"\\n\");\n\n    return csvContent;\n  }\n\n    /**\n   * Downloads the CSV file with userS data.\n   * @param csvContent The CSV content to be downloaded.\n   * @param filename The name of the CSV file to be downloaded.\n   */\n  downloadCSVFile(csvContent: string, filename: string) {\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement(\"a\");\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", filename);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }\n\n  /**\n   * Initiates the CSV download process by fetching user and island data.\n   */\n  async downloadCSV() {\n    const users = await this.userSvc.getAllUsers().toPromise();\n    const userPromises = users!.map(async user => {\n      const island = await this.islandSvc.getUserIslandById(user.uuid!).toPromise();\n      const villagers = island?.attributes?.villagers?.map(villager => ({\n        name: villager.attributes.name,\n        species: villager.attributes.species\n      })) || [];\n      const loans = await this.loanSvc.getUserLoanById(user.uuid!).toPromise();\n      console.log(user, loans)\n      const completedLoans = loans!.filter(loan => loan.attributes.completed).length;\n      const totalLoans = loans!.length;\n      return {\n        id: user.uuid,\n        username: user.username,\n        name: island?.attributes?.name || \"\",\n        hemisphere: island?.attributes?.hemisphere || \"\",\n        villagers: villagers,\n        completedLoans: completedLoans,\n        totalLoans: totalLoans\n      };\n    });\n    const usersWithIslandInfo = (await Promise.all(userPromises)).filter(user => user !== null);\n    const csvContent = this.convertToCSV(usersWithIslandInfo);\n    this.downloadCSVFile(csvContent, 'nooks_toolbox_data.csv');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{'admin.csv-span' | translate }}\n      {{'admin.csv-download' | translate }}\n    \n\n    \n\n    \n      \n      \n    \n\n    \n      \n        \n            \n            \n        \n      \n    \n\n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./admin.page.scss\n                \n                .body {\n    padding: 2rem;\n}\n\n.csv-container {\n    background-color: var(--ion-color-secondary-tint);\n    height: 5rem;\n    padding: 2rem;\n    border-radius: 25px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    span {\n        font-size: 1.25rem;\n        color: white;\n    }\n\n    .custom-button {\n        --background: white !important;\n        height: 2.5rem !important;\n        --color: var(--ion-color-secondary);\n        --border-color: var(--ion-color-secondary);\n    }\n}\n\n.filtered-users {\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n}\n\n.users {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    padding: 2rem;\n}\n\n\np-divider {\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{\\'admin.csv-span\\' | translate }}      {{\\'admin.csv-download\\' | translate }}                                                                                                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminPageModule.html":{"url":"modules/AdminPageModule.html","title":"module - AdminPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminPageModule\n\n\n\ncluster_AdminPageModule_declarations\n\n\n\ncluster_AdminPageModule_imports\n\n\n\n\nAdminPage\n\nAdminPage\n\n\n\nAdminPageModule\n\nAdminPageModule\n\nAdminPageModule -->\n\nAdminPage->AdminPageModule\n\n\n\n\n\nAdminPageRoutingModule\n\nAdminPageRoutingModule\n\nAdminPageModule -->\n\nAdminPageRoutingModule->AdminPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminPageModule -->\n\nSharedModule->AdminPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminPageRoutingModule } from './admin-routing.module';\n\nimport { AdminPage } from './admin.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DividerModule } from 'primeng/divider';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AdminPageRoutingModule,\n    SharedModule,\n    DividerModule,\n  ],\n  declarations: [AdminPage]\n})\nexport class AdminPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminPageRoutingModule.html":{"url":"modules/AdminPageRoutingModule.html","title":"module - AdminPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/admin/admin-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminPage } from './admin.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getDataFromUrl\n                            \n                            \n                                getHeader\n                            \n                            \n                                getImage\n                            \n                            \n                                patch\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClientProvider, jwt: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClientProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(path: string, params: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/api.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                params\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(path: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/api.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataFromUrl\n                        \n                    \n                \n            \n            \n                \ngetDataFromUrl(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/api.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeader\n                        \n                    \n                \n            \n            \n                \ngetHeader(url: string, accept: null, contentType: null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/api.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                accept\n                                            \n                                                        null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                contentType\n                                            \n                                                        null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getImage\n                        \n                    \n                \n            \n            \n                \ngetImage(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/api.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patch\n                        \n                    \n                \n            \n            \n                \npatch(path: string, body: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/api.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(path: string, body: Object, content_type: null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/api.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                content_type\n                                            \n                                                        null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(path: string, body: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/api.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { HttpClientProvider } from '../http/http-client.provider copy';\nimport { JwtService } from './strapi/jwt.service';\n\n\n@Injectable({providedIn: 'root'})\nexport class ApiService {\n  constructor(\n    private http:HttpClientProvider,\n    private jwt:JwtService\n  ) {\n    this.http.get\n  }\n  \n  getHeader(url:string, accept = null, contentType=null){\n    var header:any = {};\n    if(accept)\n      header['Accept'] = accept;\n    if(contentType)\n      header['Content-Type']=contentType;\n    if(!url.includes('auth'))\n      header['Authorization']=`Bearer ${this.jwt.getToken()}`;\n    return header;\n  }\n\n  getImage(url:string):Observable{    \n    return this.http.getImage(url);\n  }\n\n  getDataFromUrl(url:string):Observable{    \n    return this.http.get(url, {}, this.getHeader(url));\n  }\n\n  get(path:string, params:any = {}):Observable{\n    var url = `${environment.apiUrl}${path}`;\n    \n    return this.http.get(url, params, this.getHeader(url));\n  }\n  \n  put(path: string, body: Object = {}): Observable {\n    var url = `${environment.apiUrl}${path}`;\n    return this.http.put(url,body, this.getHeader(url));\n  }\n  \n  post(path: string, body: Object = {}, content_type=null): Observable {\n    var url = `${environment.apiUrl}${path}`;\n    return this.http.post(url,body, this.getHeader(url));\n  }\n  \n  patch(path: string, body: Object = {}): Observable {\n    var url = `${environment.apiUrl}${path}`;\n    return this.http.patch(url, body, this.getHeader(url));\n  }\n\n  delete(path:string, params:Object = {}): Observable {\n    var url = `${environment.apiUrl}${path}`;\n    return this.http.delete(url, params, this.getHeader(url));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                fbAuth\n                            \n                            \n                                lang\n                            \n                            \n                                showNavbar\n                            \n                            \n                                    Public\n                                translate\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onLang\n                            \n                            \n                                onSignOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router, translate: CustomTranslateService, fbAuth: FirebaseAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fbAuth\n                                                  \n                                                        \n                                                                        FirebaseAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onLang\n                        \n                    \n                \n            \n            \n                \nonLang(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Changes the application language.\nUpdates the language using CustomTranslateService and sets the new language.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new language to set.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSignOut\n                        \n                    \n                \n            \n            \n                \nonSignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Handles the sign-out process.\nCalls the logout method from AuthService, navigates to the login page, and sets the user to null.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fbAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseAuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"es\"\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNavbar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomTranslateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { User } from './core/interfaces/user';\nimport { AuthService } from './core/services/api/strapi/auth.service';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { CustomTranslateService } from './core/services/custom-translate.service';\nimport { FirebaseAuthService } from './core/services/api/firebase/firebase-auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n  showNavbar:boolean = true;\n  lang:string = \"es\";\n  user:User|null = null;\n  constructor(\n    public auth:AuthService,\n    private router:Router,\n    public translate:CustomTranslateService,\n    public fbAuth: FirebaseAuthService,\n  ) {\n\n    const returnUrl = localStorage.getItem('returnUrl');\n    console.log(\"url\", returnUrl)\n    if (returnUrl && this.auth.isLogged$) {\n      localStorage.removeItem('returnUrl');\n      this.router.navigateByUrl(returnUrl);\n    }\n    this.fbAuth.user$.subscribe(user => {\n      this.user =user;\n      if(user?.role == 'banned') {\n        this.onSignOut();\n      }\n      console.log(\"app user\", this.user)\n      \n    })\n    this.lang = this.translate.getBrowserLang();\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.showNavbar = !['/login', '/register'].includes(event.urlAfterRedirects);\n      } });\n  }\n\n  /**\n   * Handles the sign-out process.\n   * Calls the logout method from AuthService, navigates to the login page, and sets the user to null.\n   */\n  onSignOut(){\n    this.auth.logout().subscribe(_=>{\n      this.router.navigate(['/login']);\n      this.user = null;\n    });\n  }\n    /**\n   * Changes the application language.\n   * Updates the language using CustomTranslateService and sets the new language.\n   * @param lang The new language to set.\n   */\n  onLang(lang:string){\n    this.lang = lang;\n    this.translate.use(this.lang);\n    return false;    \n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n      \n        {{ 'menu.menu' | translate }}\n      \n    \n    \n      \n        \n          \n            {{ 'menu.home' | translate }}\n          \n          \n            {{ 'menu.loans' | translate }}\n          \n          \n            {{ 'menu.villagers' | translate }}\n          \n          \n            {{ 'menu.about' | translate }}\n          \n          \n            {{ 'menu.admin' | translate }} \n          \n          \n            \n            Cambiar Idioma a ES\n          \n          \n            \n            Change Language to EN\n          \n          \n            \n            Schimbă limba la ROM\n          \n          \n            \n            {{ 'menu.logout' | translate }}\n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n          Nook's toolbox\n        \n        \n          \n            \n              \n              \n            \n          \n          \n        \n      \n    \n\n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                .link-text {\n    padding: 10px;\n    text-decoration: none;\n    color: var(--ion-background-color);\n    cursor: pointer;\n}\n\n.user-icon{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.link-text:hover {\n    color: var(--ion-color-primary);\n    text-decoration: underline;\n}\n\n.navbar {\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1);\n    ;\n}\n\nion-button {\n    color: var(--ion-background-color);\n}\n\nion-menu-button {\n    color: white;\n}\n\n.toolbar-icon {\n    height: auto;\n    max-height: 40px;\n    object-fit: contain;\n    vertical-align: middle;\n\n}\n\n.page-header {\n    --background: var(--ion-color-secondary) !important;\n    ion-item {\n        color: white;\n    }\n}\n\n.menu-link:hover {\n    --color: var(--ion-color-secondary) !important;\n}\n\nion-title {\n    color: var(--ion-background-color);\n}\n\n\n.custom-avatar {\n    width: 35px;\n    height: 35px;\n    color: white;\n\n    ion-icon,\n    img {\n        color: white;\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ \\'menu.menu\\' | translate }}                                                  {{ \\'menu.home\\' | translate }}                                {{ \\'menu.loans\\' | translate }}                                {{ \\'menu.villagers\\' | translate }}                                {{ \\'menu.about\\' | translate }}                                {{ \\'menu.admin\\' | translate }}                                             Cambiar Idioma a ES                                            Change Language to EN                                            Schimbă limba la ROM                                            {{ \\'menu.logout\\' | translate }}                                                                      Nook\\'s toolbox                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { IonicModule, IonicRouteStrategy, Platform } from '@ionic/angular';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { HttpClientWebProvider } from './core/services/http/http-client-web.provider';\nimport { ApiService } from './core/services/api/api.service';\nimport { JwtService } from './core/services/api/strapi/jwt.service';\nimport { DataService } from './core/services/api/strapi/data.service';\nimport { StrapiDataService } from './core/services/api/strapi/strapi-data.service';\nimport { SharedModule } from './shared/shared.module';\nimport { AuthService } from './core/services/api/strapi/auth.service';\nimport { AuthStrapiService } from './core/services/api/strapi/auth-strapi.service';\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { createTranslateLoader } from './core/services/custom-translate.service';\nimport { FirebaseService } from './core/services/api/firebase/firebase.service';\nimport { FirebaseAuthService } from './core/services/api/firebase/firebase-auth.service';\nimport { environment } from 'src/environments/environment';\nimport { TabViewModule } from 'primeng/tabview';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\nimport { HttpClientProvider } from './core/services/http/http-client.provider copy';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nexport function httpProviderFactory(http: HttpClient) {\n  return new HttpClientWebProvider(http);\n}\n\nexport function AuthServiceFactory(\n  backend: string,\n  jwt: JwtService,\n  api: ApiService,\n  firebase: FirebaseService,\n  messageService: MessageService,\n  translate: TranslateService\n) {\n  switch (backend) {\n    case 'Strapi':\n      return new AuthStrapiService(jwt, api);\n    case 'Firebase':\n      return new FirebaseAuthService(firebase, messageService, translate);\n    default:\n      throw new Error(\"Not implemented\");\n  }\n}\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    HttpClientModule,\n    SharedModule,\n    TabViewModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    }),\n    ToastModule,\n    BrowserAnimationsModule,\n    SharedModule\n  ],\n  providers: [\n    {\n      provide: 'firebase-config',\n      useValue: environment.firebase\n    },\n    {\n      provide: 'backend',\n      useValue: 'Firebase'\n    },\n    {\n      provide: AuthService,\n      deps: ['backend', JwtService, ApiService, FirebaseService],\n      useFactory: AuthServiceFactory,\n    },\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    {\n      provide: HttpClientProvider,\n      deps: [HttpClient, Platform],\n      useFactory: httpProviderFactory,\n    },\n    MessageService,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nSharedModule->AppRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { SharedModule } from './shared/shared.module';\nimport { AdminGuard } from './core/guards/admin.guard';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: () => \"import('./pages/home/home.module').then( m => m.HomePageModule)\",\n    canActivate:[AuthGuard]\n  },\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'villagers',\n    loadChildren: () => \"import('./pages/villagers/villagers.module').then( m => m.VillagersPageModule)\",\n    canActivate:[AuthGuard]\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./pages/login/login.module').then( m => m.LoginPageModule)\"\n  },\n  {\n    path: 'register',\n    loadChildren: () => \"import('./pages/register/register.module').then( m => m.RegisterPageModule)\"\n  },\n  {\n    path: 'loans',\n    loadChildren: () => \"import('./pages/loans/loans.module').then( m => m.LoansPageModule)\",\n    canActivate:[AuthGuard]\n  },\n  {\n    path: 'about',\n    loadChildren: () => \"import('./pages/about/about.module').then( m => m.AboutPageModule)\",\n    canActivate:[AuthGuard]\n  },\n  {\n    path: 'profile',\n    loadChildren: () => \"import('./pages/profile/profile.module').then( m => m.ProfilePageModule)\",\n    canActivate:[AuthGuard]\n  },\n  {\n    path: 'profile/:uuid',\n    loadChildren: () => \"import('./pages/profile/profile.module').then( m => m.ProfilePageModule)\",\n    canActivate:[AuthGuard]\n  },\n  {\n    path: 'admin',\n    loadChildren: () => \"import('./pages/admin/admin.module').then( m => m.AdminPageModule)\",\n    canActivate:[AdminGuard]\n  }\n\n\n\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules }), SharedModule\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: FirebaseService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            Constructor of AuthGuard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Firebase authentication service.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular router service.\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The current activated route.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/auth.guard.ts:30\n                        \n                    \n\n\n            \n                \n                        Determines whether a route can be activated for authenticated users.\nAuthenticated users are allowed access and are redirected to their current activated route;\nnon-authenticated users are redirected to the login page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The route snapshot that is being activated.\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The router state snapshot.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, CanActivate, NavigationEnd, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, delay, map, tap } from 'rxjs';\nimport { AuthService } from '../services/api/strapi/auth.service';\nimport { FirebaseService } from '../services/api/firebase/firebase.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  /**\n    * Constructor of AuthGuard.\n    * @param auth Firebase authentication service.\n    * @param router Angular router service.\n    * @param activatedRoute The current activated route.\n    */\n  constructor(\n    private auth: FirebaseService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) { }\n  /**\n  * Determines whether a route can be activated for authenticated users.\n  * Authenticated users are allowed access and are redirected to their current activated route;\n  * non-authenticated users are redirected to the login page.\n  * @param route The route snapshot that is being activated.\n  * @param state The router state snapshot.\n  * @returns {Observable | Promise | boolean | UrlTree} \n  */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    return this.auth.isLogged$.pipe(tap(logged => {\n      console.log(\"GUARDA\", logged)\n      if (!logged) {\n        localStorage.setItem('returnUrl', state.url);\n        return this.router.parseUrl('/login?returnUrl=' + state.url);\n      }\n      return true;\n    }));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _logged\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                isLogged$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                login\n                            \n                            \n                                    Public\n                                    Abstract\n                                logout\n                            \n                            \n                                    Public\n                                    Abstract\n                                me\n                            \n                            \n                                    Public\n                                    Abstract\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(info: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _logged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLogged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._logged.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/auth.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, catchError, map, tap } from 'rxjs';\nimport { User } from '../../interfaces/user';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class AuthService {\n\n  protected _logged = new BehaviorSubject(null);\n  public isLogged$ = this._logged.asObservable();\n  protected _user = new BehaviorSubject(null);\n  public user$ = this._user.asObservable();\n  \n  public abstract login(credentials:Object):Observable;\n\n  public abstract register(info:Object):Observable;\n\n  public abstract logout():Observable;\n\n  public abstract me():Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService-1.html":{"url":"injectables/AuthService-1.html","title":"injectable - AuthService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/strapi/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _logged\n                            \n                            \n                                    Public\n                                isLogged$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                login\n                            \n                            \n                                    Public\n                                    Abstract\n                                logout\n                            \n                            \n                                    Public\n                                    Abstract\n                                me\n                            \n                            \n                                    Public\n                                    Abstract\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/strapi/auth.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/strapi/auth.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/strapi/auth.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(info: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/strapi/auth.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _logged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/strapi/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLogged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._logged.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/strapi/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, catchError, map, tap } from 'rxjs';\nimport { UserCredentials } from 'src/app/core/interfaces/user-credentials';\nimport { UserRegisterInfo } from 'src/app/core/interfaces/user-register-info';\nimport { JwtService } from './jwt.service';\nimport { ApiService } from '../api.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class AuthService {\n\n  protected _logged = new BehaviorSubject(false);\n  public isLogged$ = this._logged.asObservable();\n  \n  public abstract login(credentials:Object):Observable;\n\n  public abstract register(info:Object):Observable;\n\n  public abstract logout():Observable;\n\n  public abstract me():Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthStrapiService.html":{"url":"injectables/AuthStrapiService.html","title":"injectable - AuthStrapiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthStrapiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/strapi/auth-strapi.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _logged\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                isLogged$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Public\n                                me\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtSvc: JwtService, apiSvc: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/strapi/auth-strapi.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtSvc\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiSvc\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/strapi/auth-strapi.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: UserCredentials)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:32\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            UserCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:52\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:88\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(info: UserRegisterInfo)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:59\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            UserRegisterInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _logged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLogged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._logged.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:15\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, lastValueFrom, map, tap } from 'rxjs';\nimport { UserCredentials } from '../../../interfaces/user-credentials';\nimport { UserRegisterInfo } from '../../../interfaces/user-register-info';\nimport { JwtService } from './jwt.service';\nimport { ApiService } from '../api.service';\nimport { AuthService } from './auth.service';\nimport { StrapiExtendedUser, StrapiLoginPayload, StrapiLoginResponse, StrapiMe, StrapiRegisterPayload, StrapiRegisterResponse, StrapiResponse, StrapiUser } from '../../../interfaces/strapi';\nimport { User } from '../../../interfaces/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthStrapiService extends AuthService {\n\n  constructor(\n    private jwtSvc: JwtService,\n    private apiSvc: ApiService\n  ) {\n    super();\n    this.init();\n  }\n\n  private init() {\n    this.jwtSvc.loadToken().subscribe(_ => {\n      this._logged.next(true);\n    }\n    );\n  }\n\n\n  public login(credentials: UserCredentials): Observable {\n    return new Observable(obs => {\n      const _credentials: StrapiLoginPayload = {\n        identifier: credentials.username,\n        password: credentials.password\n      };\n      this.apiSvc.post(\"/auth/local\", _credentials).subscribe({\n        next: async (data: StrapiLoginResponse) => {\n          await lastValueFrom(this.jwtSvc.saveToken(data.jwt));\n          this._logged.next(data && data.jwt != '');\n          obs.next();\n          obs.complete();\n        },\n        error: err => {\n          obs.error(err);\n        }\n      });\n    });\n  }\n\n  logout(): Observable {\n    return this.jwtSvc.destroyToken().pipe(map(_ => {\n      this._logged.next(false);\n      return;\n    }));\n  }\n\n  register(info: UserRegisterInfo): Observable {\n    return new Observable(obs => {\n      const _info: StrapiRegisterPayload = {\n        email: info.email,\n        username: info.username,\n        password: info.password\n      }\n      this.apiSvc.post(\"/auth/local/register\", info).subscribe({\n        next: async (data: StrapiRegisterResponse) => {\n          let connected = data && data.jwt != '';\n          this._logged.next(connected);\n          await lastValueFrom(this.jwtSvc.saveToken(data.jwt));\n          const _extended_user: StrapiExtendedUser = {\n            data:{\n              user_id: data.user.id,\n              user: data.user.id\n            }\n          }\n          await lastValueFrom(this.apiSvc.post(\"/extended-users\", _extended_user)).catch;\n          obs.next();\n          obs.complete();\n        },\n        error: err => {\n          obs.error(err);\n        }\n      });\n    });\n  }\n\n  public me() {\n    return new Observable(obs => {\n      this.apiSvc.get('/users/me').subscribe({\n        next: async (user: StrapiMe) => {\n          let extended_user = await lastValueFrom(this.apiSvc.get(`/extended-users?filters[user_id]=${user.id}&populate=island`));\n          let ret: User = {\n            id: user.id,\n            username: user.username,\n            island: extended_user.data[0].attributes.island,\n            extended_id:extended_user.data[0].id,\n            role:extended_user.data[0].role,\n            followers:[],\n            following:[]\n          }\n          obs.next(ret);\n          obs.complete();\n        },\n        error: err => {\n          obs.error(err);\n        }\n      });\n    });\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/BackgroundBlurDirective.html":{"url":"directives/BackgroundBlurDirective.html","title":"directive - BackgroundBlurDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  BackgroundBlurDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/background-blur.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appBackgroundBlur]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appBackgroundBlur\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    appBackgroundBlur\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/background-blur.directive.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor to inject dependencies.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the host element.\n\n                                                        \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Renderer to manipulate the host element.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appBackgroundBlur\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/background-blur.directive.ts:10\n                            \n                        \n                \n                    \n                        Condition to apply or remove the blur class.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        appBackgroundBlur\n                    \n                \n\n\n                \n                    \n                        setappBackgroundBlur(condition: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/directives/background-blur.directive.ts:10\n                                \n                            \n                    \n                        \n                                Condition to apply or remove the blur class.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            condition\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appBackgroundBlur]'\n})\nexport class BackgroundBlurDirective {\n /**\n   * Condition to apply or remove the blur class.\n   */\n  @Input() set appBackgroundBlur(condition: boolean) {\n    if (condition) {\n      this.renderer.addClass(this.el.nativeElement, 'blur-background');\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, 'blur-background');\n    }\n  }\n/**\n   * Constructor to inject dependencies.\n   * @param el Reference to the host element.\n   * @param renderer Renderer to manipulate the host element.\n   */\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonConfig.html":{"url":"interfaces/ButtonConfig.html","title":"interface - ButtonConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/user-card/user-card.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for button configuration used in UserCardComponent.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            fill\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            slot\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fill\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fill:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slot:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { User } from 'src/app/core/interfaces/user';\nimport { UserFormComponent } from '../user-form/user-form.component';\nimport { ModalController } from '@ionic/angular';\nimport { UserService } from 'src/app/core/services/user.service';\nimport { FirebaseAuthService } from 'src/app/core/services/api/firebase/firebase-auth.service';\nimport { UserListComponent } from '../user-list/user-list.component';\n\n/**\n * Interface for button configuration used in UserCardComponent.\n */\ninterface ButtonConfig {\n  text: string;\n  action: string;\n  color: string;\n  fill: string;\n  icon: string,\n  slot:string;\n}\n\n@Component({\n  selector: 'app-user-card',\n  templateUrl: './user-card.component.html',\n  styleUrls: ['./user-card.component.scss'],\n})\nexport class UserCardComponent  implements OnInit {\n\n  constructor(\n    private modal: ModalController,\n    private userSvc:UserService,\n    private fbAuth:FirebaseAuthService\n  ) { }\n  @Input() user: User | null  = null;\n  @Input() buttonType: string = \"\";\n  @Input() isMe: boolean = false;\n\n  @Output() follow = new EventEmitter();\n  @Output() unfollow = new EventEmitter();\n  @Output() editModal = new EventEmitter();\n\n  buttonConfig!: ButtonConfig | null ;\n\n  /**\n   * Defines the button configurations available for the card.\n   * Each key corresponds to a button type with its respective configuration.\n   */\n  private readonly BUTTON_CONFIGS: { [key: string]: ButtonConfig } = {\n    follow: {\n      text: 'follow',\n      action: 'follow',\n      color: 'secondary',\n      fill: 'solid',\n      icon: 'person-add',\n      slot: 'end'\n    },\n    unfollow: {\n      text: 'unfollow',\n      action: 'unfollow',\n      color: 'secondary',\n      fill: 'outline',\n      icon: 'person-remove'  ,\n      slot: 'end'\n    },\n    edit: {\n      text: 'edit',\n      action: 'edit',\n      color: 'secondary',\n      fill: 'solid',\n      icon: 'pencil' ,\n      slot: 'icon-only'\n    },\n    ban: {\n      text: 'ban',\n      action: 'ban',\n      color: 'danger',\n      fill: 'solid',\n      icon: 'ban'  ,\n      slot: 'start'\n    }\n  };\n  \n\n/**\n   * Initializes the component and sets the configuration of the button\n   */\n  ngOnInit() {\n    if (this.buttonType == 'none') {\n      this.buttonConfig = null\n    } else {\n      this.buttonConfig = this.BUTTON_CONFIGS[this.buttonType];\n    }\n    \n\n  }\n/**\n   * Handles button click events on the card.\n   * Emits follow, unfollow, edit, or ban actions based on the buttonConfig.\n   * @param event The click event object.\n   */\n  handleButtonClick(event:any) {\n    switch (this.buttonConfig?.action) {\n      case 'follow':\n        this.follow.emit(this.user!);\n        this.buttonConfig =  this.BUTTON_CONFIGS['unfollow']\n        break;\n      case 'unfollow':\n        this.unfollow.emit(this.user!)\n        this.buttonConfig =  this.BUTTON_CONFIGS['follow']\n      break;\n      case 'edit':\n        this.onEditClicked(this.user!)\n        break;\n      case 'ban':\n        this.userSvc.banUser(this.user!).subscribe()\n        break;\n    }\n    event.stopPropagation();\n  }\n\n    /**\n   * Handles the edit button click event.\n   * Emits editModal event to open the user edit modal.\n   * @param user The user object to edit.\n   */\n  onEditClicked(user: User) {\n    this.editModal.emit(true);\n    var onDismiss = (info: any) => {\n      if (info.role == 'submit') {\n        this.userSvc.updateUser(user, info);\n        this.editModal.emit(false);\n      } else {\n        this.editModal.emit(false);\n        console.error(\"Error\")\n      }\n    }\n    this.presentUserForm(user, onDismiss);\n  }\n\n   /**\n   * Presents the user form modal for editing user details.\n   * @param data The initial user data to populate the form.\n   * @param onDismiss Callback function when the modal is dismissed.\n   */\n  async presentUserForm(data: User | null, onDismiss: (result: any) => void) {\n    const modal = await this.modal.create({\n      component: UserFormComponent,\n      componentProps: {\n        user: data\n      }\n    });\n    modal.present();\n    modal.onDidDismiss().then(result => {\n      this.editModal.emit(false);\n      if (result && result.data) {\n        onDismiss(result);\n      }\n    })\n  }\n\n  /**\n   * Opens a modal to display the list of followers or following users.\n   * @param listType The type of list to open ('followers' or 'following').\n   * @param event The click event object.\n   */\n  async openUserListModal(listType: string,event:any) {\n    event.stopPropagation();\n    let userUuids: string[] | undefined;\n  \n    if (listType === \"following\") {\n      userUuids = this.user?.following;\n    } else {\n      userUuids = this.user?.followers;\n    }\n  \n    this.editModal.emit(true);\n    const modal = await this.modal.create({\n      component: UserListComponent,\n      componentProps: {\n        userUuids: userUuids,\n        listType: listType\n      }\n    });\n    modal.present();\n    modal.onDidDismiss().then(_ => {\n      this.editModal.emit(false);\n    })\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomTranslateService.html":{"url":"injectables/CustomTranslateService.html","title":"injectable - CustomTranslateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomTranslateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/custom-translate.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _language\n                            \n                            \n                                    Public\n                                language$\n                            \n                            \n                                    Private\n                                supportedLangs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getBrowserLang\n                            \n                            \n                                    Private\n                                    Async\n                                init\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/custom-translate.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/custom-translate.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Retrieves the translated string for a given key.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The translation key.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBrowserLang\n                        \n                    \n                \n            \n            \n                \ngetBrowserLang()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/custom-translate.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Detects and returns the browser's language preference.\nIf the detected language is not in the supported languages list, defaults to 'es' (Spanish).\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/custom-translate.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Initializes the TranslateService with supported languages and sets the default language.\nDefault language is set based on the current value of _language BehaviorSubject.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(language: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/custom-translate.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Sets the active language for translations and updates the _language BehaviorSubject.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                language\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The language code (ex. 'en' for English, 'es' for Spanish).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _language\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject('es')\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/custom-translate.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        language$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._language.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/custom-translate.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        supportedLangs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['en', 'es']\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/custom-translate.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable, lastValueFrom, tap } from 'rxjs';\nimport { HttpClient } from \"@angular/common/http\";\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\n\n/**\n * Function to create a TranslateHttpLoader instance for ngx-translate.\n * @param http The HttpClient instance to use for loading translation files.\n */\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomTranslateService {\n\n  private _language: BehaviorSubject = new BehaviorSubject('es');\n  public language$ = this._language.asObservable();\n\n  private supportedLangs = ['en', 'es'];\n\n  constructor(\n    private translate: TranslateService\n  ) {\n    this.init();\n  }\n\n  /**\n   * Initializes the TranslateService with supported languages and sets the default language.\n   * Default language is set based on the current value of _language BehaviorSubject.\n   */\n  private async init() {\n    this.translate.addLangs(['es', 'en']);\n    this.translate.setDefaultLang(this._language.value);\n  }\n\n  /**\n  * Sets the active language for translations and updates the _language BehaviorSubject.\n  * @param language The language code (ex. 'en' for English, 'es' for Spanish).\n  */\n  use(language: string) {\n    lastValueFrom(this.translate.use(language)).then(_ => {\n      this._language.next(language);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  /**\n    * Retrieves the translated string for a given key.\n    * @param key The translation key.\n    * @returns {Observable}\n    */\n  get(key: string): Observable {\n    return this.translate.get(key);\n  }\n\n  /**\n    * Detects and returns the browser's language preference.\n    * If the detected language is not in the supported languages list, defaults to 'es' (Spanish).\n    */\n  getBrowserLang() {\n    let browserLang = this.translate.getBrowserLang();\n    browserLang = (browserLang && this.supportedLangs.includes(browserLang)) ? browserLang : 'es';\n    return browserLang;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/strapi/data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                delete\n                            \n                            \n                                    Public\n                                    Abstract\n                                get\n                            \n                            \n                                    Public\n                                    Abstract\n                                post\n                            \n                            \n                                    Public\n                                    Abstract\n                                put\n                            \n                            \n                                    Public\n                                    Abstract\n                                query\n                            \n                            \n                                    Public\n                                    Abstract\n                                queryPaginated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(resource: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/strapi/data.service.ts:22\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(resource: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/strapi/data.service.ts:16\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/strapi/data.service.ts:18\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/strapi/data.service.ts:20\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        query\n                        \n                    \n                \n            \n            \n                \n                        \n                    query(resource: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/strapi/data.service.ts:14\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        queryPaginated\n                        \n                    \n                \n            \n            \n                \n                        \n                    queryPaginated(resource: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/strapi/data.service.ts:12\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject} from '@angular/core';\nimport { Observable} from 'rxjs';\nimport { ApiService } from '../api.service';\nimport { PaginatedData } from '../../../interfaces/data';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class DataService{\n\n  public abstract queryPaginated(resource:string, params:any):Observable>\n  \n  public abstract query(resource:string, params:any):Observable>;\n\n  public abstract get(resource:string):Observable;\n\n  public abstract post(resource:string, data:any):Observable;\n\n  public abstract put(resource:string, data:any):Observable;\n\n  public abstract delete(resource:string):Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseAuthService.html":{"url":"injectables/FirebaseAuthService.html","title":"injectable - FirebaseAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/firebase/firebase-auth.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _logged\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                isLogged$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadUser\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                me\n                            \n                            \n                                    Private\n                                postRegister\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                updateProfilePictureAndUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseSvc: FirebaseService, messageService: MessageService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/firebase/firebase-auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadUser\n                        \n                    \n                \n            \n            \n                \nloadUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/firebase/firebase-auth.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: UserCredentials)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:49\n\n                        \n                    \n\n\n            \n                \n                        Logs in a user with provided credentials.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            UserCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user credentials containing username and password.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:148\n\n                        \n                    \n\n\n            \n                \n                        Logs out the current user.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:127\n\n                        \n                    \n\n\n            \n                \n                        Retrieves the current authenticated user's information.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    postRegister(info: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/firebase/firebase-auth.service.ts:111\n                        \n                    \n\n\n            \n                \n                        Completes user registration after creating the user in Firebase.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Additional user information to be stored in the database.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(info: UserRegisterInfo)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:82\n\n                        \n                    \n\n\n            \n                \n                        Registers a new user with provided registration information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            UserRegisterInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The registration information containing email, password, and username.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfilePictureAndUser\n                        \n                    \n                \n            \n            \n                \nupdateProfilePictureAndUser(updatedUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/firebase/firebase-auth.service.ts:156\n                        \n                    \n\n\n            \n                \n                        Updates the profile picture and user information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The updated user information.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _logged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLogged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._logged.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:15\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Observable, from, lastValueFrom, map } from 'rxjs';\nimport { UserCredentials } from '../../../interfaces/user-credentials';\nimport { UserRegisterInfo } from '../../../interfaces/user-register-info';\nimport { User } from '../../../interfaces/user';\nimport { AuthService } from '../auth.service';\nimport { FirebaseService, FirebaseUserCredential } from './firebase.service';\nimport { Injectable } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseAuthService extends AuthService {\n  loadUser() {\n    throw new Error('Method not implemented.');\n  }\n\n  constructor(\n    private firebaseSvc: FirebaseService,\n    private messageService: MessageService,\n    private translate: TranslateService\n  ) {\n    super();\n    this.firebaseSvc.isLogged$.subscribe(logged => {\n      if (logged) {\n        this.me().subscribe({\n          next: data => {\n            this._user.next(data);\n            this._logged.next(true);\n          },\n          error: err => {\n            console.log(err);\n          }\n        });\n      }\n      else {\n        this._logged.next(false);\n        this._user.next(null);\n      }\n    })\n  }\n\n  /**\n * Logs in a user with provided credentials.\n * @param credentials The user credentials containing username and password.\n * @returns {Observable}\n */\n  public login(credentials: UserCredentials): Observable {\n    return new Observable(subscr => {\n      this.firebaseSvc.connectUserWithEmailAndPassword(credentials.username, credentials.password).then((credentials: FirebaseUserCredential | null) => {\n        if (!credentials || !credentials.user || !credentials.user.user || !credentials.user.user.uid) {\n          subscr.error('Cannot login');\n          return;\n        }\n        if (credentials) {\n          this.me().subscribe(async data => {\n            console.log(\"login data\", data);\n            if (data.role === 'banned') {\n              this.messageService.add({ severity: 'error', summary: 'Error', detail: await lastValueFrom(this.translate.get('login.ban')) });\n              this._logged.next(false);\n              this.logout().subscribe(() => {\n                subscr.error('User is banned');\n              });\n            } else {\n              this._user.next(data);\n              this._logged.next(true);\n              subscr.next(data);\n              subscr.complete();\n            }\n          });\n        }\n      });\n    });\n  }\n\n  /**\n     * Registers a new user with provided registration information.\n     * @param info The registration information containing email, password, and username.\n     * @returns {Observable}\n     */\n  public register(info: UserRegisterInfo): Observable {\n    return new Observable(subscr => {\n      this.firebaseSvc.createUserWithEmailAndPassword(info.email, info.password).then((credentials: FirebaseUserCredential | null) => {\n        if (!credentials || !credentials.user || !credentials.user.user || !credentials.user.user.uid)\n          subscr.error('Cannot register');\n        if (credentials) {\n          var _info: User = {\n            ...info,\n            role: 'normal',\n            followers: [],\n            following: []\n          };\n          _info.uuid = this.firebaseSvc.user?.uid;\n          this.postRegister(_info).subscribe(data => {\n            this._user.next(_info);\n            this._logged.next(true);\n            subscr.next(_info);\n            subscr.complete()\n          });\n        }\n      })\n    });\n  }\n\n  /**\n* Completes user registration after creating the user in Firebase.\n* @param info Additional user information to be stored in the database.\n* @returns  {Observable}\n*/\n  private postRegister(info: User): Observable {\n    if (info.uuid)\n      return from(this.firebaseSvc.createDocumentWithId('users', {\n        username: info.username,\n        role: 'normal',\n        followers: [],\n        following: []\n      }, info.uuid))\n    throw new Error('Error inesperado');\n  }\n\n  /**\n   * Retrieves the current authenticated user's information.\n   * @returns  {Observable}\n   * @throws Error if the user is not connected.\n   */\n  public me(): Observable {\n    if (this.firebaseSvc.user?.uid)\n      return from(this.firebaseSvc.getDocument('users', this.firebaseSvc.user.uid)).pipe(map(data => {\n        return {\n          profile_picture: data.data['profile_picture'],\n          username: data.data['username'],\n          dream_code: data.data['dream_code'],\n          role: data.data['role'],\n          uuid: data.id,\n          followers: data.data['followers'],\n          following: data.data['following']\n        }\n      }));\n    else\n      throw new Error('User is not connected');\n  }\n\n  /**\n   * Logs out the current user.\n   * @returns {Observable}\n   */\n  public logout(): Observable {\n    return from(this.firebaseSvc.signOut(false));\n  }\n\n  /**\n* Updates the profile picture and user information.\n* @param updatedUser The updated user information.\n*/\n  updateProfilePictureAndUser(updatedUser: User) {\n    this._user.next(updatedUser);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseDataService.html":{"url":"classes/FirebaseDataService.html","title":"class - FirebaseDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/firebase/firebase-data.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            DataService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                query\n                            \n                            \n                                    Public\n                                    \n                                queryPaginated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/firebase/firebase-data.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(resource: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:46\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(resource: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:28\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:40\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        query\n                        \n                    \n                \n            \n            \n                \n                        \n                    query(resource: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:20\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        queryPaginated\n                        \n                    \n                \n            \n            \n                \n                        \n                    queryPaginated(resource: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:10\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Observable, map, of } from 'rxjs';\nimport { StrapiArrayResponse, StrapiResponse } from '../../../interfaces/strapi';\nimport { ApiService } from '../api.service';\nimport { DataService } from '../strapi/data.service';\nimport { PaginatedData } from '../../../interfaces/data';\n\nexport class FirebaseDataService extends DataService{\n  \n  public override queryPaginated(resource: string, params: any): Observable> {\n    throw new Error('Method not implemented.');\n  }\n\n  constructor(\n    protected api:ApiService\n  ){\n    super();\n  }\n\n  public query(resource:string, params:any):Observable>{\n    return this.api.get(`/${resource}`, params).pipe(map((response:StrapiArrayResponse)=>{\n      return {\n        data: response.data.map(data=>{return {...(data.attributes), id:data.id};}), \n        pagination: response.meta.pagination!};\n    }));\n  }\n\n  public get(resource:string):Observable{\n    return this.api.get(`/${resource}`).pipe(map((response:StrapiResponse)=>{\n      return {id:response.data.id, ...(response.data.attributes)};\n    }));\n  }\n\n  public post(resource:string, data:any):Observable{\n    return this.api.post(`/${resource}`, {data:data} as Object).pipe(map((response:StrapiResponse)=>{\n      return {id:response.data.id, ...response.data.attributes};\n    }));\n  }\n\n  public put(resource:string, data:any):Observable{\n    return this.api.put(`/${resource}`, {data:data}).pipe(map((response:StrapiResponse)=>{\n      return {id:response.data.id, ...response.data.attributes};\n    }));\n  }\n\n  public delete(resource:string):Observable{\n    return this.api.delete(`/${resource}`).pipe(map((response:StrapiResponse)=>{\n      return {id:response.data.id, ...response.data.attributes};\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseDocument.html":{"url":"interfaces/FirebaseDocument.html","title":"interface - FirebaseDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/firebase/firebase.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a document in Firestore.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     DocumentData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable, UnaryFunction } from \"rxjs\";\nimport { initializeApp, getApp, FirebaseApp } from \"firebase/app\";\nimport { getFirestore, addDoc, collection, updateDoc, doc, onSnapshot, getDoc, setDoc, query, where, getDocs, Unsubscribe, DocumentData, deleteDoc, Firestore, orderBy, startAt, limit, startAfter } from \"firebase/firestore\";\nimport { getStorage, ref, getDownloadURL, uploadBytes, FirebaseStorage, deleteObject } from \"firebase/storage\";\nimport { createUserWithEmailAndPassword, deleteUser, signInAnonymously, signOut, signInWithEmailAndPassword, initializeAuth, indexedDBLocalPersistence, UserCredential, Auth, User } from \"firebase/auth\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { fakeAsync } from \"@angular/core/testing\";\n\n/**\n * Interface representing a file in Firebase Storage.\n */\nexport interface FirebaseStorageFile {\n  path: string,\n  file: string\n};\n\n/**\n * Interface representing a document in Firestore.\n */\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\n/**\n * Interface representing a user credential in Firebase Authentication.\n */\nexport interface FirebaseUserCredential {\n  user: UserCredential\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n\n\n  private _isLogged: BehaviorSubject = new BehaviorSubject(false);\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  constructor(\n    @Inject('firebase-config') config: any,\n    private router: Router\n\n  ) {\n    this.init(config);\n  }\n\n  /**\n  * Initializes Firebase services and sets up authentication state change listener.\n  * @param firebaseConfig  Firebase configuration object.\n  */\n  public init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), { persistence: indexedDBLocalPersistence });\n    this._auth.onAuthStateChanged(async user => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          const userData = await this.getDocument('users', user.uid);\n          if (userData && userData.data[\"role\"] !== 'banned') {\n            const returnUrl = localStorage.getItem('returnUrl') || '/home';\n            localStorage.removeItem('returnUrl');\n            this.router.navigate([returnUrl]);\n          } else {\n            this._isLogged.next(false);\n            this.router.navigate(['/login']);\n          }\n        }\n      } else {\n        this._isLogged.next(false);\n        this.router.navigate(['/login']);\n      }\n    });\n\n  }\n\n  /**\n  * Getter for the current user object.\n  */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n * Uploads a file to Firebase Storage.\n * @param blob The file blob to upload.\n * @param mimeType The MIME type of the file.\n * @param path The storage path where the file will be stored.\n * @param prefix The prefix to prepend to the filename.\n * @param extension The file extension (e.g., '.jpg').\n * @returns { Promise}\n */\n  public fileUpload(blob: Blob, mimeType: string, path: string, prefix: string, extension: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: \"Not connected to FireStorage\"\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + \"/\" + prefix + \"-\" + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob).then(async (snapshot) => {\n        getDownloadURL(storageRef).then(async downloadURL => {\n          if (freeConnection)\n            await signOut(this._auth!);\n          resolve({\n            path,\n            file: downloadURL,\n          });\n        }).catch(async error => {\n          if (freeConnection)\n            await signOut(this._auth!);\n          reject(error);\n        });\n      }).catch(async (error) => {\n        if (freeConnection)\n          await signOut(this._auth!);\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Uploads an image file to Firebase Storage.\n   * @param blob The image blob to upload.\n   * @returns {Promise}\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', \".jpg\");\n  }\n\n  /**\n     * Deletes a file from Firebase Storage.\n     * @param path The storage path of the file to delete.\n     * @returns {Promise}\n     */\n  public deleteFile(path: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const fileRef = ref(this._webStorage!, path);\n\n        await deleteObject(fileRef);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Creates a new document in a Firestore collection.\n   * @param collectionName Name of the Firestore collection.\n   * @param data The data to be stored in the document.\n   * @returns {Promise}\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data).then(docRef => resolve(docRef.id)\n      ).catch(err => reject(err));\n    });\n  }\n\n  /**\n   * Creates a new document with a specific ID in a Firestore collection.\n   * @param collectionName The name of the Firestore collection.\n   * @param data The data to be stored in the document.\n   * @param docId The ID of the document to be created.\n   * @returns {Promise}\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /** \n     * Updates an existing document in a Firestore collection.\n     * @param collectionName The name of the Firestore collection.\n     * @param document  ID of the document to update.\n     * @param data Updated data to be stored in the document.\n     * @returns {Promise}\n     */\n  public updateDocument(collectionName: string, document: string | undefined, data: any): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data).then(docRef => resolve()\n      ).catch(err => reject(err));\n    });\n  }\n\n  /**\n * Retrieves all documents from a Firestore collection.\n * @param collectionName The name of the Firestore collection.\n * @returns {Promise}\n */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      const querySnapshot = await getDocs(collection(this._db!, collectionName));\n      resolve(querySnapshot.docs.map(doc => {\n        return { id: doc.id, data: doc.data() }\n      }));\n    });\n  }\n\n  /**\n  * Retrieves paginated documents from a Firestore collection.\n  * @param collectionName The name of the Firestore collection.\n  * @param pageSize The number of documents to fetch per page.\n  * @param filterBy The field to use for ordering.\n  * @param lastDocument The last document from the previous page (optional).\n  * @returns {Promise}\n  */\n  public getDocumentsPaginated(collectionName: string, pageSize: number, filterBy: string, lastDocument?: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: \"Database is not connected\"\n        });\n      }\n\n      let collectionRef = (collection(this._db, collectionName))\n      const q = query(collectionRef, orderBy(filterBy));\n      let paginatedQuery = query(q, limit(pageSize));\n      if (lastDocument) {\n        paginatedQuery = query(q, startAfter(lastDocument), limit(pageSize));\n      }\n\n      getDocs(paginatedQuery)\n        .then(querySnapshot => {\n          const documents = querySnapshot.docs.map(doc => {\n            return { id: doc.id, data: doc.data() };\n          });\n          resolve(documents);\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * Retrieves a single document from Firestore.\n   * @param collectionName The name of the collection.\n   * @param document The ID of the document to retrieve.\n   * @returns {Promise}\n   */\n  public getDocument(collectionName: string, document: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n  * Retrieves documents from Firestore filtered by a specific field and value.\n  * @param collectionName The name of the collection.\n  * @param field The field to filter documents by.\n  * @param value The value to filter documents by.\n  * @returns {Promise}\n  */\n  public getDocumentsBy(collectionName: string, field: string, value: any): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      const q = query(collection(this._db!, collectionName), where(field, \"==\", value));\n\n      const querySnapshot = await getDocs(q);\n      resolve(querySnapshot.docs.map(doc => {\n        return { id: doc.id, data: doc.data() }\n      }));\n    });\n  }\n\n  /**\n   * Retrieves documents from Firestore filtered by a specific field and value, with optional case-sensitive filtering.\n   * @param collectionName The name of the collection.\n   * @param field The field to filter documents by.\n   * @param value The value to filter documents by.\n   * @param capitalize Whether to capitalize the search value.\n   * @returns {Promise}\n   */\n  public getDocumentsFiltered(collectionName: string, field: string, value: any, capitalize: boolean = false): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      let search = value\n      if (capitalize) {\n        search = value.charAt(0).toUpperCase() + value.slice(1).toLowerCase();\n      }\n      const q = query(collection(this._db!, collectionName), where(field, \">=\", search), where(field, \"(doc => {\n        return { id: doc.id, data: doc.data() }\n      }));\n    });\n  }\n\n  /**\n     * Deletes a document from Firestore.\n     * @param collectionName The name of the collection.\n     * @param docId The ID of the document to delete.\n     * @returns {Promise}\n     */\n  public deleteDocument(collectionName: string, docId: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      resolve(await deleteDoc(doc(this._db!, collectionName, docId)));\n    });\n  }\n\n  /**\n  * Subscribes to changes in a Firestore collection.\n  * @param collectionName The name of the collection.\n  * @param subject The BehaviorSubject to update with collection changes.\n  * @param mapFunction The function to map DocumentData to a specific format.\n  * @returns A function to unsubscribe from the snapshot listener.\n  */\n  public subscribeToCollection(collectionName: string, subject: BehaviorSubject, mapFunction: (el: DocumentData) => any): Unsubscribe | null {\n    if (!this._db)\n      return null;\n    return onSnapshot(collection(this._db, collectionName), (snapshot) => {\n      subject.next(snapshot.docs.map(doc => mapFunction(doc)));\n    }, error => { });\n  }\n\n  /**\n   * Signs out the current user.\n   * @param signInAnon Whether to sign in anonymously after signing out.\n   * @returns {Promise}\n   */\n  public signOut(signInAnon: boolean = false): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon)\n            await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n\n  }\n\n  /**\n   * Checks if a user is currently connected.\n   * @returns {Promise}\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth)\n        resolve(false);\n      resolve(this._auth!.currentUser != null)\n    });\n    return response;\n  }\n\n  /**\n   * Checks if a user is currently connected anonymously.\n   * @returns {Promise}\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth)\n        resolve(false);\n      resolve(this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous);\n    });\n    return response;\n\n  }\n\n  /**\n  * Connects to Firebase anonymously.\n  * @returns {Promise}\n  */\n  public connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth)\n        resolve();\n      if (!(await this.isUserConnected()) && !(await this.isUserConnectedAnonymously())) {\n        await signInAnonymously(this._auth!).catch(error => reject(error));\n        resolve();\n      }\n      else if (await this.isUserConnectedAnonymously())\n        resolve();\n      else\n        reject({ msg: \"An user is already connected\" });\n\n    });\n    return response;\n  }\n\n  /**\n   * Creates a new user account with email and password.\n   * @param email The user's email address.\n   * @param password The user's password.\n   * @returns {Promise}\n   */\n  public createUserWithEmailAndPassword(email: string, password: string): Promise {\n    console.log(\"create user\", email, password)\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth)\n        resolve(null);\n      try {\n        console.log(\"AUTH:\", this._auth, email, password)\n        resolve({ user: await createUserWithEmailAndPassword(this._auth!, email, password) });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log('Password is not strong enough. Add additional characters including special characters and numbers.');\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n\n  }\n\n  /**\n  * Signs in a user with email and password.\n  * @param email The user's email address.\n  * @param password The user's password.\n  * @returns {Promise}\n  */\n  public connectUserWithEmailAndPassword(email: string, password: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth)\n        resolve(null);\n      resolve({ user: await signInWithEmailAndPassword(this._auth!, email, password) });\n    });\n\n  }\n\n  /**\n  * Deletes the currently signed-in user account.\n  * @returns {Promise}\n  */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user)\n        reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n  * Updates a specific field of a document in Firestore.\n  * @param collectionName The name of the collection.\n  * @param document The ID of the document to update.\n  * @param fieldName The name of the field to update.\n  * @param fieldValue The new value of the field.\n  * @returns {Promise}\n  */\n  public updateDocumentField(collectionName: string, document: string, fieldName: string, fieldValue: any): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: \"Database is not connected\"\n        });\n      }\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseStorageFile.html":{"url":"interfaces/FirebaseStorageFile.html","title":"interface - FirebaseStorageFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseStorageFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/firebase/firebase.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a file in Firebase Storage.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable, UnaryFunction } from \"rxjs\";\nimport { initializeApp, getApp, FirebaseApp } from \"firebase/app\";\nimport { getFirestore, addDoc, collection, updateDoc, doc, onSnapshot, getDoc, setDoc, query, where, getDocs, Unsubscribe, DocumentData, deleteDoc, Firestore, orderBy, startAt, limit, startAfter } from \"firebase/firestore\";\nimport { getStorage, ref, getDownloadURL, uploadBytes, FirebaseStorage, deleteObject } from \"firebase/storage\";\nimport { createUserWithEmailAndPassword, deleteUser, signInAnonymously, signOut, signInWithEmailAndPassword, initializeAuth, indexedDBLocalPersistence, UserCredential, Auth, User } from \"firebase/auth\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { fakeAsync } from \"@angular/core/testing\";\n\n/**\n * Interface representing a file in Firebase Storage.\n */\nexport interface FirebaseStorageFile {\n  path: string,\n  file: string\n};\n\n/**\n * Interface representing a document in Firestore.\n */\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\n/**\n * Interface representing a user credential in Firebase Authentication.\n */\nexport interface FirebaseUserCredential {\n  user: UserCredential\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n\n\n  private _isLogged: BehaviorSubject = new BehaviorSubject(false);\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  constructor(\n    @Inject('firebase-config') config: any,\n    private router: Router\n\n  ) {\n    this.init(config);\n  }\n\n  /**\n  * Initializes Firebase services and sets up authentication state change listener.\n  * @param firebaseConfig  Firebase configuration object.\n  */\n  public init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), { persistence: indexedDBLocalPersistence });\n    this._auth.onAuthStateChanged(async user => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          const userData = await this.getDocument('users', user.uid);\n          if (userData && userData.data[\"role\"] !== 'banned') {\n            const returnUrl = localStorage.getItem('returnUrl') || '/home';\n            localStorage.removeItem('returnUrl');\n            this.router.navigate([returnUrl]);\n          } else {\n            this._isLogged.next(false);\n            this.router.navigate(['/login']);\n          }\n        }\n      } else {\n        this._isLogged.next(false);\n        this.router.navigate(['/login']);\n      }\n    });\n\n  }\n\n  /**\n  * Getter for the current user object.\n  */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n * Uploads a file to Firebase Storage.\n * @param blob The file blob to upload.\n * @param mimeType The MIME type of the file.\n * @param path The storage path where the file will be stored.\n * @param prefix The prefix to prepend to the filename.\n * @param extension The file extension (e.g., '.jpg').\n * @returns { Promise}\n */\n  public fileUpload(blob: Blob, mimeType: string, path: string, prefix: string, extension: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: \"Not connected to FireStorage\"\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + \"/\" + prefix + \"-\" + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob).then(async (snapshot) => {\n        getDownloadURL(storageRef).then(async downloadURL => {\n          if (freeConnection)\n            await signOut(this._auth!);\n          resolve({\n            path,\n            file: downloadURL,\n          });\n        }).catch(async error => {\n          if (freeConnection)\n            await signOut(this._auth!);\n          reject(error);\n        });\n      }).catch(async (error) => {\n        if (freeConnection)\n          await signOut(this._auth!);\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Uploads an image file to Firebase Storage.\n   * @param blob The image blob to upload.\n   * @returns {Promise}\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', \".jpg\");\n  }\n\n  /**\n     * Deletes a file from Firebase Storage.\n     * @param path The storage path of the file to delete.\n     * @returns {Promise}\n     */\n  public deleteFile(path: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const fileRef = ref(this._webStorage!, path);\n\n        await deleteObject(fileRef);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Creates a new document in a Firestore collection.\n   * @param collectionName Name of the Firestore collection.\n   * @param data The data to be stored in the document.\n   * @returns {Promise}\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data).then(docRef => resolve(docRef.id)\n      ).catch(err => reject(err));\n    });\n  }\n\n  /**\n   * Creates a new document with a specific ID in a Firestore collection.\n   * @param collectionName The name of the Firestore collection.\n   * @param data The data to be stored in the document.\n   * @param docId The ID of the document to be created.\n   * @returns {Promise}\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /** \n     * Updates an existing document in a Firestore collection.\n     * @param collectionName The name of the Firestore collection.\n     * @param document  ID of the document to update.\n     * @param data Updated data to be stored in the document.\n     * @returns {Promise}\n     */\n  public updateDocument(collectionName: string, document: string | undefined, data: any): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data).then(docRef => resolve()\n      ).catch(err => reject(err));\n    });\n  }\n\n  /**\n * Retrieves all documents from a Firestore collection.\n * @param collectionName The name of the Firestore collection.\n * @returns {Promise}\n */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      const querySnapshot = await getDocs(collection(this._db!, collectionName));\n      resolve(querySnapshot.docs.map(doc => {\n        return { id: doc.id, data: doc.data() }\n      }));\n    });\n  }\n\n  /**\n  * Retrieves paginated documents from a Firestore collection.\n  * @param collectionName The name of the Firestore collection.\n  * @param pageSize The number of documents to fetch per page.\n  * @param filterBy The field to use for ordering.\n  * @param lastDocument The last document from the previous page (optional).\n  * @returns {Promise}\n  */\n  public getDocumentsPaginated(collectionName: string, pageSize: number, filterBy: string, lastDocument?: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: \"Database is not connected\"\n        });\n      }\n\n      let collectionRef = (collection(this._db, collectionName))\n      const q = query(collectionRef, orderBy(filterBy));\n      let paginatedQuery = query(q, limit(pageSize));\n      if (lastDocument) {\n        paginatedQuery = query(q, startAfter(lastDocument), limit(pageSize));\n      }\n\n      getDocs(paginatedQuery)\n        .then(querySnapshot => {\n          const documents = querySnapshot.docs.map(doc => {\n            return { id: doc.id, data: doc.data() };\n          });\n          resolve(documents);\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * Retrieves a single document from Firestore.\n   * @param collectionName The name of the collection.\n   * @param document The ID of the document to retrieve.\n   * @returns {Promise}\n   */\n  public getDocument(collectionName: string, document: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n  * Retrieves documents from Firestore filtered by a specific field and value.\n  * @param collectionName The name of the collection.\n  * @param field The field to filter documents by.\n  * @param value The value to filter documents by.\n  * @returns {Promise}\n  */\n  public getDocumentsBy(collectionName: string, field: string, value: any): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      const q = query(collection(this._db!, collectionName), where(field, \"==\", value));\n\n      const querySnapshot = await getDocs(q);\n      resolve(querySnapshot.docs.map(doc => {\n        return { id: doc.id, data: doc.data() }\n      }));\n    });\n  }\n\n  /**\n   * Retrieves documents from Firestore filtered by a specific field and value, with optional case-sensitive filtering.\n   * @param collectionName The name of the collection.\n   * @param field The field to filter documents by.\n   * @param value The value to filter documents by.\n   * @param capitalize Whether to capitalize the search value.\n   * @returns {Promise}\n   */\n  public getDocumentsFiltered(collectionName: string, field: string, value: any, capitalize: boolean = false): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      let search = value\n      if (capitalize) {\n        search = value.charAt(0).toUpperCase() + value.slice(1).toLowerCase();\n      }\n      const q = query(collection(this._db!, collectionName), where(field, \">=\", search), where(field, \"(doc => {\n        return { id: doc.id, data: doc.data() }\n      }));\n    });\n  }\n\n  /**\n     * Deletes a document from Firestore.\n     * @param collectionName The name of the collection.\n     * @param docId The ID of the document to delete.\n     * @returns {Promise}\n     */\n  public deleteDocument(collectionName: string, docId: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      resolve(await deleteDoc(doc(this._db!, collectionName, docId)));\n    });\n  }\n\n  /**\n  * Subscribes to changes in a Firestore collection.\n  * @param collectionName The name of the collection.\n  * @param subject The BehaviorSubject to update with collection changes.\n  * @param mapFunction The function to map DocumentData to a specific format.\n  * @returns A function to unsubscribe from the snapshot listener.\n  */\n  public subscribeToCollection(collectionName: string, subject: BehaviorSubject, mapFunction: (el: DocumentData) => any): Unsubscribe | null {\n    if (!this._db)\n      return null;\n    return onSnapshot(collection(this._db, collectionName), (snapshot) => {\n      subject.next(snapshot.docs.map(doc => mapFunction(doc)));\n    }, error => { });\n  }\n\n  /**\n   * Signs out the current user.\n   * @param signInAnon Whether to sign in anonymously after signing out.\n   * @returns {Promise}\n   */\n  public signOut(signInAnon: boolean = false): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon)\n            await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n\n  }\n\n  /**\n   * Checks if a user is currently connected.\n   * @returns {Promise}\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth)\n        resolve(false);\n      resolve(this._auth!.currentUser != null)\n    });\n    return response;\n  }\n\n  /**\n   * Checks if a user is currently connected anonymously.\n   * @returns {Promise}\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth)\n        resolve(false);\n      resolve(this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous);\n    });\n    return response;\n\n  }\n\n  /**\n  * Connects to Firebase anonymously.\n  * @returns {Promise}\n  */\n  public connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth)\n        resolve();\n      if (!(await this.isUserConnected()) && !(await this.isUserConnectedAnonymously())) {\n        await signInAnonymously(this._auth!).catch(error => reject(error));\n        resolve();\n      }\n      else if (await this.isUserConnectedAnonymously())\n        resolve();\n      else\n        reject({ msg: \"An user is already connected\" });\n\n    });\n    return response;\n  }\n\n  /**\n   * Creates a new user account with email and password.\n   * @param email The user's email address.\n   * @param password The user's password.\n   * @returns {Promise}\n   */\n  public createUserWithEmailAndPassword(email: string, password: string): Promise {\n    console.log(\"create user\", email, password)\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth)\n        resolve(null);\n      try {\n        console.log(\"AUTH:\", this._auth, email, password)\n        resolve({ user: await createUserWithEmailAndPassword(this._auth!, email, password) });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log('Password is not strong enough. Add additional characters including special characters and numbers.');\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n\n  }\n\n  /**\n  * Signs in a user with email and password.\n  * @param email The user's email address.\n  * @param password The user's password.\n  * @returns {Promise}\n  */\n  public connectUserWithEmailAndPassword(email: string, password: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth)\n        resolve(null);\n      resolve({ user: await signInWithEmailAndPassword(this._auth!, email, password) });\n    });\n\n  }\n\n  /**\n  * Deletes the currently signed-in user account.\n  * @returns {Promise}\n  */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user)\n        reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n  * Updates a specific field of a document in Firestore.\n  * @param collectionName The name of the collection.\n  * @param document The ID of the document to update.\n  * @param fieldName The name of the field to update.\n  * @param fieldValue The new value of the field.\n  * @returns {Promise}\n  */\n  public updateDocumentField(collectionName: string, document: string, fieldName: string, fieldValue: any): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: \"Database is not connected\"\n        });\n      }\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseUserCredential.html":{"url":"interfaces/FirebaseUserCredential.html","title":"interface - FirebaseUserCredential","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseUserCredential\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/firebase/firebase.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user credential in Firebase Authentication.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserCredential\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserCredential\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable, UnaryFunction } from \"rxjs\";\nimport { initializeApp, getApp, FirebaseApp } from \"firebase/app\";\nimport { getFirestore, addDoc, collection, updateDoc, doc, onSnapshot, getDoc, setDoc, query, where, getDocs, Unsubscribe, DocumentData, deleteDoc, Firestore, orderBy, startAt, limit, startAfter } from \"firebase/firestore\";\nimport { getStorage, ref, getDownloadURL, uploadBytes, FirebaseStorage, deleteObject } from \"firebase/storage\";\nimport { createUserWithEmailAndPassword, deleteUser, signInAnonymously, signOut, signInWithEmailAndPassword, initializeAuth, indexedDBLocalPersistence, UserCredential, Auth, User } from \"firebase/auth\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { fakeAsync } from \"@angular/core/testing\";\n\n/**\n * Interface representing a file in Firebase Storage.\n */\nexport interface FirebaseStorageFile {\n  path: string,\n  file: string\n};\n\n/**\n * Interface representing a document in Firestore.\n */\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\n/**\n * Interface representing a user credential in Firebase Authentication.\n */\nexport interface FirebaseUserCredential {\n  user: UserCredential\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n\n\n  private _isLogged: BehaviorSubject = new BehaviorSubject(false);\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  constructor(\n    @Inject('firebase-config') config: any,\n    private router: Router\n\n  ) {\n    this.init(config);\n  }\n\n  /**\n  * Initializes Firebase services and sets up authentication state change listener.\n  * @param firebaseConfig  Firebase configuration object.\n  */\n  public init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), { persistence: indexedDBLocalPersistence });\n    this._auth.onAuthStateChanged(async user => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          const userData = await this.getDocument('users', user.uid);\n          if (userData && userData.data[\"role\"] !== 'banned') {\n            const returnUrl = localStorage.getItem('returnUrl') || '/home';\n            localStorage.removeItem('returnUrl');\n            this.router.navigate([returnUrl]);\n          } else {\n            this._isLogged.next(false);\n            this.router.navigate(['/login']);\n          }\n        }\n      } else {\n        this._isLogged.next(false);\n        this.router.navigate(['/login']);\n      }\n    });\n\n  }\n\n  /**\n  * Getter for the current user object.\n  */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n * Uploads a file to Firebase Storage.\n * @param blob The file blob to upload.\n * @param mimeType The MIME type of the file.\n * @param path The storage path where the file will be stored.\n * @param prefix The prefix to prepend to the filename.\n * @param extension The file extension (e.g., '.jpg').\n * @returns { Promise}\n */\n  public fileUpload(blob: Blob, mimeType: string, path: string, prefix: string, extension: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: \"Not connected to FireStorage\"\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + \"/\" + prefix + \"-\" + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob).then(async (snapshot) => {\n        getDownloadURL(storageRef).then(async downloadURL => {\n          if (freeConnection)\n            await signOut(this._auth!);\n          resolve({\n            path,\n            file: downloadURL,\n          });\n        }).catch(async error => {\n          if (freeConnection)\n            await signOut(this._auth!);\n          reject(error);\n        });\n      }).catch(async (error) => {\n        if (freeConnection)\n          await signOut(this._auth!);\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Uploads an image file to Firebase Storage.\n   * @param blob The image blob to upload.\n   * @returns {Promise}\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', \".jpg\");\n  }\n\n  /**\n     * Deletes a file from Firebase Storage.\n     * @param path The storage path of the file to delete.\n     * @returns {Promise}\n     */\n  public deleteFile(path: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const fileRef = ref(this._webStorage!, path);\n\n        await deleteObject(fileRef);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Creates a new document in a Firestore collection.\n   * @param collectionName Name of the Firestore collection.\n   * @param data The data to be stored in the document.\n   * @returns {Promise}\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data).then(docRef => resolve(docRef.id)\n      ).catch(err => reject(err));\n    });\n  }\n\n  /**\n   * Creates a new document with a specific ID in a Firestore collection.\n   * @param collectionName The name of the Firestore collection.\n   * @param data The data to be stored in the document.\n   * @param docId The ID of the document to be created.\n   * @returns {Promise}\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /** \n     * Updates an existing document in a Firestore collection.\n     * @param collectionName The name of the Firestore collection.\n     * @param document  ID of the document to update.\n     * @param data Updated data to be stored in the document.\n     * @returns {Promise}\n     */\n  public updateDocument(collectionName: string, document: string | undefined, data: any): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data).then(docRef => resolve()\n      ).catch(err => reject(err));\n    });\n  }\n\n  /**\n * Retrieves all documents from a Firestore collection.\n * @param collectionName The name of the Firestore collection.\n * @returns {Promise}\n */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      const querySnapshot = await getDocs(collection(this._db!, collectionName));\n      resolve(querySnapshot.docs.map(doc => {\n        return { id: doc.id, data: doc.data() }\n      }));\n    });\n  }\n\n  /**\n  * Retrieves paginated documents from a Firestore collection.\n  * @param collectionName The name of the Firestore collection.\n  * @param pageSize The number of documents to fetch per page.\n  * @param filterBy The field to use for ordering.\n  * @param lastDocument The last document from the previous page (optional).\n  * @returns {Promise}\n  */\n  public getDocumentsPaginated(collectionName: string, pageSize: number, filterBy: string, lastDocument?: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: \"Database is not connected\"\n        });\n      }\n\n      let collectionRef = (collection(this._db, collectionName))\n      const q = query(collectionRef, orderBy(filterBy));\n      let paginatedQuery = query(q, limit(pageSize));\n      if (lastDocument) {\n        paginatedQuery = query(q, startAfter(lastDocument), limit(pageSize));\n      }\n\n      getDocs(paginatedQuery)\n        .then(querySnapshot => {\n          const documents = querySnapshot.docs.map(doc => {\n            return { id: doc.id, data: doc.data() };\n          });\n          resolve(documents);\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * Retrieves a single document from Firestore.\n   * @param collectionName The name of the collection.\n   * @param document The ID of the document to retrieve.\n   * @returns {Promise}\n   */\n  public getDocument(collectionName: string, document: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n  * Retrieves documents from Firestore filtered by a specific field and value.\n  * @param collectionName The name of the collection.\n  * @param field The field to filter documents by.\n  * @param value The value to filter documents by.\n  * @returns {Promise}\n  */\n  public getDocumentsBy(collectionName: string, field: string, value: any): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      const q = query(collection(this._db!, collectionName), where(field, \"==\", value));\n\n      const querySnapshot = await getDocs(q);\n      resolve(querySnapshot.docs.map(doc => {\n        return { id: doc.id, data: doc.data() }\n      }));\n    });\n  }\n\n  /**\n   * Retrieves documents from Firestore filtered by a specific field and value, with optional case-sensitive filtering.\n   * @param collectionName The name of the collection.\n   * @param field The field to filter documents by.\n   * @param value The value to filter documents by.\n   * @param capitalize Whether to capitalize the search value.\n   * @returns {Promise}\n   */\n  public getDocumentsFiltered(collectionName: string, field: string, value: any, capitalize: boolean = false): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      let search = value\n      if (capitalize) {\n        search = value.charAt(0).toUpperCase() + value.slice(1).toLowerCase();\n      }\n      const q = query(collection(this._db!, collectionName), where(field, \">=\", search), where(field, \"(doc => {\n        return { id: doc.id, data: doc.data() }\n      }));\n    });\n  }\n\n  /**\n     * Deletes a document from Firestore.\n     * @param collectionName The name of the collection.\n     * @param docId The ID of the document to delete.\n     * @returns {Promise}\n     */\n  public deleteDocument(collectionName: string, docId: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: \"Database is not connected\"\n        });\n      resolve(await deleteDoc(doc(this._db!, collectionName, docId)));\n    });\n  }\n\n  /**\n  * Subscribes to changes in a Firestore collection.\n  * @param collectionName The name of the collection.\n  * @param subject The BehaviorSubject to update with collection changes.\n  * @param mapFunction The function to map DocumentData to a specific format.\n  * @returns A function to unsubscribe from the snapshot listener.\n  */\n  public subscribeToCollection(collectionName: string, subject: BehaviorSubject, mapFunction: (el: DocumentData) => any): Unsubscribe | null {\n    if (!this._db)\n      return null;\n    return onSnapshot(collection(this._db, collectionName), (snapshot) => {\n      subject.next(snapshot.docs.map(doc => mapFunction(doc)));\n    }, error => { });\n  }\n\n  /**\n   * Signs out the current user.\n   * @param signInAnon Whether to sign in anonymously after signing out.\n   * @returns {Promise}\n   */\n  public signOut(signInAnon: boolean = false): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon)\n            await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n\n  }\n\n  /**\n   * Checks if a user is currently connected.\n   * @returns {Promise}\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth)\n        resolve(false);\n      resolve(this._auth!.currentUser != null)\n    });\n    return response;\n  }\n\n  /**\n   * Checks if a user is currently connected anonymously.\n   * @returns {Promise}\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth)\n        resolve(false);\n      resolve(this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous);\n    });\n    return response;\n\n  }\n\n  /**\n  * Connects to Firebase anonymously.\n  * @returns {Promise}\n  */\n  public connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth)\n        resolve();\n      if (!(await this.isUserConnected()) && !(await this.isUserConnectedAnonymously())) {\n        await signInAnonymously(this._auth!).catch(error => reject(error));\n        resolve();\n      }\n      else if (await this.isUserConnectedAnonymously())\n        resolve();\n      else\n        reject({ msg: \"An user is already connected\" });\n\n    });\n    return response;\n  }\n\n  /**\n   * Creates a new user account with email and password.\n   * @param email The user's email address.\n   * @param password The user's password.\n   * @returns {Promise}\n   */\n  public createUserWithEmailAndPassword(email: string, password: string): Promise {\n    console.log(\"create user\", email, password)\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth)\n        resolve(null);\n      try {\n        console.log(\"AUTH:\", this._auth, email, password)\n        resolve({ user: await createUserWithEmailAndPassword(this._auth!, email, password) });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log('Password is not strong enough. Add additional characters including special characters and numbers.');\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n\n  }\n\n  /**\n  * Signs in a user with email and password.\n  * @param email The user's email address.\n  * @param password The user's password.\n  * @returns {Promise}\n  */\n  public connectUserWithEmailAndPassword(email: string, password: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth)\n        resolve(null);\n      resolve({ user: await signInWithEmailAndPassword(this._auth!, email, password) });\n    });\n\n  }\n\n  /**\n  * Deletes the currently signed-in user account.\n  * @returns {Promise}\n  */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user)\n        reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n  * Updates a specific field of a document in Firestore.\n  * @param collectionName The name of the collection.\n  * @param document The ID of the document to update.\n  * @param fieldName The name of the field to update.\n  * @param fieldValue The new value of the field.\n  * @returns {Promise}\n  */\n  public updateDocumentField(collectionName: string, document: string, fieldName: string, fieldValue: any): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: \"Database is not connected\"\n        });\n      }\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Formats.html":{"url":"interfaces/Formats.html","title":"interface - Formats","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Formats\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            large\n                                        \n                                \n                                \n                                        \n                                            medium\n                                        \n                                \n                                \n                                        \n                                            small\n                                        \n                                \n                                \n                                        \n                                            thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        large\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        large:         Large\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Large\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        medium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        medium:         Medium\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Medium\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        small\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        small:         Small\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Small\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnail:         Thumbnail\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Thumbnail\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiData {\n  id: number,\n  attributes: T\n}\n\nexport interface StrapiArrayResponse {\n  data: StrapiData[],\n  meta: {\n    pagination?: {\n      page: number,\n      pageSize: number,\n      pageCount: number,\n      total: number,\n    }\n  }\n}\n\nexport interface StrapiResponse {\n  data: StrapiData\n}\n\nexport interface StrapiUser {\n  id: number,\n  username: string,\n  email: string\n}\n\nexport type StrapiMe = StrapiUser;\n\nexport interface StrapiLoginPayload {\n  identifier: string,\n  password: string\n}\n\nexport interface StrapiRegisterPayload {\n  email: string,\n  password: string,\n  username: string\n}\n\nexport interface StrapiLoginResponse {\n  jwt: string,\n  user: StrapiUser\n}\n\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\nexport interface StrapiExtendedUser {\n  data: {\n    user_id: number,\n    user: number\n  }\n  \n}\n\n\nexport type StrapiUploadResponse = StrapiMedia[]\n\nexport interface StrapiMedia {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                currentPosition\n                            \n                            \n                                is\n                            \n                            \n                                    Public\n                                islandService\n                            \n                            \n                                isModalOpen\n                            \n                            \n                                    Public\n                                loanService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHemisphere\n                            \n                            \n                                    Async\n                                hemisphereAlert\n                            \n                            \n                                    Public\n                                loans\n                            \n                            \n                                    Async\n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteClicked\n                            \n                            \n                                onEditClicked\n                            \n                            \n                                onLoanClicked\n                            \n                            \n                                    Async\n                                onNewIsland\n                            \n                            \n                                    Async\n                                presentForm\n                            \n                            \n                                    Async\n                                presentLoanForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(islandService: IslandService, authService: AuthStrapiService, modal: ModalController, loanService: LoanService, router: Router, alertController: AlertController, translate: TranslateService, usersvc: UserService, loanSvc: LoanService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        islandService\n                                                  \n                                                        \n                                                                        IslandService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthStrapiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loanService\n                                                  \n                                                        \n                                                                        LoanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loanSvc\n                                                  \n                                                        \n                                                                        LoanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getHemisphere\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHemisphere()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:146\n                        \n                    \n\n\n            \n                \n                        Retrieves the user's hemisphere based on current geolocation.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise resolving to the user's hemisphere ('north' or 'south').\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hemisphereAlert\n                        \n                    \n                \n            \n            \n                \n                        \n                    hemisphereAlert(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:106\n                        \n                    \n\n\n            \n                \n                        Displays an alert confirming the hemisphere choice for the island.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Data object containing island information.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loans\n                        \n                    \n                \n            \n            \n                \n                        \n                    loans()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:56\n                        \n                    \n\n\n            \n                \n                        Navigates to the loans page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:46\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called after Angular initializes the component's views and child views.\nSubscribes to user's island status and loan data on view initialization.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClicked\n                        \n                    \n                \n            \n            \n                \nonDeleteClicked(loan: Loan)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:235\n                        \n                    \n\n\n            \n                \n                        Deletes the specified loan.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loan\n                                            \n                                                            Loan\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The loan object to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEditClicked\n                        \n                    \n                \n            \n            \n                \nonEditClicked(is: Island)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:160\n                        \n                    \n\n\n            \n                \n                        Initiates editing of an existing island.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                is\n                                            \n                                                            Island\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLoanClicked\n                        \n                    \n                \n            \n            \n                \nonLoanClicked(loan: Loan)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:214\n                        \n                    \n\n\n            \n                \n                        Initiates editing of an existing loan.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loan\n                                            \n                                                            Loan\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The loan object to be edited.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onNewIsland\n                        \n                    \n                \n            \n            \n                \n                        \n                    onNewIsland()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:84\n                        \n                    \n\n\n            \n                \n                        Initiates the process of adding a new island.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentForm(data: Island | null, onDismiss: (result: any) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:65\n                        \n                    \n\n\n            \n                \n                        Presents the island form modal for adding a new island or updating an existing one.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Island | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Optional data object containing island information for editing.\n\n                                            \n                                        \n                                        \n                                                onDismiss\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Callback function called when the modal is dismissed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentLoanForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentLoanForm(data: Loan | null, onDismiss: (result: any) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:194\n                        \n                    \n\n\n            \n                \n                        Presents the loan form modal for adding a new loan or updating an existing one.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Loan | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Optional data object containing loan information for editing.\n\n                                            \n                                        \n                                        \n                                                onDismiss\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Callback function called when the modal is dismissed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthStrapiService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        islandService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IslandService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isModalOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loanService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoanService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertController, ModalController } from '@ionic/angular';\nimport { Island } from 'src/app/core/interfaces/island';\nimport { Loan } from 'src/app/core/interfaces/loan';\nimport { AuthStrapiService } from 'src/app/core/services/api/strapi/auth-strapi.service';\nimport { IslandService } from 'src/app/core/services/island.service';\nimport { LoanService } from 'src/app/core/services/loan.service';\nimport { IslandFormComponent } from 'src/app/shared/components/island-form/island-form.component';\nimport { LoanFormComponent } from 'src/app/shared/components/loan-form/loan-form.component';\nimport { Geolocation } from '@capacitor/geolocation';\nimport { TranslateService } from '@ngx-translate/core';\nimport { lastValueFrom } from 'rxjs';\nimport { UserService } from 'src/app/core/services/user.service';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n  is: boolean = false;\n  isModalOpen = false\n  currentPosition: any;\n\n  constructor(\n    public islandService: IslandService,\n    public authService: AuthStrapiService,\n    private modal: ModalController,\n    public loanService: LoanService,\n    private router: Router,\n    private alertController: AlertController,\n    private translate: TranslateService,\n    private usersvc: UserService,\n    private loanSvc: LoanService\n  ) { }\n\n  ngOnInit() { };\n\n  /**\n   * Lifecycle hook called after Angular initializes the component's views and child views.\n   * Subscribes to user's island status and loan data on view initialization.\n   */\n  async ngAfterViewInit() {\n    this.islandService.getUserIsland().subscribe(is => {\n      this.is = !!is;\n    })\n    this.loanService.getUserLoans().subscribe()\n  }\n\n  /**\n  * Navigates to the loans page.\n  */\n  public loans() {\n    this.router.navigate(['/loans'])\n  }\n\n  /**\n   * Presents the island form modal for adding a new island or updating an existing one.\n   * @param data Optional data object containing island information for editing.\n   * @param onDismiss Callback function called when the modal is dismissed.\n   */\n  async presentForm(data: Island | null, onDismiss: (result: any) => void) {\n    const modal = await this.modal.create({\n      component: IslandFormComponent,\n      componentProps: {\n        island: data\n      }\n    });\n    modal.present();\n    modal.onDidDismiss().then(result => {\n      this.isModalOpen = false;\n      if (result && result.data) {\n        onDismiss(result);\n      }\n    })\n  }\n\n  /**\n    * Initiates the process of adding a new island.\n    */\n  async onNewIsland() {\n    this.isModalOpen = true;\n    var onDismiss = async (info: any) => {\n      switch (info.role) {\n        case 'submit': {\n          this.hemisphereAlert(info.data);\n          this.isModalOpen = false;\n        }\n          break;\n        default: {\n          this.isModalOpen = false;\n          console.error(\"Error\");\n        }\n      }\n    }\n    this.presentForm(null, onDismiss);\n  }\n\n  /**\n   * Displays an alert confirming the hemisphere choice for the island.\n   * @param data Data object containing island information.\n   */\n  async hemisphereAlert(data: any) {\n    let hemisphere = await this.getHemisphere();\n    const alert = await this.alertController.create({\n      mode: 'ios',\n      header: await lastValueFrom(this.translate.get('island.hemisphere.confirm')),\n      message: `${await lastValueFrom(this.translate.get('island.hemisphere.youarein'))} ${await lastValueFrom(this.translate.get(`island.hemisphere.${hemisphere}`))} ${await lastValueFrom(this.translate.get('island.hemisphere.continue'))}`,\n      buttons: [\n        {\n          text: await lastValueFrom(this.translate.get('island.hemisphere.yes')),\n          handler: () => {\n            const isData = { ...data, hemisphere };\n            this.islandService.getUserIsland().subscribe(updatedIsland => {\n              this.is = !!updatedIsland\n            });\n            this.islandService.addIsland(isData).subscribe();\n          },\n        },\n        {\n          text: await lastValueFrom(this.translate.get('island.hemisphere.no')),\n          handler: () => {\n            if (hemisphere === 'north')\n              hemisphere = 'south';\n            else\n              hemisphere = 'north';\n            const isData = { ...data, hemisphere };\n            this.islandService.getUserIsland().subscribe(updatedIsland => {\n              this.is = !!updatedIsland\n            });\n            this.islandService.addIsland(isData).subscribe();\n          }\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  /**\n  * Retrieves the user's hemisphere based on current geolocation.\n  * @returns A promise resolving to the user's hemisphere ('north' or 'south').\n  */\n  async getHemisphere(): Promise {\n    try {\n      const coordinates = await Geolocation.getCurrentPosition();\n      return coordinates.coords.latitude >= 0 ? 'north' : 'south';\n    } catch (error) {\n      console.error('Error obteniendo la geolocalización:', error);\n      return 'unknown';\n    }\n  }\n\n  /**\n     * Initiates editing of an existing island.\n     * @param island The island object to be edited.\n     */\n  onEditClicked(is: Island) {\n    this.isModalOpen = true;\n    var onDismiss = (info: any) => {\n      switch (info.role) {\n        case 'submit': {\n          this.islandService.updateIsland(is, info).subscribe(is => {\n            this.is = !!is;\n            this.isModalOpen = false;\n          })\n          this.islandService.getUserIsland().subscribe();\n        }\n          break;\n        case 'delete': {\n          this.is = false;\n          this.isModalOpen = false;\n          this.loanService.getUserLoans().subscribe();\n          this.islandService.deleteIsland(is).subscribe()\n        }\n          break;\n        default: {\n          this.isModalOpen = false;\n          console.error(\"Error\")\n        }\n      }\n    }\n    this.presentForm(is, onDismiss);\n  }\n\n\n  /**\n   * Presents the loan form modal for adding a new loan or updating an existing one.\n   * @param data Optional data object containing loan information for editing.\n   * @param onDismiss Callback function called when the modal is dismissed.\n   */\n  async presentLoanForm(data: Loan | null, onDismiss: (result: any) => void) {\n    const modal = await this.modal.create({\n      component: LoanFormComponent,\n      componentProps: {\n        loan: data\n      }\n    });\n    modal.present();\n    modal.onDidDismiss().then(result => {\n      this.isModalOpen = false;\n      if (result && result.data) {\n        onDismiss(result);\n      }\n    })\n  }\n\n  /**\n  * Initiates editing of an existing loan.\n  * @param loan The loan object to be edited.\n  */\n  onLoanClicked(loan: Loan) {\n    this.isModalOpen = true;\n    var onDismiss = (info: any) => {\n      switch (info.role) {\n        case 'submit': {\n          loan.attributes = info.data\n          this.loanService.updateLoan(loan).subscribe();\n        }\n          break;\n        default: {\n          console.error(\"Error\")\n        }\n      }\n    }\n    this.presentLoanForm(loan, onDismiss);\n  }\n\n  /**\n    * Deletes the specified loan.\n    * @param loan The loan object to be deleted.\n    */\n  onDeleteClicked(loan: Loan) {\n    this.loanService.deleteLoan(loan).subscribe(deleted => { });\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n  \n\n  \n    \n      \n        {{ 'home.seeAll' | translate}}\n        \n      \n      \n        {{ 'home.myLoans' | translate }}\n      \n      \n      \n    \n    \n      \n      \n    \n  \n  \n    \n      {{ 'home.message' | translate }}\n    \n    \n      \n    \n\n  \n\n    \n\n    \n                \n                    home.page.scss\n                \n                .hero {\n  background-image: url(\"../../../assets/images/background_cropped.jpg\");\n  height: 60vh;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-attachment: scroll;\n  background-position: center;\n}\n\n.content {\n  position: relative;\n  background-color: var(--ion-background-color);\n  border-radius: 25px 25px 0 0;\n  padding: 3rem;\n  margin-top: -50px;\n  z-index: 2;\n  box-shadow: 0 -10px 20px rgba(0, 0, 0, 0.3);\n  min-height: 600px;\n  height: fit-content;\n  display: flex;\n  flex-direction: row;\n}\n\n.noIs{\n  position: relative;\n  background-color: var(--ion-background-color);\n  border-radius: 25px 25px 0 0;\n  padding: 3rem;\n  margin-top: -50px;\n  z-index: 2;\n  box-shadow: 0 -10px 20px rgba(0, 0, 0, 0.3);\n  height: 600px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: var(--ion-color-secondary-shade);\n}\n\n\n.islands {\n  flex: 0 0 65%;\n  padding: 0 2rem 0 2rem;\n  margin-top: -0.5rem;\n  height: 590px;\n}\n\n\n.title {\n  margin-top: -2.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  border-bottom: 1.5px solid #ffffff5b;\n  color: var(--ion-background-color);\n  padding-left: 1rem;\n}\n\n\n.loans {\n  padding: 1rem;\n  width: 35%;\n  gap:1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: start;\n  background-color: var(--ion-color-primary-shade);\n  border-radius: 20px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\n}\n\n\n.loan {\n  width: 100%;\n}\n\nion-button  {\n  --border-radius: 15px;\n}\n\n.seeAll {\n    position: relative;\n    width: 8rem;\n    height: 2.5rem;\n    top: -2.3rem;\n    left: -1rem;\n    z-index: 10;\n    display: flex;\n    justify-content: center;\n    align-self: flex-end;\n    font-weight: bold;\n    \n}\n\n\n@media only screen and (width\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ \\'home.seeAll\\' | translate}}                            {{ \\'home.myLoans\\' | translate }}                                                        {{ \\'home.message\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule,\n    SharedModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageRoutingModule\n\n\n\ncluster_HomePageRoutingModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageRoutingModule -->\n\nSharedModule->HomePageRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes), SharedModule],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientProvider.html":{"url":"injectables/HttpClientProvider.html","title":"injectable - HttpClientProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http/http-client.provider copy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                delete\n                            \n                            \n                                    Public\n                                    Abstract\n                                get\n                            \n                            \n                                    Public\n                                    Abstract\n                                getImage\n                            \n                            \n                                    Public\n                                    Abstract\n                                patch\n                            \n                            \n                                    Public\n                                    Abstract\n                                post\n                            \n                            \n                                    Public\n                                    Abstract\n                                put\n                            \n                            \n                                    Public\n                                    Abstract\n                                setServerTrustMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider copy.ts:73\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        delete\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider copy.ts:30\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        get\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImage(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider copy.ts:18\n                        \n                    \n\n\n            \n                \n                        getImage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider copy.ts:63\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        patch\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider copy.ts:41\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        post\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider copy.ts:52\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        put\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        setServerTrustMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    setServerTrustMode(mode: \"default\" | \"nocheck\" | \"pinned\" | \"legacy\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider copy.ts:79\n                        \n                    \n\n\n            \n                \n                        Sets the trust mode for the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mode\n                                            \n                                                        \"default\" | \"nocheck\" | \"pinned\" | \"legacy\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    server trust mode\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n// rxjs\nimport { Observable } from 'rxjs';\n\n@Injectable({providedIn:'root'})\nexport abstract class HttpClientProvider {\n\n\n    /**\n     * getImage\n     *\n     * @param url http request url\n     * @param options http request options\n     * @returns observable with http response\n     */\n     public abstract getImage(\n        url: string\n    ): Observable;\n\n    /**\n     * get\n     *\n     * @param url http request url\n     * @param params http request params\n     * @param headers http request headers\n     * @returns observable with http response\n     */\n    public abstract get(url: string, params: any, headers: any): Observable;\n\n    /**\n     * post\n     *\n     * @param url http request url\n     * @param body http request body\n     * @param headers http request headers\n     * @param urlEncoded http request as url encoded content-type\n     * @returns observable with http response\n     */\n    public abstract post(url: string, body: any, headers: any, urlEncoded?: boolean): Observable;\n\n    /**\n     * put\n     *\n     * @param url http request url\n     * @param body http request body\n     * @param headers http request headers\n     * @param urlEncoded http request as url encoded content-type\n     * @returns observable with http response\n     */\n    public abstract put(url: string, body: any, headers: any, urlEncoded?: boolean): Observable;\n\n    /**\n     * patch\n     *\n     * @param url http request url\n     * @param body http request body\n     * @param headers http request headers\n     * @param urlEncoded http request as url encoded content-type\n     * @returns observable with http response\n     */\n    public abstract patch(url: string, body: any, headers: any, urlEncoded?: boolean): Observable;\n\n    /**\n     * delete\n     *\n     * @param url http request url\n     * @param params http request params\n     * @param headers http request headers\n     * @returns observable with http response\n     */\n    public abstract delete(url: string, params: any, headers: any): Observable;\n\n    /**\n     * Sets the trust mode for the server\n     * @param mode server trust mode\n     */\n    public abstract setServerTrustMode(mode: 'default' | 'nocheck' | 'pinned' | 'legacy'): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpClientWebProvider.html":{"url":"classes/HttpClientWebProvider.html","title":"class - HttpClientWebProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpClientWebProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http/http-client-web.provider.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            HttpClientProvider\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createBody\n                            \n                            \n                                    Private\n                                createHeaders\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getImage\n                            \n                            \n                                    Public\n                                patch\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                setServerTrustMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/http/http-client-web.provider.ts:11\n                            \n                        \n\n                \n                    \n                            provider constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                angular http client\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBody\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBody(body: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client-web.provider.ts:180\n                        \n                    \n\n\n            \n                \n                        create http request body\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any | HttpParams\n\n                        \n                            \n                                http request body\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    createHeaders(headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client-web.provider.ts:162\n                        \n                    \n\n\n            \n                \n                        create http headers\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                angular http headers\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:136\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        delete\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        get\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImage(url: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:29\n\n                        \n                    \n\n\n            \n                \n                        getImage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:110\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        patch\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:68\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        post\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:89\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        put\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setServerTrustMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    setServerTrustMode(mode: \"default\" | \"nocheck\" | \"pinned\" | \"legacy\")\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:153\n\n                        \n                    \n\n\n            \n                \n                        Sets the trust mode for the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mode\n                                            \n                                                        \"default\" | \"nocheck\" | \"pinned\" | \"legacy\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    server trust mode\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n// rxjs\nimport { Observable } from 'rxjs';\n\n// providers\nimport { HttpClientProvider } from './http-client.provider copy';\n\nexport class HttpClientWebProvider extends HttpClientProvider {\n\n    /**\n     * provider constructor\n     *\n     * @param httpClient angular http client\n     */\n    constructor(private readonly httpClient: HttpClient) {\n        super();\n    }\n\n    /**\n     * getImage\n     *\n     * @param url http request url\n     * @param options http request options\n     * @returns observable with http response\n     */\n     public getImage(\n        url: string\n    ): Observable{\n        return this.httpClient.get(url, {\n            responseType:\"blob\"\n        });\n    }\n\n    /**\n     * get\n     *\n     * @param url http request url\n     * @param params http request params\n     * @param headers http request headers\n     * @returns observable with http response\n     */\n    public get(\n        url: string,\n        params: any = {},\n        headers: any = {}\n    ): Observable {\n\n        return this.httpClient.get(url, {\n            params: new HttpParams({ fromObject: params }),\n            headers: this.createHeaders(headers)\n        });\n    }\n\n\n    \n    /**\n     * post\n     *\n     * @param url http request url\n     * @param body http request body\n     * @param headers http request headers\n     * @param urlEncoded http request as url encoded content-type\n     * @returns observable with http response\n     */\n    public post(\n        url: string,\n        body: any = {},\n        headers: any = {},\n        urlEncoded: boolean = false\n    ): Observable {\n\n        return this.httpClient.post(url, this.createBody(body, urlEncoded), {\n            headers: this.createHeaders(headers, urlEncoded)\n        });\n    }\n\n    /**\n     * put\n     *\n     * @param url http request url\n     * @param body http request body\n     * @param headers http request headers\n     * @param urlEncoded http request as url encoded content-type\n     * @returns observable with http response\n     */\n    public put(\n        url: string,\n        body: any = {},\n        headers: any = {},\n        urlEncoded: boolean = false\n    ): Observable {\n\n        return this.httpClient.put(url, this.createBody(body, urlEncoded), {\n            headers: this.createHeaders(headers, urlEncoded)\n        });\n    }\n\n    /**\n     * patch\n     *\n     * @param url http request url\n     * @param body http request body\n     * @param headers http request headers\n     * @param urlEncoded http request as url encoded content-type\n     * @returns observable with http response\n     */\n    public patch(\n        url: string,\n        body: any = {},\n        headers: any = {},\n        urlEncoded: boolean = false\n    ): Observable {\n\n        if(body instanceof FormData){\n            return this.httpClient.patch(url, body, {headers:headers});\n        }\n        else{\n            return this.httpClient.patch(url, this.createBody(body, urlEncoded), {\n                headers: this.createHeaders(headers, urlEncoded)\n            });\n        }\n        \n    }\n\n    /**\n     * delete\n     *\n     * @param url http request url\n     * @param params http request params\n     * @param headers http request headers\n     * @returns observable with http response\n     */\n    public delete(\n        url: string,\n        params: any = {},\n        headers: any = {}\n    ): Observable {\n\n        return this.httpClient.delete(url, {\n            params: new HttpParams({ fromObject: params }),\n            headers: this.createHeaders(headers)\n        });\n    }\n\n    /**\n     * Sets the trust mode for the server\n     *\n     * @param mode server trust mode\n     */\n    public setServerTrustMode(mode: 'default' | 'nocheck' | 'pinned' | 'legacy'): void { }\n\n    /**\n     * create http headers\n     *\n     * @param headers http headers\n     * @param urlEncoded http request as url encoded content-type\n     * @returns angular http headers\n     */\n    private createHeaders(\n        headers: any,\n        urlEncoded: boolean = false\n    ): HttpHeaders {\n\n        var _headers = new HttpHeaders(headers);\n        if(urlEncoded)\n            _headers.set('Accept', ' application/x-www-form-urlencoded');\n        return _headers;\n    }\n\n    /**\n     * create http request body\n     *\n     * @param body http request body\n     * @param urlEncoded http request as url encoded content-type\n     * @returns http request body\n     */\n    private createBody(body: any, urlEncoded: boolean): any | HttpParams {\n\n        return urlEncoded\n            ? new HttpParams({ fromObject: body })\n            : body;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Island.html":{"url":"interfaces/Island.html","title":"interface - Island","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Island\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/island.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an island with its unique identifier, attributes such as name,\nvillagers residing on the island (optional), and hemisphere.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Villager } from \"./villager\"\n\n/**\n * Represents an island with its unique identifier, attributes such as name,\n * villagers residing on the island (optional), and hemisphere.\n */\nexport interface Island {\n    id:string,\n    attributes: {\n        name:string,\n        villagers:Villager[] | undefined,\n        hemisphere: string\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IslandComponent.html":{"url":"components/IslandComponent.html","title":"component - IslandComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IslandComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/island/island.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-island\n            \n\n\n\n            \n                styleUrls\n                ./island.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./island.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getVillagersSlots\n                            \n                            \n                                onEditClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                island\n                            \n                            \n                                showEdit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onEditClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/island/island.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        island\n                    \n                \n                \n                    \n                        Type :         Island | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/island/island.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showEdit\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/island/island.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onEditClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/island/island.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getVillagersSlots\n                        \n                    \n                \n            \n            \n                \ngetVillagersSlots()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/island/island.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Generates an array representing slots for villagers on the island.\nIf island has villagers, fills the slots with villagers; otherwise, fills with null.\n\n\n                        \n                            Returns :     []\n\n                        \n                            \n                                An array of Villager | null representing villagers slots.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEditClick\n                        \n                    \n                \n            \n            \n                \nonEditClick(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/island/island.component.ts:25\n                        \n                    \n\n\n            \n                \n                        Handler for edit button click.\nEmits onEditClicked event to notify parent component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Click event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Island } from 'src/app/core/interfaces/island';\nimport { Villager } from 'src/app/core/interfaces/villager';\n\n@Component({\n  selector: 'app-island',\n  templateUrl: './island.component.html',\n  styleUrls: ['./island.component.scss'],\n})\nexport class IslandComponent {\n\n  @Input() island: Island | null = null;\n  @Input() showEdit: boolean = false;\n\n\n  @Output() onEditClicked: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  /**\n    * Handler for edit button click.\n    * Emits `onEditClicked` event to notify parent component.\n    * @param event Click event object\n    */\n  onEditClick(event: any) {\n    this.onEditClicked.emit();\n  }\n\n  /**\n    * Generates an array representing slots for villagers on the island.\n    * If island has villagers, fills the slots with villagers; otherwise, fills with null.\n    * @returns An array of Villager | null representing villagers slots.\n    */\n  getVillagersSlots(): (Villager | null)[] {\n    const placeholders = [];\n    for (let i = 0; i \n    \n\n    \n        \n  {{ \"home.edit\" | translate }}\n  \n\n\n\n  \n    \n      {{ island?.attributes?.name | titlecase }}\n      \n        {{ island?.attributes?.hemisphere \n          ? (('island.hemisphere.' + island?.attributes?.hemisphere) | translate | titlecase) \n          : ('island.hemisphere.none' | translate)  }}\n      \n    \n  \n\n  \n    \n      \n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./island.component.scss\n                \n                ion-button  {\n    --border-radius: 15px;\n}\n\n.edit {\n    position: absolute;\n    width: 8rem;\n    height: 2.5rem;\n    top: 1.8rem;\n    right: 8rem;\n    z-index: 10;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-weight: bold;\n}\n\nion-card {\n    border-radius: 25px;\n    background-color: var(--ion-color-secondary);\n    height: 100%;\n    display: flex;\n    flex-direction:column;\n    gap: 1rem;\n}\n\nion-card-content {\n    background-color: transparent !important;\n    justify-self: center;\n}\n\n\n.island-card {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    overflow: visible;\n}\n\n.header {\n    display: flex;\n    flex: 0 0 40% 0;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    margin-top: 1rem;\n    padding: 1rem 1rem 0.5rem 1rem;\n    border-bottom: 1.5px solid #ffffff2d;\n    color: var(--ion-background-color);\n}\n\n.villagers {\n    display: flex;\n    flex-flow: row wrap;\n    position: relative;\n    align-items: center;\n    justify-content: center;\n    flex: 0 0 60% 0;\n    width: 100%;\n    padding: 10px;\n}\n\n\n.villager {\n    flex: 0 0 20%;\n    padding: 10px;\n    justify-self: center;\n    display: flex;\n    justify-content: center;\n}\n\n\nion-avatar {\n    width:6rem; \n    height:6rem; \n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    justify-self: center;\n    align-items: center;\n    border: 1.5px solid #ffffff2d;\n}\n\nion-avatar ion-img {\n    object-fit: contain;\n    width: 100%;\n    height: 100%;\n}\n\nion-avatar ion-icon {\n    color: var(--ion-background-color);\n    font-size: 3vw;\n    display: flex; \n    justify-content: center; \n    align-items: center;\n}\n\n@media only screen and (width\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \"home.edit\" | translate }}              {{ island?.attributes?.name | titlecase }}              {{ island?.attributes?.hemisphere           ? ((\\'island.hemisphere.\\' + island?.attributes?.hemisphere) | translate | titlecase)           : (\\'island.hemisphere.none\\' | translate)  }}                                                                        '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'IslandComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IslandFormComponent.html":{"url":"components/IslandFormComponent.html","title":"component - IslandFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IslandFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/island-form/island-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-island-form\n            \n\n\n\n            \n                styleUrls\n                ./island-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./island-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _island\n                            \n                            \n                                form\n                            \n                            \n                                mode\n                            \n                            \n                                numbers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                            \n                                    Async\n                                onDelete\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                island\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    island\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formModal: ModalController, formBuilder: FormBuilder, villagerService: VillagerService, alertController: AlertController, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/island-form/island-form.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        villagerService\n                                                  \n                                                        \n                                                                        VillagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        island\n                    \n                \n                \n                    \n                        Type :         Island | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/island-form/island-form.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/island-form/island-form.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Cancels the form operation and dismisses the modal with 'cancel' action.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onDelete\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/island-form/island-form.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Deletes the current island data, showing a confirmation alert before dismissal.\nDismisses the modal with 'delete' action if confirmed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/island-form/island-form.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Submits the form data and dismisses the modal with 'submit' action, passing the form value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _island\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Island | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/island-form/island-form.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/island-form/island-form.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"New\" | \"Edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'New'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/island-form/island-form.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numbers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/island-form/island-form.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        island\n                    \n                \n\n                \n                    \n                        getisland()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/island-form/island-form.component.ts:36\n                                \n                            \n\n                \n                    \n                        setisland(_island: Island | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/island-form/island-form.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _island\n                                                    \n                                                            \n                                                                            Island | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AlertController, ModalController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { lastValueFrom } from 'rxjs';\nimport { Island } from 'src/app/core/interfaces/island';\nimport { Villager } from 'src/app/core/interfaces/villager';\nimport { VillagerService } from 'src/app/core/services/villager.service';\n\n@Component({\n  selector: 'app-island-form',\n  templateUrl: './island-form.component.html',\n  styleUrls: ['./island-form.component.scss'],\n})\nexport class IslandFormComponent {\n\n  form: FormGroup;\n  _island: Island | null = null\n  mode: 'New' | 'Edit' = 'New';\n  numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  @Input() set island(_island: Island | null) {\n    if (_island) {\n      this.mode = 'Edit';\n      this.form.controls['name'].setValue(_island.attributes.name);\n      console.log(\"island\", _island.attributes.villagers)\n      if (_island.attributes.villagers) {\n        _island.attributes.villagers.forEach((villager, index) => {\n          this.form.controls['villager' + (index + 1)].setValue(_island.attributes.villagers![index]);\n        })\n      }\n    }\n  }\n\n\n  get island(): Island | null {\n    return this._island;\n  }\n\n  constructor(\n    private formModal: ModalController,\n    private formBuilder: FormBuilder,\n    private villagerService: VillagerService,\n    private alertController: AlertController,\n    private translate: TranslateService\n  ) {\n    this.form = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      villager1: [undefined],\n      villager2: [undefined],\n      villager3: [undefined],\n      villager4: [undefined],\n      villager5: [undefined],\n      villager6: [undefined],\n      villager7: [undefined],\n      villager8: [undefined],\n      villager9: [undefined],\n      villager10: [undefined]\n\n    })\n  }\n\n  /**\n * Cancels the form operation and dismisses the modal with 'cancel' action.\n */\n  onCancel() {\n    this.formModal.dismiss(null, 'cancel')\n  }\n\n  /**\n  * Submits the form data and dismisses the modal with 'submit' action, passing the form value.\n  */\n  onSubmit() {\n    this.formModal.dismiss(this.form.value, 'submit')\n  }\n\n  /**\n   * Deletes the current island data, showing a confirmation alert before dismissal.\n   * Dismisses the modal with 'delete' action if confirmed.\n   */\n  async onDelete() {\n    const alert = await this.alertController.create({\n      mode: 'ios',\n      header: await lastValueFrom(this.translate.get('island.alert.header')),\n      message: await lastValueFrom(this.translate.get('island.alert.message')),\n      buttons: [\n        {\n          text: await lastValueFrom(this.translate.get('island.alert.cancel')),\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Ok',\n          handler: () => {\n            this.formModal.dismiss(this.form.value, 'delete');\n          }\n        }\n      ]\n\n    });\n\n    await alert.present();\n  }\n}\n    \n\n    \n        \n  \n  \n    \n      \n    \n  \n  \n    {{ mode == 'New' ? ('island.form.new' | translate) : ('island.form.edit' | translate) }}\n  \n  \n    \n      \n    \n  \n\n\n\n  \n    \n      {{ 'island.name' | translate}}\n      \n    \n    \n    \n      \n    \n  \n  \n\n\n  {{mode==('New')?('main.create' | translate):('main.save' | translate)}}\n\n    \n\n    \n                \n                    ./island-form.component.scss\n                \n                ion-header {\n    background-color: var(--ion-color-primary);\n    color: white;\n}\n\nion-toolbar {\n    --background: var(--ion-color-secondary);\n    --color: white;\n}\n\nion-buttons {\n    --ion-color-base: white;\n}\n\nion-icon {\n    color: white;\n}\n\nion-title {\n    text-align: center;\n    color: white;\n}\n\nion-content {\n    --background: #f0f0f0;\n}\n\nion-item {\n    --background: white;\n    --color: var(--ion-text-color);\n    --placeholder-color: var(--ion-text-color);\n    border-radius: 8px;\n    margin-bottom: 10px;\n}\n\nion-input {\n    --padding-start: 8px;\n    --padding-end: 8px;\n}\n\nion-footer {\n    --background: var(--ion-color-primary);\n}\n\nion-button {\n    color: white;\n    font-weight: bold;\n    --background: var(--ion-color-secondary);\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ mode == \\'New\\' ? (\\'island.form.new\\' | translate) : (\\'island.form.edit\\' | translate) }}                                {{ \\'island.name\\' | translate}}                                  {{mode==(\\'New\\')?(\\'main.create\\' | translate):(\\'main.save\\' | translate)}}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'IslandFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IslandService.html":{"url":"injectables/IslandService.html","title":"injectable - IslandService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IslandService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/island.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _islands\n                            \n                            \n                                    Public\n                                islands$\n                            \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addIsland\n                            \n                            \n                                    Public\n                                deleteIsland\n                            \n                            \n                                    Public\n                                getUserIsland\n                            \n                            \n                                getUserIslandById\n                            \n                            \n                                    Public\n                                updateIsland\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fbSvc: FirebaseService, fbAuth: FirebaseAuthService, villagerService: VillagerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/island.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fbSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fbAuth\n                                                  \n                                                        \n                                                                        FirebaseAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        villagerService\n                                                  \n                                                        \n                                                                        VillagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addIsland\n                        \n                    \n                \n            \n            \n                \n                        \n                    addIsland(is: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/island.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Adds a new island for the current authenticated user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                is\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Island object containing island details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteIsland\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteIsland(is: Island)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/island.service.ts:128\n                        \n                    \n\n\n            \n                \n                        Deletes the island of the current authenticated user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                is\n                                            \n                                                            Island\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Island object representing the island to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUserIsland\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserIsland()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/island.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Retrieves the island of the current authenticated user.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserIslandById\n                        \n                    \n                \n            \n            \n                \ngetUserIslandById(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/island.service.ts:95\n                        \n                    \n\n\n            \n                \n                        Retrieves the island of a specific user by their UUID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    UUID of the user whose island is to be retrieved.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateIsland\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateIsland(is: Island, info: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/island.service.ts:145\n                        \n                    \n\n\n            \n                \n                        Updates the details of an existing island.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                is\n                                            \n                                                            Island\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Island object representing the island to be updated.\n\n                                            \n                                        \n                                        \n                                                info\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Updated information for the island.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable that completes when the island is successfully updated.}\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _islands\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/island.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        islands$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._islands.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/island.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"/islands\"\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/island.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Island } from '../interfaces/island';\nimport { ApiService } from './api/api.service';\nimport { DataService } from './api/strapi/data.service';\nimport { AuthStrapiService } from './api/strapi/auth-strapi.service';\nimport { FirebaseAuthService } from './api/firebase/firebase-auth.service';\nimport { FirebaseService } from './api/firebase/firebase.service';\nimport { VillagerService } from './villager.service';\nimport { Villager } from '../interfaces/villager';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IslandService {\n\n  private _islands: BehaviorSubject = new BehaviorSubject(null);\n  public islands$: Observable = this._islands.asObservable();\n  private path = \"/islands\"\n\n  constructor(\n    private fbSvc: FirebaseService,\n    private fbAuth: FirebaseAuthService,\n    private villagerService: VillagerService\n  ) { }\n\n   /**\n   * Adds a new island for the current authenticated user.\n   * @param is Island object containing island details.\n   * @returns {Observable}\n   */\n  public addIsland(is: any): Observable {\n    return new Observable(observer => {\n      let villagers: string[] = [];\n      for (let i = 1; i  {\n        this.fbSvc.createDocument(`users/${user!.uuid}/island`, postdata).then(() => {\n          observer.complete();\n        });\n      });\n    });\n  }\n\n   /**\n   * Retrieves the island of the current authenticated user.\n   * @returns {Observable}\n   */\n  public getUserIsland(): Observable {\n    return new Observable(observer => {\n      this.fbAuth.user$.subscribe(user => {\n        if (user) {\n          this.fbSvc.getDocuments(`users/${user!.uuid}/island`).then(isDoc => {\n            if (isDoc.length === 0) {\n              observer.next(undefined);\n              observer.complete();\n              return;\n            } else {\n              const villagerPromises = isDoc[0].data['villagers'].map((villagerName: string) => {\n                return this.villagerService.getVillagerByName(villagerName);\n              });\n              Promise.all(villagerPromises).then(completeVillagers => {\n                const island: Island = {\n                  id: isDoc[0]['id'],\n                  attributes: {\n                    name: isDoc[0].data['name'],\n                    hemisphere: isDoc[0].data['hemisphere'],\n                    villagers: completeVillagers\n                  }\n                };\n                observer.next(island);\n                observer.complete();\n                this._islands.next(island);\n              });\n            }\n          });\n        }\n      });\n    });\n  }\n\n  /**\n   * Retrieves the island of a specific user by their UUID.\n   * @param uuid UUID of the user whose island is to be retrieved.\n   * @returns {Observable}\n   */\n  getUserIslandById(uuid: string): Observable {\n    return new Observable(observer => {\n      this.fbSvc.getDocuments(`users/${uuid}/island`).then(isDoc => {\n        if (isDoc.length === 0) {\n          observer.next(undefined);\n          observer.complete();\n          return;\n        } else {\n          const villagerPromises = isDoc[0].data['villagers'].map((villagerName: string) => {\n            return this.villagerService.getVillagerByName(villagerName);\n          });\n          Promise.all(villagerPromises).then(completeVillagers => {\n            const island: Island = {\n              id: isDoc[0]['id'],\n              attributes: {\n                name: isDoc[0].data['name'],\n                hemisphere: isDoc[0].data['hemisphere'],\n                villagers: completeVillagers\n              }\n            };\n            observer.next(island);\n            observer.complete();\n          });\n        }\n      });\n    });\n  }\n\n  /**\n   * Deletes the island of the current authenticated user.\n   * @param is Island object representing the island to be deleted.\n   * @returns { Observable }\n   */\n  public deleteIsland(is: Island): Observable {\n    return new Observable(observer => {\n      this.fbAuth.user$.subscribe(user => {\n        this.fbSvc.deleteDocument(`users/${user!.uuid}/island`, is.id).then(() => {\n          observer.complete();\n          this._islands.next(null);\n        });\n      });\n    });\n  }\n\n  /**\n   * Updates the details of an existing island.\n   * @param is Island object representing the island to be updated.\n   * @param info Updated information for the island.\n   * @returns {An Observable that completes when the island is successfully updated.}\n   */\n  public updateIsland(is: Island, info: any): Observable {\n    let villagers: string[] = [];\n    for (let i = 1; i  {\n      let user = this.fbSvc.user\n      this.fbSvc.updateDocument(`users/${user!.uid}/island`, is.id, postdata).then(() => {\n        observer.complete();\n      });\n      this.getUserIsland();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Item.html":{"url":"interfaces/Item.html","title":"interface - Item","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Item\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/villagers/villagers.page.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { OverlayPanel } from 'primeng/overlaypanel';\nimport { BehaviorSubject } from 'rxjs';\nimport { Pagination } from 'src/app/core/interfaces/data';\nimport { Villager } from 'src/app/core/interfaces/villager';\nimport { VillagerService } from 'src/app/core/services/villager.service';\n\ninterface Item {\n  label: string;\n  index: number;\n}\n\n@Component({\n  selector: 'app-villagers',\n  templateUrl: './villagers.page.html',\n  styleUrls: ['./villagers.page.scss'],\n})\nexport class VillagersPage implements OnInit {\n  items: Item[] = [];\n  villagers: any[] | undefined;\n  constructor(\n    public villagerService: VillagerService,\n    public modal: ModalController\n  ) { }\n  /**\n   * Initialize component by fetching initial list of villagers.\n   */\n  ngOnInit(): void {\n    this.villagerService.getPaginatedVillagers().subscribe()\n}\n  /**\n   * Load more villagers on infinite scroll event.\n   * @param event Event object from the infinite scroll.\n   */\n  doInfinite(event: any) {\n    this.villagerService.getPaginatedVillagers().subscribe(() => {\n      event.target.complete();\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtService.html":{"url":"injectables/JwtService.html","title":"injectable - JwtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/strapi/jwt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroyToken\n                            \n                            \n                                getToken\n                            \n                            \n                                loadToken\n                            \n                            \n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/strapi/jwt.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroyToken\n                        \n                    \n                \n            \n            \n                \ndestroyToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/strapi/jwt.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/strapi/jwt.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         JwtToken\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadToken\n                        \n                    \n                \n            \n            \n                \nloadToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/strapi/jwt.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveToken\n                        \n                    \n                \n            \n            \n                \nsaveToken(token: JwtToken)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/strapi/jwt.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            JwtToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/strapi/jwt.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Preferences } from '@capacitor/preferences';\n\nexport type JwtToken = string;\n@Injectable({providedIn: 'root'})\nexport class JwtService {\n\n  token: string = \"\";\n\n  constructor() {\n  }\n\n  loadToken(): Observable {\n    return new Observable(observer => {\n      Preferences.get({key:'jwtToken'}).then((ret:any) => {\n        if (ret['value']) {\n          this.token = JSON.parse(ret.value);\n          if(this.token == '' || this.token == null) {\n            observer.error('No token');\n          } else {\n            observer.next(this.token);\n            observer.complete();\n          }\n        }\n        else {\n          observer.error('No token');\n        }\n      }).catch((error:any) => observer.error(error));\n    });\n  }\n\n  getToken(): JwtToken {\n    return this.token;\n  }\n\n  saveToken(token: JwtToken):Observable {\n    return new Observable(observer => {\n      Preferences.set({\n        key: 'jwtToken',\n        value: JSON.stringify(token)\n      }).then((_) => {\n        this.token = token;\n        observer.next(this.token);\n        observer.complete();\n      }).catch((error:any) => {\n        observer.error(error);\n      });\n    });\n  }\n\n  destroyToken(): Observable {\n    //this.token = null;\n    this.token = \"\";\n    return this.saveToken(this.token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Large.html":{"url":"interfaces/Large.html","title":"interface - Large","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Large\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiData {\n  id: number,\n  attributes: T\n}\n\nexport interface StrapiArrayResponse {\n  data: StrapiData[],\n  meta: {\n    pagination?: {\n      page: number,\n      pageSize: number,\n      pageCount: number,\n      total: number,\n    }\n  }\n}\n\nexport interface StrapiResponse {\n  data: StrapiData\n}\n\nexport interface StrapiUser {\n  id: number,\n  username: string,\n  email: string\n}\n\nexport type StrapiMe = StrapiUser;\n\nexport interface StrapiLoginPayload {\n  identifier: string,\n  password: string\n}\n\nexport interface StrapiRegisterPayload {\n  email: string,\n  password: string,\n  username: string\n}\n\nexport interface StrapiLoginResponse {\n  jwt: string,\n  user: StrapiUser\n}\n\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\nexport interface StrapiExtendedUser {\n  data: {\n    user_id: number,\n    user: number\n  }\n  \n}\n\n\nexport type StrapiUploadResponse = StrapiMedia[]\n\nexport interface StrapiMedia {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/LatestThreePipe.html":{"url":"pipes/LatestThreePipe.html","title":"pipe - LatestThreePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  LatestThreePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/latest-three.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        latestThree\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(items: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/latest-three.pipe.ts:12\n                        \n                    \n\n\n            \n                \n                        Transforms an array of items to return the latest three based on their createdAt property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                items\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The array of items to be transformed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                The sorted array containing the latest three items.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'latestThree'\n})\nexport class LatestThreePipe implements PipeTransform {\n  /**\n   * Transforms an array of items to return the latest three based on their `createdAt` property.\n   * @param items The array of items to be transformed.\n   * @returns The sorted array containing the latest three items.\n   */\n  transform(items: any[]): any[] {\n    if (!items) {\n      return [];\n    }\n    return items.sort((a, b) => b.createdAt - a.createdAt).slice(0, 3);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Loan.html":{"url":"interfaces/Loan.html","title":"interface - Loan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Loan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/loan.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a loan with its unique identifier and attributes including type,\namount paid, total amount, completion status, and title.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Loan {\n    id:string,\n    attributes: {\n        type:string,\n        amountPaid:number,\n        amountTotal:number,\n        completed:boolean,\n        title:string\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/LoanCompletedPipe.html":{"url":"pipes/LoanCompletedPipe.html","title":"pipe - LoanCompletedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  LoanCompletedPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/loan-completed.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        loanCompleted\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(loans: Loan[], completed: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/loan-completed.pipe.ts:15\n                        \n                    \n\n\n            \n                \n                        Transforms an array of loans to return only those that match the completed status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loans\n                                            \n                                                            Loan[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The array of loans to be filtered.\n\n                                            \n                                        \n                                        \n                                                completed\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The completion status to filter by.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Loan[]\n\n                        \n                            \n                                The filtered array of loans.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Loan } from 'src/app/core/interfaces/loan';\n\n@Pipe({\n  name: 'loanCompleted'\n})\nexport class LoanCompletedPipe implements PipeTransform {\n\n /**\n   * Transforms an array of loans to return only those that match the completed status.\n   * @param loans The array of loans to be filtered.\n   * @param completed The completion status to filter by.\n   * @returns The filtered array of loans.\n   */\n  transform(loans: Loan[], completed: boolean): Loan[] {\n    if (!loans) {\n      return [];\n    }\n    return loans.filter(loan => loan.attributes.completed === completed);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoanComponent.html":{"url":"components/LoanComponent.html","title":"component - LoanComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoanComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/loan/loan.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loan\n            \n\n\n\n            \n                styleUrls\n                ./loan.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loan.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                percentage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteClick\n                            \n                            \n                                onEditClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteClicked\n                            \n                            \n                                onEditClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/loan/loan.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        loan\n                    \n                \n                \n                    \n                        Type :         Loan | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/loan/loan.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDeleteClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/loan/loan.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onEditClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/loan/loan.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/loan/loan.component.ts:24\n                        \n                    \n\n\n            \n                \n                        Initializes the component and calculates the percentage of the loan amount paid if loan attributes are available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/loan/loan.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Handles click events on the delete button.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEditClick\n                        \n                    \n                \n            \n            \n                \nonEditClick(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/loan/loan.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Handles click events on the edit button.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        percentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/loan/loan.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Loan } from 'src/app/core/interfaces/loan';\n\n@Component({\n  selector: 'app-loan',\n  templateUrl: './loan.component.html',\n  styleUrls: ['./loan.component.scss'],\n})\nexport class LoanComponent  implements OnInit {\n\n  @Output() onEditClicked:EventEmitter = new EventEmitter();\n  @Output() onDeleteClicked:EventEmitter = new EventEmitter();\n\n  @Input() loan:Loan | null = null;\n\n  percentage:number =0\n  \n\n  constructor() { }\n\n  /**\n   * Initializes the component and calculates the percentage of the loan amount paid if loan attributes are available.\n   */\n  ngOnInit() {\n    if (this?.loan?.attributes && this.loan.attributes.amountTotal !== 0) {\n      this.percentage = (this.loan.attributes.amountPaid / this.loan.attributes.amountTotal) * 100;\n    }\n  }\n\n   /**\n   * Handles click events on the edit button.\n   * @param event The click event object.\n   */\n  onEditClick(event:any) {\n    event.stopPropagation();\n    this.onEditClicked.emit();\n  }\n\n   /**\n   * Handles click events on the delete button.\n   * @param event The click event object.\n   */\n  onDeleteClick(event:any) {\n    event.stopPropagation();\n    this.onDeleteClicked.emit();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n          \n        \n      \n    \n  \n  \n    \n      {{ loan?.attributes?.title | titlecase }}\n      {{ 'loans.type.' + loan!.attributes!.type | translate | titlecase }}\n    \n    \n      \n        {{ loan!.attributes!.amountPaid }} /\n        {{ loan!.attributes!.amountTotal }} {{ \"loans.bells\" | translate }}\n      \n    \n    \n      \n        {{ (loan!.attributes!.amountPaid / loan!.attributes!.amountTotal) * 100 | number:'1.0-0' }}%\n      \n    \n  \n\n    \n\n    \n                \n                    ./loan.component.scss\n                \n                ion-card {\n    width: 100%;\n    height: 100%;\n    border-radius: 20px;\n    background-color: transparent;\n    margin: 0;\n    padding: 1.5rem;\n    background-color: var(--ion-color-primary-tint);\n}\n\n\nion-card-header {\n    color: var(--ion-background-color);\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: center;\n}\n\nion-toolbar {\n    --background: transparent;\n    --ion-color-base: transparent;\n    justify-content: space-between;\n}\n\nion-buttons {\n    display: flex;\n}\n\nion-card-content {\n    margin: 1em;\n    display: flex;\n    flex-direction: column;\n    gap: 1em;\n}\n\n\n.text {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 0.5em;\n    color: var(--custom-dark-color);\n}\n\n.loan-card h1 {\n    font-size: 4em;\n    font-weight: bold;\n    margin: 0;\n    padding: 0;\n}\n\n.loan-card h2 {\n    font-size: 1.5em;\n    margin: 0;\n    padding: 0;\n    color: var(--custom-dark-color);\n}\n\n.loan-card h3 {\n    font-size: 1.5em;\n    margin: 0;\n}\n\n.progress-container {\n    height: 1.5rem !important;\n    position: relative;\n    border-radius: 8px;\n    height: 20px;\n    width: 100%;\n    margin: 10px 0;\n    background-color: var(--ion-color-secondary-shade);\n}\n\n.progress-bar {\n    height: 100%;\n    border-radius: 8px;\n    color: var(--ion-background-color);\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding: 10px;\n}\n\n\n@media only screen and (width\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        {{ loan?.attributes?.title | titlecase }}      {{ \\'loans.type.\\' + loan!.attributes!.type | translate | titlecase }}                      {{ loan!.attributes!.amountPaid }} /        {{ loan!.attributes!.amountTotal }} {{ \"loans.bells\" | translate }}                            {{ (loan!.attributes!.amountPaid / loan!.attributes!.amountTotal) * 100 | number:\\'1.0-0\\' }}%            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoanComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoanFormComponent.html":{"url":"components/LoanFormComponent.html","title":"component - LoanFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoanFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/loan-form/loan-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loan-form\n            \n\n\n\n            \n                styleUrls\n                ./loan-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loan-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Async\n                                showConfirmPopup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loan\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loan\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formModal: ModalController, formBuilder: FormBuilder, loanService: LoanService, alertController: AlertController, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/loan-form/loan-form.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loanService\n                                                  \n                                                        \n                                                                        LoanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        loan\n                    \n                \n                \n                    \n                        Type :         Loan | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/loan-form/loan-form.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/loan-form/loan-form.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Cancels the form operation and dismisses the modal with 'cancel' action.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/loan-form/loan-form.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Submits the form data.\nChecks if the loan amount paid exceeds the total amount and shows a confirmation popup if needed.\nDismisses the modal with 'submit' action if confirmed, otherwise updates form values.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showConfirmPopup\n                        \n                    \n                \n            \n            \n                \n                        \n                    showConfirmPopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/loan-form/loan-form.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Displays a confirmation popup for completing the loan.\nUpdates form values based on user response and dismisses the modal with 'submit' action.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/loan-form/loan-form.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"New\" | \"Edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'New'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/loan-form/loan-form.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loan\n                    \n                \n\n\n                \n                    \n                        setloan(_loan: Loan | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/loan-form/loan-form.component.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _loan\n                                                    \n                                                            \n                                                                            Loan | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalController, AlertController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { lastValueFrom } from 'rxjs';\nimport { Loan } from 'src/app/core/interfaces/loan';\nimport { LoanService } from 'src/app/core/services/loan.service';\n\n@Component({\n  selector: 'app-loan-form',\n  templateUrl: './loan-form.component.html',\n  styleUrls: ['./loan-form.component.scss'],\n})\nexport class LoanFormComponent {\n  form: FormGroup;\n  mode: 'New' | 'Edit' = 'New';\n\n  @Input() set loan(_loan: Loan | null) {\n    if (_loan) {\n      this.mode = 'Edit';\n      this.form.controls['amountPaid'].setValue(_loan.attributes.amountPaid);\n      this.form.controls['completed'].setValue(_loan.attributes.completed);\n      this.form.controls['type'].setValue(_loan.attributes.type);\n      this.form.controls['amountTotal'].setValue(_loan.attributes.amountTotal);\n      this.form.controls['title'].setValue(_loan.attributes.title);\n    }\n  }\n\n  constructor(\n    private formModal: ModalController,\n    private formBuilder: FormBuilder,\n    private loanService: LoanService,\n    private alertController: AlertController,\n    private translate: TranslateService\n  ) {\n    this.form = this.formBuilder.group({\n      type: ['', Validators.required],\n      amountPaid: [0, [Validators.required, Validators.min(0)]],\n      amountTotal: [0, [Validators.required, Validators.min(0)]],\n      completed: [false],\n      title: ['', Validators.required],\n    });\n  }\n\n  /**\n     * Cancels the form operation and dismisses the modal with 'cancel' action.\n     */\n  onCancel() {\n    this.formModal.dismiss(null, 'cancel')\n  }\n\n  /**\n   * Submits the form data.\n   * Checks if the loan amount paid exceeds the total amount and shows a confirmation popup if needed.\n   * Dismisses the modal with 'submit' action if confirmed, otherwise updates form values.\n   */\n  onSubmit() {\n    const amountPaid = this.form.get('amountPaid')?.value;\n    const amountTotal = this.form.get('amountTotal')?.value;\n    const completed = this.form.get('completed')?.value;\n    if ((amountPaid >= amountTotal && !completed) || (completed && amountPaid  {\n            this.form?.get('completed')?.setValue(false, { emitEvent: false });\n          }\n        },\n        {\n          text: await lastValueFrom(this.translate.get('loans.confirm.yes')),\n          handler: () => {\n            const amountTotal = this.form?.get('amountTotal')?.value;\n            this.form?.get('amountPaid')?.setValue(amountTotal);\n            this.form?.get('completed')?.setValue(true);\n            this.formModal.dismiss(this.form?.value, 'submit');\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n     {{ mode == 'New' ? ('loans.form.new' | translate) : ('loans.form.edit' | translate) }} \n  \n\n\n  \n\n    \n      {{ 'loans.title' | translate}}\n      \n    \n\n    \n      \n        {{ 'loans.type.house' | translate}}\n        {{ 'loans.type.incline' | translate}}\n        {{ 'loans.type.bridge' | translate}}\n      \n    \n\n    \n      {{ 'loans.amountPaid' | translate }}\n      \n    \n    \n    \n      {{ 'loans.amountTotal' | translate }}\n      \n    \n    \n\n    \n      {{ 'loans.complete' | translate}}\n    \n  \n\n\n  \n  {{ 'loans.submit' | translate}}  \n\n\n    \n\n    \n                \n                    ./loan-form.component.scss\n                \n                ion-header {\n    background-color: var(--ion-color-primary);\n    color: white;\n}\n\nion-toolbar {\n    --background: var(--ion-color-secondary);\n    --color: white;\n}\n\nion-buttons {\n    --ion-color-base: white;\n}\n\nion-icon {\n    color: white;\n}\n\nion-title {\n    text-align: center;\n    color: white;\n}\n\nion-content {\n    --background: #f0f0f0;\n}\n\nion-item {\n    --background: white;\n    --color: var(--ion-text-color);\n    --placeholder-color: var(--ion-text-color);\n    border-radius: 8px;\n    margin-bottom: 10px;\n}\n\nion-input {\n    --padding-start: 8px;\n    --padding-end: 8px;\n}\n\nion-footer {\n    --background: var(--ion-color-primary);\n}\n\nion-button {\n    color: white;\n    font-weight: bold;\n    --background: var(--ion-color-secondary);\n}\n\nion-toggle {\n    --background-color:var(--ion-color-secondary);\n    --background-checked: var(--custom-dark-color);\n    --handle-background: var(--ion-color-secondary);\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                   {{ mode == \\'New\\' ? (\\'loans.form.new\\' | translate) : (\\'loans.form.edit\\' | translate) }}               {{ \\'loans.title\\' | translate}}                            {{ \\'loans.type.house\\' | translate}}        {{ \\'loans.type.incline\\' | translate}}        {{ \\'loans.type.bridge\\' | translate}}                    {{ \\'loans.amountPaid\\' | translate }}                        {{ \\'loans.amountTotal\\' | translate }}                        {{ \\'loans.complete\\' | translate}}          {{ \\'loans.submit\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoanFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoanItemComponent.html":{"url":"components/LoanItemComponent.html","title":"component - LoanItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoanItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/loan-item/loan-item.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loan-item\n            \n\n\n\n            \n                styleUrls\n                ./loan-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loan-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                percentage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteClick\n                            \n                            \n                                onEditClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteClicked\n                            \n                            \n                                onLoanClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/loan-item/loan-item.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        loan\n                    \n                \n                \n                    \n                        Type :         Loan | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/loan-item/loan-item.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDeleteClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/loan-item/loan-item.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLoanClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/loan-item/loan-item.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/loan-item/loan-item.component.ts:23\n                        \n                    \n\n\n            \n                \n                        Initializes the component and calculates the percentage of the loan amount paid if loan attributes are available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/loan-item/loan-item.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Handles click events on the delete button to emit the onDeleteClicked event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEditClick\n                        \n                    \n                \n            \n            \n                \nonEditClick(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/loan-item/loan-item.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Handles click events on the loan item to emit the onLoanClicked event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        percentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/loan-item/loan-item.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Loan } from 'src/app/core/interfaces/loan';\n\n@Component({\n  selector: 'app-loan-item',\n  templateUrl: './loan-item.component.html',\n  styleUrls: ['./loan-item.component.scss'],\n})\nexport class LoanItemComponent  implements OnInit {\n\n  @Output() onLoanClicked:EventEmitter = new EventEmitter();\n  @Output() onDeleteClicked:EventEmitter = new EventEmitter();\n\n  @Input() loan:Loan | null = null;\n\n  percentage:number =0\n  \n\n  constructor() { }\n  /**\n   * Initializes the component and calculates the percentage of the loan amount paid if loan attributes are available.\n   */\n  ngOnInit() {\n    if (this?.loan?.attributes && this.loan.attributes.amountTotal !== 0) {\n      this.percentage = (this.loan.attributes.amountPaid / this.loan.attributes.amountTotal) * 100;\n    }\n  }\n /**\n   * Handles click events on the loan item to emit the onLoanClicked event.\n   * @param event The click event object.\n   */\n  onEditClick(event:any) {\n    event.stopPropagation();\n    this.onLoanClicked.emit();\n  }\n /**\n   * Handles click events on the delete button to emit the onDeleteClicked event.\n   * @param event The click event object.\n   */\n  onDeleteClick(event:any) {\n    event.stopPropagation();\n    this.onDeleteClicked.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n          \n        \n      \n    \n  \n  \n    \n      {{ loan?.attributes?.title | titlecase }}\n      {{ 'loans.type.' + loan!.attributes!.type | translate | titlecase }}\n    \n    \n      \n        {{ (loan!.attributes!.amountPaid / loan!.attributes!.amountTotal) * 100 | number:'1.0-0' }}%\n      \n    \n  \n\n    \n\n    \n                \n                    ./loan-item.component.scss\n                \n                ion-card {\n    width: 100%;\n    height: 16vh;\n    border-radius: 20px;\n    background-color: transparent;\n    margin: 0;\n    background-color: var(--ion-color-primary);\n}\n\n\nion-card-header {\n    color: var(--ion-background-color);\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: center;\n}\n\nion-toolbar {\n    --background: transparent;\n    --ion-color-base: transparent;\n    justify-content: space-between;\n}\n\nion-card-content {\n    margin-top: -1.5rem;\n    display: flex;\n    flex-direction: column;\n\n}\n\n\n.text {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 0.5em;\n}\n\n.loan-card h1 {\n    color: var(--ion-color-secondary-shade);\n    font-size: 2em;\n    font-weight: bold;\n    margin: 0;\n    padding: 0;\n}\n\n.loan-card h3 {\n    color: var(--ion-color-secondary-tint);\n    font-size: 1em;\n    margin: 0;\n}\n\n.progress-container {\n    height: 1.5rem !important;\n    position: relative;\n    border-radius: 8px;\n    height: 20px;\n    width: 100%;\n    margin: 10px 0;\n    background-color: var(--ion-color-secondary-shade);\n}\n\n.progress-bar {\n    height: 100%;\n    border-radius: 8px;\n    color: var(--ion-background-color);\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding: 10px;\n}\n\n\n@media only screen and (width\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        {{ loan?.attributes?.title | titlecase }}      {{ \\'loans.type.\\' + loan!.attributes!.type | translate | titlecase }}                      {{ (loan!.attributes!.amountPaid / loan!.attributes!.amountTotal) * 100 | number:\\'1.0-0\\' }}%            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoanItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoanService.html":{"url":"injectables/LoanService.html","title":"injectable - LoanService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/loan.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _loans\n                            \n                            \n                                    Public\n                                loans$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addLoan\n                            \n                            \n                                    Public\n                                deleteLoan\n                            \n                            \n                                    Public\n                                getUserLoanById\n                            \n                            \n                                    Public\n                                getUserLoans\n                            \n                            \n                                    Public\n                                updateLoan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fbAuth: FirebaseAuthService, fbSvc: FirebaseService, isSvc: IslandService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/loan.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fbAuth\n                                                  \n                                                        \n                                                                        FirebaseAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fbSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isSvc\n                                                  \n                                                        \n                                                                        IslandService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addLoan\n                        \n                    \n                \n            \n            \n                \n                        \n                    addLoan(loan: Loan)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/loan.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Adds a loan to the user's island.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loan\n                                            \n                                                            Loan\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Loan object containing loan details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteLoan\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteLoan(loan: Loan)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/loan.service.ts:125\n                        \n                    \n\n\n            \n                \n                        Deletes a loan associated with the current user's island.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loan\n                                            \n                                                            Loan\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Loan object representing the loan to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUserLoanById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserLoanById(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/loan.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Retrieves loans associated with a specific user's island by user UUID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    UUID of the user whose loans are to be retrieved.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUserLoans\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserLoans()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/loan.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Retrieves loans associated with the current user's island.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateLoan\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLoan(loan: Loan)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/loan.service.ts:140\n                        \n                    \n\n\n            \n                \n                        Updates a loan associated with the current user's island.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loan\n                                            \n                                                            Loan\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Loan object representing the loan to be updated.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _loans\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/loan.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loans$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._loans.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/loan.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Loan } from '../interfaces/loan';\nimport { BehaviorSubject, Observable, lastValueFrom } from 'rxjs';\nimport { ApiService } from './api/api.service';\nimport { map, tap } from 'rxjs/operators';\nimport { DataService } from './api/strapi/data.service';\nimport { IslandService } from './island.service';\nimport { Island } from '../interfaces/island';\nimport { FirebaseAuthService } from './api/firebase/firebase-auth.service';\nimport { FirebaseService } from './api/firebase/firebase.service';\nimport { DocumentData } from 'firebase/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoanService {\n\n  private _loans: BehaviorSubject = new BehaviorSubject([]);\n  public loans$: Observable = this._loans.asObservable();\n\n  constructor(\n    private fbAuth: FirebaseAuthService,\n    private fbSvc: FirebaseService,\n    private isSvc: IslandService\n  ) { }\n\n  /**\n   * Adds a loan to the user's island.\n   * @param loan Loan object containing loan details.\n   * @returns { Observable}\n   */\n  public addLoan(loan: Loan): Observable {\n    return new Observable(observer => {\n      this.fbAuth.user$.subscribe(user => {\n        this.isSvc.getUserIsland().subscribe(is => {\n          this.fbSvc.createDocument(`users/${user!.uuid}/island/${is.id}/loans`, loan)\n        })\n      })\n    })\n  }\n\n  /**\n   * Retrieves loans associated with the current user's island.\n   * @returns { Observable}\n   */\n  public getUserLoans(): Observable {\n    return new Observable(observer => {\n      this.fbAuth.user$.subscribe(user => {\n        if (user) {\n          this.isSvc.getUserIsland().subscribe(is => {\n            if (is) {\n              const collectionName = `users/${user!.uuid}/island/${is.id}/loans`;\n              this.fbSvc.subscribeToCollection(\n                collectionName,\n                this._loans,\n                (doc: DocumentData) => ({\n                  id: doc['id'],\n                  attributes: {\n                    type: doc['data']()['type'],\n                    amountPaid: doc['data']()['amountPaid'],\n                    amountTotal: doc['data']()['amountTotal'],\n                    completed: doc['data']()['completed'],\n                    title: doc['data']()['title']\n                  }\n                })\n              );\n            } else {\n              observer.next([]);\n              this._loans.next([])\n              observer.complete();\n              return;\n            }\n          });\n        }\n      });\n    });\n  }\n\n  /**\n   * Retrieves loans associated with a specific user's island by user UUID.\n   * @param uuid UUID of the user whose loans are to be retrieved.\n   * @returns {Observable}\n   */\n  public getUserLoanById(uuid: string): Observable {\n    return new Observable(observer => {\n      this.isSvc.getUserIslandById(uuid).subscribe(is => {\n        if (is) {\n          this.fbSvc.getDocuments(`users/${uuid}/island/${is.id}/loans`).then(loansDoc => {\n            if (loansDoc.length === 0) {\n              observer.next([]);\n              observer.complete();\n            } else {\n              const loans = loansDoc.map(doc => {\n                const data = doc.data;\n                const loan:Loan = {\n                  id: doc['id'],\n                  attributes: {\n                    type: data['type'],\n                    amountPaid: data['amountPaid'],\n                    amountTotal: data['amountTotal'],\n                    completed: data['completed'],\n                    title: data['title']\n                  }\n                };\n                return loan;\n              })\n              observer.next(loans);\n              observer.complete();\n            }\n          })\n        } else {\n          observer.next([]);\n          observer.complete();\n          return;\n        }\n      });\n    });\n  }\n\n  /**\n   * Deletes a loan associated with the current user's island.\n   * @param loan Loan object representing the loan to be deleted.\n   * @returns {Observable}\n   */\n  public deleteLoan(loan: Loan): Observable {\n    return new Observable(observer => {\n      this.fbAuth.user$.subscribe(user => {\n        this.isSvc.getUserIsland().subscribe(is => {\n          this.fbSvc.deleteDocument(`users/${user!.uuid}/island/${is.id}/loans`, loan.id)\n        })\n      })\n    })\n  }\n\n   /**\n   * Updates a loan associated with the current user's island.\n   * @param loan Loan object representing the loan to be updated.\n   * @returns {Observable}\n   */\n  public updateLoan(loan: Loan): Observable {\n    return new Observable(observer => {\n      this.fbAuth.user$.subscribe(user => {\n        this.isSvc.getUserIsland().subscribe(is => {\n          this.fbSvc.updateDocument(`users/${user!.uuid}/island/${is.id}/loans`, loan.id, loan.attributes)\n        })\n      })\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoansPage.html":{"url":"components/LoansPage.html","title":"component - LoansPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoansPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/loans/loans.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loans\n            \n\n\n\n            \n                styleUrls\n                ./loans.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./loans.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _island\n                            \n                            \n                                isModalOpen\n                            \n                            \n                                    Public\n                                loanService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteClicked\n                            \n                            \n                                onEditClicked\n                            \n                            \n                                onNewLoan\n                            \n                            \n                                    Async\n                                presentForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loanService: LoanService, modal: ModalController, authService: AuthStrapiService, islandService: IslandService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/loans/loans.page.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loanService\n                                                  \n                                                        \n                                                                        LoanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthStrapiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        islandService\n                                                  \n                                                        \n                                                                        IslandService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/loans/loans.page.ts:32\n                        \n                    \n\n\n            \n                \n                        Retrieves current user's island and their loans\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClicked\n                        \n                    \n                \n            \n            \n                \nonDeleteClicked(loan: Loan)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/loans/loans.page.ts:104\n                        \n                    \n\n\n            \n                \n                        Deletes the specified loan.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loan\n                                            \n                                                            Loan\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The loan object to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEditClicked\n                        \n                    \n                \n            \n            \n                \nonEditClicked(loan: Loan)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/loans/loans.page.ts:84\n                        \n                    \n\n\n            \n                \n                        Initiates editing of an existing loan.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loan\n                                            \n                                                            Loan\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The loan object to be edited.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNewLoan\n                        \n                    \n                \n            \n            \n                \nonNewLoan()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/loans/loans.page.ts:64\n                        \n                    \n\n\n            \n                \n                        Initiates the process of adding a new loan.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentForm(data: Loan | null, onDismiss: (result: any) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/loans/loans.page.ts:45\n                        \n                    \n\n\n            \n                \n                        Presents the loan form modal for adding a new loan or updating an existing one.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Loan | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Optional data object containing loan information for editing.\n\n                                            \n                                        \n                                        \n                                                onDismiss\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Callback function called when the modal is dismissed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _island\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Island | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/loans/loans.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isModalOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/loans/loans.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loanService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoanService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/loans/loans.page.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { lastValueFrom } from 'rxjs';\nimport { Island } from 'src/app/core/interfaces/island';\nimport { Loan } from 'src/app/core/interfaces/loan';\nimport { AuthStrapiService } from 'src/app/core/services/api/strapi/auth-strapi.service';\nimport { IslandService } from 'src/app/core/services/island.service';\nimport { LoanService } from 'src/app/core/services/loan.service';\nimport { LoanFormComponent } from 'src/app/shared/components/loan-form/loan-form.component';\n\n@Component({\n  selector: 'app-loans',\n  templateUrl: './loans.page.html',\n  styleUrls: ['./loans.page.scss'],\n})\nexport class LoansPage implements OnInit {\n\n  _island: Island | null = null;\n  isModalOpen = false;\n\n  constructor(\n    public loanService: LoanService,\n    private modal: ModalController,\n    private authService: AuthStrapiService,\n    private islandService: IslandService\n  ) { }\n\n  /**\n   * Retrieves current user's island and their loans\n   */\n  ngOnInit() {\n    const user = this.authService.me();\n    this.islandService.getUserIsland().subscribe(island => {\n      this._island = island\n    });\n    this.loanService.getUserLoans().subscribe()\n  };\n\n  /**\n     * Presents the loan form modal for adding a new loan or updating an existing one.\n     * @param data Optional data object containing loan information for editing.\n     * @param onDismiss Callback function called when the modal is dismissed.\n     */\n  async presentForm(data: Loan | null, onDismiss: (result: any) => void) {\n    const modal = await this.modal.create({\n      component: LoanFormComponent,\n      componentProps: {\n        loan: data\n      }\n    });\n    modal.present();\n    modal.onDidDismiss().then(result => {\n      this.isModalOpen = false;\n      if (result && result.data) {\n        onDismiss(result);\n      }\n    })\n  }\n\n  /**\n   * Initiates the process of adding a new loan.\n   */\n  onNewLoan() {\n    this.isModalOpen = true;\n\n    var onDismiss = (info: any) => {\n      switch (info.role) {\n        case 'submit': {\n          this.loanService.addLoan(info.data).subscribe();\n        }\n          break;\n        default: {\n          this.isModalOpen = false;\n        }\n      }\n    }\n    this.presentForm(null, onDismiss);\n  }\n  /**\n    * Initiates editing of an existing loan.\n    * @param loan The loan object to be edited.\n    */\n  onEditClicked(loan: Loan) {\n    this.isModalOpen = true;\n    var onDismiss = (info: any) => {\n      switch (info.role) {\n        case 'submit': {\n          loan.attributes = info.data\n          this.loanService.updateLoan(loan).subscribe();\n        }\n          break;\n        default: {\n          this.isModalOpen = false;\n        }\n      }\n    }\n    this.presentForm(loan, onDismiss);\n  }\n  /**\n    * Deletes the specified loan.\n    * @param loan The loan object to be deleted.\n    */\n  onDeleteClicked(loan: Loan) {\n    this.loanService.deleteLoan(loan).subscribe()\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n     {{'loans.noCompleted' | translate}} \n    \n  \n  \n    \n    \n  \n  \n    \n     {{'loans.completed' | translate}} \n    \n  \n  \n    \n    \n  \n\n    \n\n    \n                \n                    ./loans.page.scss\n                \n                .loans {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: center; \n    gap: 2rem; \n    padding: 0; \n    margin: 0 auto;\n}\n\n\n.loan {\n    display: flex;\n    width: 80vh;\n    margin: 1rem; \n    padding: 0; \n    border-radius: 20px;\n}\n\n\n.add {\n    border-radius: 50%;\n    position: fixed;\n    bottom: 1rem; \n    right: 3rem; \n    height: 75px; \n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.377); \n    z-index: 10;\n}\n\n\n.title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--ion-color-secondary-shade);\n    padding: 1rem 2rem 1rem 2rem ;\n}\n\n.title h1 {\n    padding: 15px;\n}\n\n.title hr {\n    border: none;\n    height: 3px;\n    background-color:  var(--ion-color-secondary-light);;\n    flex: 1;\n}\n\n@media only screen and (width\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                             {{\\'loans.noCompleted\\' | translate}}                              {{\\'loans.completed\\' | translate}}                   '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoansPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoansPageModule.html":{"url":"modules/LoansPageModule.html","title":"module - LoansPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoansPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoansPageModule\n\n\n\ncluster_LoansPageModule_declarations\n\n\n\ncluster_LoansPageModule_imports\n\n\n\n\nLoansPage\n\nLoansPage\n\n\n\nLoansPageModule\n\nLoansPageModule\n\nLoansPageModule -->\n\nLoansPage->LoansPageModule\n\n\n\n\n\nLoansPageRoutingModule\n\nLoansPageRoutingModule\n\nLoansPageModule -->\n\nLoansPageRoutingModule->LoansPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLoansPageModule -->\n\nSharedModule->LoansPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/loans/loans.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoansPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoansPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { LoansPageRoutingModule } from './loans-routing.module';\n\nimport { LoansPage } from './loans.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    LoansPageRoutingModule,\n    SharedModule\n  ],\n  declarations: [LoansPage]\n})\nexport class LoansPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoansPageRoutingModule.html":{"url":"modules/LoansPageRoutingModule.html","title":"module - LoansPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoansPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/loans/loans-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoansPage } from './loans.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoansPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoansPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/login-form/login-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n\n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onsubmit\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/login-form/login-form.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/login-form/login-form.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onsubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/login-form/login-form.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/login-form/login-form.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Handles form submission.\nEmits the onsubmit event with the form value (UserCredentials) and resets the password field.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/login-form/login-form.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n\n                \n                    \n                        setusername(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/login-form/login-form.component.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserCredentials } from 'src/app/core/interfaces/user-credentials';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n})\nexport class LoginFormComponent  {\n\n  @Input('username') set username(value:string){\n    this.form?.controls['username'].setValue(value);\n  }\n\n  @Output() onsubmit = new EventEmitter();\n\n  form:FormGroup|null = null;\n  constructor(\n    private formBuilder:FormBuilder\n  ) { \n    this.form = this.formBuilder.group({\n      username:['', [Validators.required]],\n      password:['', [Validators.required]]\n    });\n  }\n\n   /**\n   * Handles form submission.\n   * Emits the onsubmit event with the form value (UserCredentials) and resets the password field.\n   */\n  onSubmit(){\n    this.onsubmit.emit(this.form?.value);\n    this.form?.controls['password'].setValue('');\n  }\n\n}\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    {{ 'login.login' | translate}}\n  \n \n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 0.5rem;\n}\nion-item {\n    --background: var(--ion-background-color);\n    --border-color: transparent;\n    border-radius: 20px;\n    margin-bottom: 15px;\n    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.171); \n    transition: box-shadow 0.3s ease-in-out;\n    \n  }\n\nion-button {\n    --border-radius: 20px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ \\'login.login\\' | translate}}   '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login/login.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: FirebaseAuthService, router: Router, modal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/login/login.page.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        FirebaseAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onLogin\n                        \n                    \n                \n            \n            \n                \nonLogin(credentials: UserCredentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:27\n                        \n                    \n\n\n            \n                \n                        Handles the login process using provided user credentials.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            UserCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    UserCredentials object containing username and password.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { UserCredentials } from 'src/app/core/interfaces/user-credentials';\nimport { UserRegisterInfo } from 'src/app/core/interfaces/user-register-info';\nimport { FirebaseAuthService } from 'src/app/core/services/api/firebase/firebase-auth.service';\nimport { AuthService } from 'src/app/core/services/api/strapi/auth.service';\nimport { RegisterFormComponent } from 'src/app/shared/components/register-form/register-form.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage {\n\n  constructor(\n    private auth: FirebaseAuthService,\n    private router:Router,\n    private modal:ModalController\n  ) { }\n\n/**\n   * Handles the login process using provided user credentials.\n   * @param credentials UserCredentials object containing username and password.\n   */\n    onLogin(credentials:UserCredentials){\n      this.auth.login(credentials).subscribe({\n        next:data=>{\n          console.log(\"login page data\", data)\n        },\n        error:err=>{\n          console.log(err);\n        }\n      });\n    }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n          {{ 'login.welcome' | translate }}\n        \n        \n          \n        \n        \n          {{ 'login.register' | translate }}\n          {{ 'login.create' | translate }}\n        \n      \n\n    \n\n  \n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                ion-content {\n    min-height: 100vh;\n    --background: none;\n    background: radial-gradient(circle at center, var(--ion-color-secondary-shade), var(--ion-color-tertiary) 90%);\n}\n\n.container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\nion-card {\n    display: flex;\n    flex-direction: row;\n    align-items: stretch;\n    height: 79vh;\n    width: 140vh;\n    padding: 0;\n    margin: 0;\n    background-color: var(--ion-background-color);\n    border-radius: 20px;\n}\n\n.img {\n    margin: 0;\n    padding: 0;\n}\n\n.img img {\n    height: 80vh;\n    width: 80vh;\n}\n\n.form {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n}\n\nh1 {\n    color: var(--ion-color-secondary);\n    font-weight: bold;\n}\n\nion-card-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\n.link-text {\n    text-decoration: none;\n    color: var(--ion-color-secondary);\n    cursor: pointer;\n}\n\n.link-text:hover {\n    text-decoration: underline;\n}\n\n@media only screen and (width\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  {{ \\'login.welcome\\' | translate }}                                                    {{ \\'login.register\\' | translate }}          {{ \\'login.create\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLoginPageModule -->\n\nSharedModule->LoginPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoginPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    SharedModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageRoutingModule.html":{"url":"modules/LoginPageRoutingModule.html","title":"module - LoginPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/login/login-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Medium.html":{"url":"interfaces/Medium.html","title":"interface - Medium","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Medium\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiData {\n  id: number,\n  attributes: T\n}\n\nexport interface StrapiArrayResponse {\n  data: StrapiData[],\n  meta: {\n    pagination?: {\n      page: number,\n      pageSize: number,\n      pageCount: number,\n      total: number,\n    }\n  }\n}\n\nexport interface StrapiResponse {\n  data: StrapiData\n}\n\nexport interface StrapiUser {\n  id: number,\n  username: string,\n  email: string\n}\n\nexport type StrapiMe = StrapiUser;\n\nexport interface StrapiLoginPayload {\n  identifier: string,\n  password: string\n}\n\nexport interface StrapiRegisterPayload {\n  email: string,\n  password: string,\n  username: string\n}\n\nexport interface StrapiLoginResponse {\n  jwt: string,\n  user: StrapiUser\n}\n\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\nexport interface StrapiExtendedUser {\n  data: {\n    user_id: number,\n    user: number\n  }\n  \n}\n\n\nexport type StrapiUploadResponse = StrapiMedia[]\n\nexport interface StrapiMedia {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedData.html":{"url":"interfaces/PaginatedData.html","title":"interface - PaginatedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents data that is paginated, containing an array of type T\nand pagination details.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         Pagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pagination\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination{\n    page:number,\n    pageSize:number,\n    pageCount:number,\n    total:number\n}\n/**\n * Represents data that is paginated, containing an array of type `T`\n * and pagination details.\n */\nexport interface PaginatedData{\n    data:T[],\n    pagination:Pagination\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination.html":{"url":"interfaces/Pagination.html","title":"interface - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents pagination details including current page, page size,\ntotal number of pages, and total number of items.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            pageCount\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination{\n    page:number,\n    pageSize:number,\n    pageCount:number,\n    total:number\n}\n/**\n * Represents data that is paginated, containing an array of type `T`\n * and pagination details.\n */\nexport interface PaginatedData{\n    data:T[],\n    pagination:Pagination\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordValidation.html":{"url":"classes/PasswordValidation.html","title":"class - PasswordValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/password.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                passwordMatch\n                            \n                            \n                                    Static\n                                passwordProto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        passwordMatch\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwordMatch(passwordControlName: string, confirmControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/password.ts:31\n                        \n                    \n\n\n            \n                \n                        Validator function to confirm password match with a specified control.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                passwordControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name of the password form control.\n\n                                            \n                                        \n                                        \n                                                confirmControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name of the confirmation form control.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Validator function for password confirmation.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        passwordProto\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwordProto(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/password.ts:9\n                        \n                    \n\n\n            \n                \n                        Validator function to enforce strong password criteria.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    Optional name of the form control if control is not instance of FormControl.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Validator function for password validation.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, FormControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\nexport class PasswordValidation {\n\n    /**\n     * Validator function to enforce strong password criteria.\n     * @param controlName Optional name of the form control if control is not instance of FormControl.\n     * @returns Validator function for password validation.\n     */\n    public static passwordProto(controlName: string = ''): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            let password = '';\n            if (control instanceof FormControl)\n                password = control?.value;\n            else\n                password = control.get(controlName)?.value;\n            if (password && !password.match(/^(?=.*\\d)(?=.*[a-zá-ú\\u00f1ä-ü])(?=.*[A-ZÁ-Ú\\u00d1Ä-Ü])[0-9a-zá-úä-üA-ZÁ-ÚÄ-Ü \\u00d1$-/@:-?{-~!\"^_`\\[\\]]{8,}$/)) {\n                return { 'passwordProto': true };\n            }\n            else {\n                return null;\n            }\n        }\n    }\n\n    /**\n     * Validator function to confirm password match with a specified control.\n     * @param passwordControlName Name of the password form control.\n     * @param confirmControlName Name of the confirmation form control.\n     * @returns Validator function for password confirmation.\n     */\n    public static passwordMatch(passwordControlName: string, confirmControlName: string): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            const password = control.get(passwordControlName)?.value;\n            const confirmPassword = control.get(confirmControlName)?.value;\n            if (password != confirmPassword) {\n                let errors = control?.errors;\n                if (errors && typeof errors === 'object') {\n                    Object.assign(errors, {\n                        'passwordMatch': true\n                    });\n                } else {\n                    errors = {\n                        'passwordMatch': true\n                    };\n                }\n                return errors;\n            }\n            else {\n                let errors = control?.errors;\n                if (errors && typeof errors === 'object') {\n                    if (errors['passwordMatch'])\n                        delete errors['passwordMatch'];\n                }\n                return control.errors;\n            }\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PictureSelectableComponent.html":{"url":"components/PictureSelectableComponent.html","title":"component - PictureSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PictureSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PICTURE_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-picture-selectable\n            \n\n\n\n            \n                styleUrls\n                ./picture-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./picture-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _picture\n                            \n                            \n                                hasValue\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Public\n                                picture$\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePicture\n                            \n                            \n                                close\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangePicture\n                            \n                            \n                                onDeletePicture\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pictureModal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pictureModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePicture\n                        \n                    \n                \n            \n            \n                \nchangePicture(base64: string, file: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Handles the change of picture selection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                base64\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The base64 representation of the selected picture.\n\n                                            \n                                        \n                                        \n                                                file\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected file object.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Closes the modal displaying the picture selector.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Cleans up resources when the component is destroyed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangePicture\n                        \n                    \n                \n            \n            \n                \nonChangePicture(event: any, fileLoader: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Handles the change event when a new picture is selected.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The change event from the file input.\n\n                                            \n                                        \n                                        \n                                                fileLoader\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The HTML input element for file loading.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeletePicture\n                        \n                    \n                \n            \n            \n                \nonDeletePicture(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Handles the event when the user wants to delete the current picture.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to propagate changes to the form control.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The callback function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Placeholder function for registering when the component is touched (for ControlValueAccessor).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The callback function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Whether the component should be disabled or not.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component from the form control.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The value to write.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _picture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\"\")\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        picture$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._picture.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:39\n                        \n                    \n\n            \n                \n                    Placeholder function for propagating changes back to the form control.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    obj\n                                                    \n                                                            The value to propagate.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { BehaviorSubject } from 'rxjs';\n\nexport const PICTURE_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'app-picture-selectable',\n  templateUrl: './picture-selectable.component.html',\n  styleUrls: ['./picture-selectable.component.scss'],\n  providers: [PICTURE_SELECTABLE_VALUE_ACCESSOR]\n})\nexport class PictureSelectableComponent implements OnInit, ControlValueAccessor, OnDestroy {\n\n  private _picture = new BehaviorSubject(\"\");\n  public picture$ = this._picture.asObservable();\n  isDisabled: boolean = false;\n  hasValue: boolean = false;\n\n  constructor(private pictureModal: ModalController) { }\n\n   /**\n   * Cleans up resources when the component is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._picture.complete();\n  }\n\n  ngOnInit() {}\n /**\n   * Placeholder function for propagating changes back to the form control.\n   * @param obj The value to propagate.\n   */\n  propagateChange = (obj: any) => {}\n /**\n   * Writes a new value to the component from the form control.\n   * @param obj The value to write.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.hasValue = true;\n      this._picture.next(obj);\n    }\n  }\n /**\n   * Registers a callback function to propagate changes to the form control.\n   * @param fn The callback function.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n /**\n   * Placeholder function for registering when the component is touched (for ControlValueAccessor).\n   * @param fn The callback function.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   * @param isDisabled Whether the component should be disabled or not.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n /**\n   * Handles the change of picture selection.\n   * @param base64 The base64 representation of the selected picture.\n   * @param file The selected file object.\n   */\n  changePicture(base64: string, file: any) {\n    this.hasValue = base64 !== '';\n    this._picture.next(base64);\n    this.propagateChange(file);\n  }\n /**\n   * Handles the change event when a new picture is selected.\n   * @param event The change event from the file input.\n   * @param fileLoader The HTML input element for file loading.\n   */\n  onChangePicture(event: any, fileLoader: HTMLInputElement) {\n    event.stopPropagation();\n    fileLoader.onchange = () => {\n      if (fileLoader.files && fileLoader.files.length > 0) {\n        const file = fileLoader.files[0];\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.changePicture(reader.result as string, file);\n        };\n        reader.onerror = (error) => {\n          console.log(error);\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    fileLoader.click();\n  }\n /**\n   * Handles the event when the user wants to delete the current picture.\n   * @param event The click event.\n   */\n  onDeletePicture(event: Event) {\n    event.stopPropagation();\n    this.changePicture('', null);\n  }\n /**\n   * Closes the modal displaying the picture selector.\n   */\n  close() {\n    this.pictureModal.dismiss();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n            \n              \n                \n              \n            \n          \n        \n        \n          \n        \n      \n    \n    \n    \n      \n    -->\n    \n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./picture-selectable.component.scss\n                \n                div.user-picture{\n    height:300px;\n    width: 300px;\n    border-radius: 50%;\n    ion-img{\n        width: 300px;\n        height: 300px;\n        object-fit: cover;\n        cursor: pointer;\n    }\n    ion-img::part(image) {\n        border-radius: 50%;\n      }\n\n    ion-button.picture-button{\n        margin:0;\n        --padding-start:0;\n        --padding-end:0;\n    \n        .button-native{\n            padding:0!important;\n        }\n    }\n}\n\nion-modal.auto-height{\n    &.bottom {\n        align-items: flex-end;\n    }\n\n    .ion-page {\n        position: relative;\n        display: block;\n        contain: content;\n\n        .inner-content {\n            overflow: auto;\n            padding: 10px;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                          -->                        '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'PictureSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilePage.html":{"url":"components/ProfilePage.html","title":"component - ProfilePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfilePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/profile/profile.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n\n\n            \n                styleUrls\n                ./profile.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                currentIsland\n                            \n                            \n                                    Public\n                                fbAuth\n                            \n                            \n                                    Public\n                                filteredUsers\n                            \n                            \n                                    Public\n                                is\n                            \n                            \n                                    Public\n                                islandService\n                            \n                            \n                                    Public\n                                isMe\n                            \n                            \n                                isModalOpen\n                            \n                            \n                                    Public\n                                mutualUsers\n                            \n                            \n                                    Public\n                                user$\n                            \n                            \n                                    Public\n                                userSvc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToUserPage\n                            \n                            \n                                isUserFollowed\n                            \n                            \n                                    Async\n                                loadMutualUsers\n                            \n                            \n                                    Async\n                                onFilter\n                            \n                            \n                                onFollowClicked\n                            \n                            \n                                onModalEdit\n                            \n                            \n                                onUnfollowClicked\n                            \n                            \n                                    Async\n                                updateFilteredUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fbSvc: FirebaseService, fbAuth: FirebaseAuthService, userSvc: UserService, islandService: IslandService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/profile/profile.page.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fbSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fbAuth\n                                                  \n                                                        \n                                                                        FirebaseAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        islandService\n                                                  \n                                                        \n                                                                        IslandService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToUserPage\n                        \n                    \n                \n            \n            \n                \ngoToUserPage(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:161\n                        \n                    \n\n\n            \n                \n                        Navigates to the profile page of the selected user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User object to navigate to.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUserFollowed\n                        \n                    \n                \n            \n            \n                \nisUserFollowed(userUuid: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:99\n                        \n                    \n\n\n            \n                \n                        Checks if the provided user UUID is followed by the current user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userUuid\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    UUID of the user to check.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Boolean indicating if the user is followed.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadMutualUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadMutualUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:149\n                        \n                    \n\n\n            \n                \n                        Loads mutual users who are both followed by and follow the current user.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFilter\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFilter(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:78\n                        \n                    \n\n\n            \n                \n                        Filters users based on input value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Event object containing search input value.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFollowClicked\n                        \n                    \n                \n            \n            \n                \nonFollowClicked(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:107\n                        \n                    \n\n\n            \n                \n                        Handles the action when the follow button is clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User object to follow.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModalEdit\n                        \n                    \n                \n            \n            \n                \nonModalEdit(isOpen: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:90\n                        \n                    \n\n\n            \n                \n                        Sets the modal open/close state.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isOpen\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Boolean indicating if the modal is open.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUnfollowClicked\n                        \n                    \n                \n            \n            \n                \nonUnfollowClicked(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:120\n                        \n                    \n\n\n            \n                \n                        Handles the action when the unfollow button is clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User object to unfollow.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateFilteredUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFilteredUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.page.ts:134\n                        \n                    \n\n\n            \n                \n                        Updates the filtered list of users based on their current data.\nThis method reloads each user's data from the server and updates the filteredUsers array.\nIt ensures that changes in user following status reflect immediately in the filtered list.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentIsland\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Island | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fbAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseAuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filteredUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[] | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        is\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        islandService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IslandService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isModalOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mutualUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[] | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.page.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { User } from 'src/app/core/interfaces/user';\nimport { BehaviorSubject, Observable, Subject, debounceTime, distinctUntilChanged } from 'rxjs';\nimport { FirebaseAuthService } from 'src/app/core/services/api/firebase/firebase-auth.service';\nimport { UserService } from 'src/app/core/services/user.service';\nimport { TabViewModule } from 'primeng/tabview';\nimport { IonInput } from '@ionic/angular';\nimport { FirebaseService } from 'src/app/core/services/api/firebase/firebase.service';\nimport { IslandService } from 'src/app/core/services/island.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Island } from 'src/app/core/interfaces/island';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ProfilePage {\n\n  protected _user = new BehaviorSubject(null);\n  public user$: Observable = this._user.asObservable();\n  public isMe: boolean = true;\n\n  public filteredUsers: User[] | undefined;\n  public mutualUsers: User[] | undefined;\n\n  public is: boolean = false;\n  public currentIsland: Island | null = null;\n\n  isModalOpen = false\n\n  constructor(\n    private fbSvc: FirebaseService,\n    public fbAuth: FirebaseAuthService,\n    public userSvc: UserService,\n    public islandService: IslandService,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {\n\n\n    this.route.paramMap.subscribe(async params => {\n      const userId = params.get('uuid');\n      if (userId) {\n        this.isMe = false;\n        const user = await this.userSvc.getUserById(userId);\n        if (user) {\n          this._user.next(user);\n          this.islandService.getUserIslandById(user.uuid!).subscribe(is => {\n            this.is = !!is;\n            if (this.is) {\n              this.currentIsland = is;\n            }\n          })\n        }\n      } else {\n        this.fbAuth.user$.subscribe(user => {\n          this._user.next(user);\n          if (user) {\n            this.loadMutualUsers()\n            this.islandService.getUserIsland().subscribe(is => {\n              this.is = !!is;\n              if (this.is) {\n                this.currentIsland = is;\n              }\n            })\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Filters users based on input value.\n   * @param event Event object containing search input value.\n   */\n  async onFilter(event: any) {\n    if (event.detail.value === '') {\n      this.filteredUsers = []\n    } else {\n      this.filteredUsers = await this.userSvc.getFiltered(event.detail.value)\n    }\n  }\n\n  /**\n  * Sets the modal open/close state.\n  * @param isOpen Boolean indicating if the modal is open.\n  */\n  onModalEdit(isOpen: boolean) {\n    this.isModalOpen = isOpen;\n  }\n\n  /**\n  * Checks if the provided user UUID is followed by the current user.\n  * @param userUuid UUID of the user to check.\n  * @returns Boolean indicating if the user is followed.\n  */\n  isUserFollowed(userUuid: any): boolean {\n    return this._user.value!.following.includes(userUuid);\n  }\n\n  /**\n     * Handles the action when the follow button is clicked.\n     * @param user User object to follow.\n     */\n  onFollowClicked(user: User) {\n    this.userSvc.followUser(user, this._user.value!).subscribe();\n    this.fbAuth.me().subscribe(data => {\n      this._user.next(data);\n      this.loadMutualUsers()\n      this.updateFilteredUsers();\n    });\n  }\n\n  /**\n  * Handles the action when the unfollow button is clicked.\n  * @param user User object to unfollow.\n  */\n  onUnfollowClicked(user: User) {\n    this.userSvc.unfollowUser(user, this._user.value!).subscribe()\n    this.fbAuth.me().subscribe(data => {\n      this._user.next(data);\n      this.loadMutualUsers()\n      this.updateFilteredUsers();\n    });\n  }\n\n  /**\n * Updates the filtered list of users based on their current data.\n * This method reloads each user's data from the server and updates the `filteredUsers` array.\n * It ensures that changes in user following status reflect immediately in the filtered list.\n */\n  async updateFilteredUsers() {\n    if (this.filteredUsers && this.filteredUsers.length > 0) {\n      const updatedFilteredUsers = await Promise.all(\n        this.filteredUsers.map(async user => {\n          const updatedUser = await this.userSvc.getUserById(user.uuid!);\n          return updatedUser;\n        })\n      );\n      this.filteredUsers = updatedFilteredUsers.filter(user => user !== undefined) as User[];\n    }\n  }\n  \n  /**\n   * Loads mutual users who are both followed by and follow the current user.\n   */\n  async loadMutualUsers() {\n    const mutualUserUuids = this._user.value!.following.filter(uuid => this._user.value!.followers.includes(uuid));\n    const userPromises = mutualUserUuids.map(uuid => this.userSvc.getUserById(uuid));\n    const users = await Promise.all(userPromises);\n\n    this.mutualUsers = users.filter((user): user is User => user !== undefined);\n  }\n\n  /**\n  * Navigates to the profile page of the selected user.\n  * @param user User object to navigate to.\n  */\n  goToUserPage(user: any) {\n    this.router.navigate(['/profile/' + user.uuid])\n\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n    \n  \n\n  \n    \n      \n        \n          \n           {{ 'profile.mutuals' | translate }}\n        \n        \n          \n            \n            \n          \n        \n      \n      \n        \n          \n           {{ 'profile.search' | translate }}\n        \n        \n        \n          \n            \n            \n          \n\n        \n\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./profile.page.scss\n                \n                .current-user-container {\n    display: flex;\n    justify-content: center;\n    padding: 0.5rem;\n    align-items: end;\n\n    app-islannd {\n        height: 100% !important;\n    }\n}\n\n.users {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n}\n\nspan {\n    padding-left: 1.5rem;\n    font-size: 1.2rem;\n}\n\n.card {\n    padding: 1.5rem;\n}\n\n/* hover */\n.p-tabview .p-tabview-nav li:not(.p-highlight):not(.p-disabled):hover .p-tabview-nav-link {\n    border-color: var(--ion-color-secondary-tint);\n    color: var(--ion-color-secondary-tint);\n}\n\n/* selected */\n.p-tabview .p-tabview-nav li.p-highlight .p-tabview-nav-link {\n    color: var(--ion-color-secondary);\n    border-color: var(--ion-color-secondary);\n}\n\n\n.da {\n        font-size: 1.5rem;\n    margin: 0.5rem 1rem;\n}\n\n@media only screen and (width\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                               {{ \\'profile.mutuals\\' | translate }}                                                                                                             {{ \\'profile.search\\' | translate }}                                                                                        '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfilePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageModule.html":{"url":"modules/ProfilePageModule.html","title":"module - ProfilePageModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\n\nProfilePage\n\nProfilePage\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfilePageModule -->\n\nSharedModule->ProfilePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfilePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfilePageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { TabViewModule } from 'primeng/tabview';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    ProfilePageRoutingModule, \n    SharedModule,\n    TabViewModule,\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageRoutingModule.html":{"url":"modules/ProfilePageRoutingModule.html","title":"module - ProfilePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfilePageRoutingModule\n\n\n\ncluster_ProfilePageRoutingModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule -->\n\nSharedModule->ProfilePageRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/profile/profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes), SharedModule],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ProgressDirective.html":{"url":"directives/ProgressDirective.html","title":"directive - ProgressDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ProgressDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/progress.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appProgress]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                min_width\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appProgress\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    progress\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/progress.directive.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor to inject dependencies.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Renderer to manipulate the host element.\n\n                                                        \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the host element.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appProgress\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/progress.directive.ts:14\n                            \n                        \n                \n                    \n                        Sets the width of the element based on the provided progress value.\nEnsures the width is at least min_width.\n\n                    \n                \n            \n        \n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        min_width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/directives/progress.directive.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        progress\n                    \n                \n\n\n                \n                    \n                        setprogress(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/directives/progress.directive.ts:14\n                                \n                            \n                    \n                        \n                                Sets the width of the element based on the provided progress value.\nEnsures the width is at least min_width.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The progress value used to set the width.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appProgress]'\n})\nexport class ProgressDirective {\n  \n  private min_width =15\n/**\n   * Sets the width of the element based on the provided progress value.\n   * Ensures the width is at least `min_width`.\n   * @param value The progress value used to set the width.\n   */\n  @Input('appProgress') set progress(value: number) {\n    const width= Math.max(value, this.min_width);\n    this.renderer.setStyle(\n      this.el.nativeElement,\n      'width',\n      `${width}%` \n    );\n  }\n /**\n   * Constructor to inject dependencies.\n   * @param renderer Renderer to manipulate the host element.\n   * @param el Reference to the host element.\n   */\n  constructor(\n    private renderer:Renderer2,\n    private el:ElementRef\n  ) {}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProviderMetadata.html":{"url":"interfaces/ProviderMetadata.html","title":"interface - ProviderMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProviderMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            public_id\n                                        \n                                \n                                \n                                        \n                                            resource_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        public_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        public_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resource_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiData {\n  id: number,\n  attributes: T\n}\n\nexport interface StrapiArrayResponse {\n  data: StrapiData[],\n  meta: {\n    pagination?: {\n      page: number,\n      pageSize: number,\n      pageCount: number,\n      total: number,\n    }\n  }\n}\n\nexport interface StrapiResponse {\n  data: StrapiData\n}\n\nexport interface StrapiUser {\n  id: number,\n  username: string,\n  email: string\n}\n\nexport type StrapiMe = StrapiUser;\n\nexport interface StrapiLoginPayload {\n  identifier: string,\n  password: string\n}\n\nexport interface StrapiRegisterPayload {\n  email: string,\n  password: string,\n  username: string\n}\n\nexport interface StrapiLoginResponse {\n  jwt: string,\n  user: StrapiUser\n}\n\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\nexport interface StrapiExtendedUser {\n  data: {\n    user_id: number,\n    user: number\n  }\n  \n}\n\n\nexport type StrapiUploadResponse = StrapiMedia[]\n\nexport interface StrapiMedia {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterFormComponent.html":{"url":"components/RegisterFormComponent.html","title":"component - RegisterFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/register-form/register-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register-form\n            \n\n\n\n            \n                styleUrls\n                ./register-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hasError\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onsubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/register-form/register-form.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onsubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/register-form/register-form.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(control: string, error: string, isFormError: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/register-form/register-form.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Checks if a specific form control or the entire form has a specific error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The name of the form control to check.\n\n                                            \n                                        \n                                        \n                                                error\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The error name to check.\n\n                                            \n                                        \n                                        \n                                                isFormError\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    Boolean flag indicating if the error is a form-level error (not tied to a specific control).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the control (or form) has the specified error, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/register-form/register-form.component.ts:33\n                        \n                    \n\n\n            \n                \n                        Handles form submission.\nEmits the onsubmit event with the form value (UserRegisterInfo).\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/register-form/register-form.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { UserRegisterInfo } from 'src/app/core/interfaces/user-register-info';\nimport { PasswordValidation } from 'src/app/core/validators/password';\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.scss'],\n})\nexport class RegisterFormComponent {\n\n  form:FormGroup;\n\n  @Output() onsubmit = new EventEmitter();\n\n  constructor(\n    private formBuilder:FormBuilder) {\n    this.form = this.formBuilder.group({\n      username:['', [Validators.required]],\n      email:['', [Validators.required]],\n      password:['', [Validators.required, PasswordValidation.passwordProto()]],\n      confirm: ['', [Validators.required, PasswordValidation.passwordProto()]]\n    }, { validators: PasswordValidation.passwordMatch('password', 'confirm') }\n    );\n  }\n\n /**\n   * Handles form submission.\n   * Emits the onsubmit event with the form value (UserRegisterInfo).\n   */\n  onSubmit(){\n    this.onsubmit.emit(this.form.value);\n  } \n /**\n   * Checks if a specific form control or the entire form has a specific error.\n   * @param control The name of the form control to check.\n   * @param error The error name to check.\n   * @param isFormError Boolean flag indicating if the error is a form-level error (not tied to a specific control).\n   * @returns True if the control (or form) has the specified error, false otherwise.\n   */\n  hasError(control: string, error: string, isFormError: boolean = false): boolean {\n    if (isFormError) {\n      return this.form.hasError(error);\n    } else {\n      let controlErrors = this.form.controls[control].errors;\n      return controlErrors != null && error in controlErrors;\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'login.passwordError' | translate }}\n    \n    \n      {{ 'login.confirmError' | translate }}\n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      {{ 'login.create' | translate }}\n    \n    \n  \n    \n\n    \n                \n                    ./register-form.component.scss\n                \n                form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 0.5rem;\n}\n\nion-item {\n    --background: var(--ion-background-color);\n    --border-color: transparent;\n    border-radius: 20px;\n    margin-bottom: 15px;\n    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.171);\n    transition: box-shadow 0.3s ease-in-out;\n    width: 300px;\n    height: 50px;\n\n}\n\nion-button {\n    --border-radius: 20px;\n}\n\n.error-message {\n    align-self: center;\n    justify-self: center;\n    font-size: 1em;\n}\n\n\n@media only screen and (width\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'login.passwordError\\' | translate }}              {{ \\'login.confirmError\\' | translate }}                                                                      {{ \\'login.create\\' | translate }}          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPage.html":{"url":"components/RegisterPage.html","title":"component - RegisterPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/register/register.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: FirebaseAuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/register/register.page.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        FirebaseAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onRegister\n                        \n                    \n                \n            \n            \n                \nonRegister(info: UserRegisterInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:23\n                        \n                    \n\n\n            \n                \n                        Handles user registration.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            UserRegisterInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User registration information.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserRegisterInfo } from 'src/app/core/interfaces/user-register-info';\nimport { FirebaseAuthService } from 'src/app/core/services/api/firebase/firebase-auth.service';\nimport { AuthService } from 'src/app/core/services/api/strapi/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage {\n\n  constructor(\n    private auth: FirebaseAuthService,\n    private router: Router,\n  ) { }\n\n  /**\n    * Handles user registration.\n    * @param info User registration information.\n    */\n  onRegister(info: UserRegisterInfo) {\n    this.auth.register(info).subscribe({\n      next: data => {\n        this.router.navigate(['home']);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n          {{ 'login.account' | translate }}\n      \n      \n        \n      \n      \n      \n    \n  \n  \n  \n\n    \n\n    \n                \n                    ./register.page.scss\n                \n                ion-content {\n    min-height: 100vh;\n    --background: none;\n    background: radial-gradient(circle at center, var(--ion-color-secondary-shade), var(--ion-color-tertiary) 90%);\n}\n\n.container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\nion-card {\n    display: flex;\n    flex-direction: row;\n    align-items: stretch;\n    height: 79vh;\n    width: 140vh;\n    padding: 0;\n    margin: 0;\n    background-color: var(--ion-background-color);\n    border-radius: 20px;\n}\n\n.img {\n    margin: 0;\n    padding: 0;\n}\n\n.img img {\n    height: 80vh;\n    width: 80vh;\n}\n\n.form {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n}\n\nh1 {\n    color: var(--ion-color-secondary);\n    font-weight: bold;\n}\n\nion-card-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\n\n@media only screen and (width\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  {{ \\'login.account\\' | translate }}                                                '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageModule.html":{"url":"modules/RegisterPageModule.html","title":"module - RegisterPageModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\n\nRegisterPage\n\nRegisterPage\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nRegisterPageModule -->\n\nSharedModule->RegisterPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/register/register.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegisterPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegisterPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule,\n    SharedModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageRoutingModule.html":{"url":"modules/RegisterPageRoutingModule.html","title":"module - RegisterPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/register/register-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nBackgroundBlurDirective\n\nBackgroundBlurDirective\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nBackgroundBlurDirective->SharedModule\n\n\n\n\n\nIslandComponent\n\nIslandComponent\n\nSharedModule -->\n\nIslandComponent->SharedModule\n\n\n\n\n\nIslandFormComponent\n\nIslandFormComponent\n\nSharedModule -->\n\nIslandFormComponent->SharedModule\n\n\n\n\n\nLatestThreePipe\n\nLatestThreePipe\n\nSharedModule -->\n\nLatestThreePipe->SharedModule\n\n\n\nSharedModule -->\n\nLatestThreePipe->SharedModule\n\n\n\n\n\nLoanCompletedPipe\n\nLoanCompletedPipe\n\nSharedModule -->\n\nLoanCompletedPipe->SharedModule\n\n\n\nSharedModule -->\n\nLoanCompletedPipe->SharedModule\n\n\n\n\n\nLoanComponent\n\nLoanComponent\n\nSharedModule -->\n\nLoanComponent->SharedModule\n\n\n\n\n\nLoanFormComponent\n\nLoanFormComponent\n\nSharedModule -->\n\nLoanFormComponent->SharedModule\n\n\n\n\n\nLoanItemComponent\n\nLoanItemComponent\n\nSharedModule -->\n\nLoanItemComponent->SharedModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nSharedModule -->\n\nLoginFormComponent->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nProgressDirective\n\nProgressDirective\n\nSharedModule -->\n\nProgressDirective->SharedModule\n\n\n\nSharedModule -->\n\nProgressDirective->SharedModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nSharedModule -->\n\nRegisterFormComponent->SharedModule\n\n\n\n\n\nUserCardComponent\n\nUserCardComponent\n\nSharedModule -->\n\nUserCardComponent->SharedModule\n\n\n\n\n\nUserFormComponent\n\nUserFormComponent\n\nSharedModule -->\n\nUserFormComponent->SharedModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nSharedModule -->\n\nUserListComponent->SharedModule\n\n\n\n\n\nVillagerComponent\n\nVillagerComponent\n\nSharedModule -->\n\nVillagerComponent->SharedModule\n\n\n\n\n\nVillagerItemComponent\n\nVillagerItemComponent\n\nSharedModule -->\n\nVillagerItemComponent->SharedModule\n\n\n\n\n\nVillagerSelectableComponent\n\nVillagerSelectableComponent\n\nSharedModule -->\n\nVillagerSelectableComponent->SharedModule\n\n\n\n\n\nBackgroundBlurDirective \n\nBackgroundBlurDirective \n\nBackgroundBlurDirective  -->\n\nSharedModule->BackgroundBlurDirective \n\n\n\n\n\nIslandComponent \n\nIslandComponent \n\nIslandComponent  -->\n\nSharedModule->IslandComponent \n\n\n\n\n\nIslandFormComponent \n\nIslandFormComponent \n\nIslandFormComponent  -->\n\nSharedModule->IslandFormComponent \n\n\n\n\n\nLatestThreePipe \n\nLatestThreePipe \n\nLatestThreePipe  -->\n\nSharedModule->LatestThreePipe \n\n\n\n\n\nLoanCompletedPipe \n\nLoanCompletedPipe \n\nLoanCompletedPipe  -->\n\nSharedModule->LoanCompletedPipe \n\n\n\n\n\nLoanComponent \n\nLoanComponent \n\nLoanComponent  -->\n\nSharedModule->LoanComponent \n\n\n\n\n\nLoanFormComponent \n\nLoanFormComponent \n\nLoanFormComponent  -->\n\nSharedModule->LoanFormComponent \n\n\n\n\n\nLoanItemComponent \n\nLoanItemComponent \n\nLoanItemComponent  -->\n\nSharedModule->LoanItemComponent \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nSharedModule->LoginFormComponent \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nProgressDirective \n\nProgressDirective \n\nProgressDirective  -->\n\nSharedModule->ProgressDirective \n\n\n\n\n\nRegisterFormComponent \n\nRegisterFormComponent \n\nRegisterFormComponent  -->\n\nSharedModule->RegisterFormComponent \n\n\n\n\n\nUserCardComponent \n\nUserCardComponent \n\nUserCardComponent  -->\n\nSharedModule->UserCardComponent \n\n\n\n\n\nUserFormComponent \n\nUserFormComponent \n\nUserFormComponent  -->\n\nSharedModule->UserFormComponent \n\n\n\n\n\nUserListComponent \n\nUserListComponent \n\nUserListComponent  -->\n\nSharedModule->UserListComponent \n\n\n\n\n\nVillagerComponent \n\nVillagerComponent \n\nVillagerComponent  -->\n\nSharedModule->VillagerComponent \n\n\n\n\n\nVillagerItemComponent \n\nVillagerItemComponent \n\nVillagerItemComponent  -->\n\nSharedModule->VillagerItemComponent \n\n\n\n\n\nVillagerSelectableComponent \n\nVillagerSelectableComponent \n\nVillagerSelectableComponent  -->\n\nSharedModule->VillagerSelectableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BackgroundBlurDirective\n                        \n                        \n                            IslandComponent\n                        \n                        \n                            IslandFormComponent\n                        \n                        \n                            LatestThreePipe\n                        \n                        \n                            LatestThreePipe\n                        \n                        \n                            LoanCompletedPipe\n                        \n                        \n                            LoanCompletedPipe\n                        \n                        \n                            LoanComponent\n                        \n                        \n                            LoanFormComponent\n                        \n                        \n                            LoanItemComponent\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            ProgressDirective\n                        \n                        \n                            ProgressDirective\n                        \n                        \n                            RegisterFormComponent\n                        \n                        \n                            UserCardComponent\n                        \n                        \n                            UserFormComponent\n                        \n                        \n                            UserListComponent\n                        \n                        \n                            VillagerComponent\n                        \n                        \n                            VillagerItemComponent\n                        \n                        \n                            VillagerSelectableComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BackgroundBlurDirective\n                        \n                        \n                            IslandComponent\n                        \n                        \n                            IslandFormComponent\n                        \n                        \n                            LatestThreePipe\n                        \n                        \n                            LoanCompletedPipe\n                        \n                        \n                            LoanComponent\n                        \n                        \n                            LoanFormComponent\n                        \n                        \n                            LoanItemComponent\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            ProgressDirective\n                        \n                        \n                            RegisterFormComponent\n                        \n                        \n                            UserCardComponent\n                        \n                        \n                            UserFormComponent\n                        \n                        \n                            UserListComponent\n                        \n                        \n                            VillagerComponent\n                        \n                        \n                            VillagerItemComponent\n                        \n                        \n                            VillagerSelectableComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { VillagerComponent } from './components/villager/villager.component';\nimport { IslandComponent } from './components/island/island.component';\nimport { IslandFormComponent } from './components/island-form/island-form.component';\nimport { LoginFormComponent } from './components/login-form/login-form.component';\nimport { RegisterFormComponent } from './components/register-form/register-form.component';\nimport { VillagerItemComponent } from './components/villager-item/villager-item.component';\nimport { VillagerSelectableComponent } from './components/villager-selectable/villager-selectable.component';\nimport { LoanComponent } from './components/loan/loan.component';\nimport { LoanFormComponent } from './components/loan-form/loan-form.component';\nimport { LoanCompletedPipe } from './pipes/loan-completed.pipe';\nimport { ProgressDirective } from './directives/progress.directive';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { createTranslateLoader } from '../core/services/custom-translate.service';\nimport { HttpClient } from '@angular/common/http';\nimport { LatestThreePipe } from './pipes/latest-three.pipe';\nimport { LoanItemComponent } from './components/loan-item/loan-item.component';\nimport { BackgroundBlurDirective } from './directives/background-blur.directive';\nimport { UserCardComponent } from './components/user-card/user-card.component';\nimport { PictureSelectableComponent } from './components/picture-selectable/picture-selectable.component';\nimport { UserFormComponent } from './components/user-form/user-form.component';\nimport { UserListComponent } from './components/user-list/user-list.component';\nimport { VirtualScrollerModule } from 'primeng/virtualscroller';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { DividerModule } from 'primeng/divider';\n\n@NgModule({\n  declarations: [\n    // directives\n    ProgressDirective,\n    BackgroundBlurDirective,\n    // pipes\n    LoanCompletedPipe,\n    LatestThreePipe,\n    // components\n    VillagerComponent,\n    IslandComponent,\n    IslandFormComponent,\n    LoginFormComponent,\n    RegisterFormComponent,\n    VillagerItemComponent,\n    VillagerSelectableComponent,\n    LoanComponent,\n    LoanFormComponent,\n    LoanCompletedPipe,\n    ProgressDirective,\n    LatestThreePipe,\n    LoanItemComponent,\n    UserCardComponent,\n    PictureSelectableComponent,\n    UserFormComponent,\n    UserListComponent\n  ],\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    ReactiveFormsModule,\n    VirtualScrollerModule,\n    OverlayPanelModule,\n    InputMaskModule,\n    InputTextModule,\n    DividerModule,\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n      }),\n  ],\n  exports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    // components\n    VillagerComponent,\n    IslandComponent,\n    IslandFormComponent,\n    LoginFormComponent,\n    RegisterFormComponent,\n    VillagerItemComponent,\n    VillagerSelectableComponent,\n    LoanComponent,\n    LoanFormComponent,\n    TranslateModule,\n    LoanItemComponent,\n    UserCardComponent,\n    PictureSelectableComponent,\n    UserFormComponent,\n    UserListComponent,\n    // pipe\n    LoanCompletedPipe,\n    LatestThreePipe,\n    // directive\n    ProgressDirective,\n    BackgroundBlurDirective\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Small.html":{"url":"interfaces/Small.html","title":"interface - Small","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Small\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiData {\n  id: number,\n  attributes: T\n}\n\nexport interface StrapiArrayResponse {\n  data: StrapiData[],\n  meta: {\n    pagination?: {\n      page: number,\n      pageSize: number,\n      pageCount: number,\n      total: number,\n    }\n  }\n}\n\nexport interface StrapiResponse {\n  data: StrapiData\n}\n\nexport interface StrapiUser {\n  id: number,\n  username: string,\n  email: string\n}\n\nexport type StrapiMe = StrapiUser;\n\nexport interface StrapiLoginPayload {\n  identifier: string,\n  password: string\n}\n\nexport interface StrapiRegisterPayload {\n  email: string,\n  password: string,\n  username: string\n}\n\nexport interface StrapiLoginResponse {\n  jwt: string,\n  user: StrapiUser\n}\n\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\nexport interface StrapiExtendedUser {\n  data: {\n    user_id: number,\n    user: number\n  }\n  \n}\n\n\nexport type StrapiUploadResponse = StrapiMedia[]\n\nexport interface StrapiMedia {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiArrayResponse.html":{"url":"interfaces/StrapiArrayResponse.html","title":"interface - StrapiArrayResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiArrayResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         StrapiData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiData[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiData {\n  id: number,\n  attributes: T\n}\n\nexport interface StrapiArrayResponse {\n  data: StrapiData[],\n  meta: {\n    pagination?: {\n      page: number,\n      pageSize: number,\n      pageCount: number,\n      total: number,\n    }\n  }\n}\n\nexport interface StrapiResponse {\n  data: StrapiData\n}\n\nexport interface StrapiUser {\n  id: number,\n  username: string,\n  email: string\n}\n\nexport type StrapiMe = StrapiUser;\n\nexport interface StrapiLoginPayload {\n  identifier: string,\n  password: string\n}\n\nexport interface StrapiRegisterPayload {\n  email: string,\n  password: string,\n  username: string\n}\n\nexport interface StrapiLoginResponse {\n  jwt: string,\n  user: StrapiUser\n}\n\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\nexport interface StrapiExtendedUser {\n  data: {\n    user_id: number,\n    user: number\n  }\n  \n}\n\n\nexport type StrapiUploadResponse = StrapiMedia[]\n\nexport interface StrapiMedia {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiData.html":{"url":"interfaces/StrapiData.html","title":"interface - StrapiData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiData {\n  id: number,\n  attributes: T\n}\n\nexport interface StrapiArrayResponse {\n  data: StrapiData[],\n  meta: {\n    pagination?: {\n      page: number,\n      pageSize: number,\n      pageCount: number,\n      total: number,\n    }\n  }\n}\n\nexport interface StrapiResponse {\n  data: StrapiData\n}\n\nexport interface StrapiUser {\n  id: number,\n  username: string,\n  email: string\n}\n\nexport type StrapiMe = StrapiUser;\n\nexport interface StrapiLoginPayload {\n  identifier: string,\n  password: string\n}\n\nexport interface StrapiRegisterPayload {\n  email: string,\n  password: string,\n  username: string\n}\n\nexport interface StrapiLoginResponse {\n  jwt: string,\n  user: StrapiUser\n}\n\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\nexport interface StrapiExtendedUser {\n  data: {\n    user_id: number,\n    user: number\n  }\n  \n}\n\n\nexport type StrapiUploadResponse = StrapiMedia[]\n\nexport interface StrapiMedia {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StrapiDataService.html":{"url":"classes/StrapiDataService.html","title":"class - StrapiDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StrapiDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/strapi/strapi-data.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            DataService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                query\n                            \n                            \n                                    Public\n                                queryPaginated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/strapi/strapi-data.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(resource: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(resource: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:32\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:38\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        query\n                        \n                    \n                \n            \n            \n                \n                        \n                    query(resource: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:16\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queryPaginated\n                        \n                    \n                \n            \n            \n                \n                        \n                    queryPaginated(resource: string, queryString: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:24\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Observable, map, of } from 'rxjs';\nimport { StrapiArrayResponse, StrapiResponse } from '../../../interfaces/strapi';\nimport { ApiService } from '../api.service';\nimport { DataService } from './data.service';\nimport { PaginatedData } from '../../../interfaces/data';\n\nexport class StrapiDataService extends DataService{\n\n  constructor(\n    protected api:ApiService\n  ){\n    super();\n  }\n\n  public query(resource:string, params:any):Observable>{\n    return this.api.get(`/${resource}`, params).pipe(map((response:StrapiArrayResponse)=>{\n      return {\n        data: response.data.map(data=>{return {...(data.attributes), id:data.id};}), \n        pagination: response.meta.pagination!};\n    }));\n  }\n\n  public queryPaginated(resource: string, queryString: string): Observable> {\n    return this.api.get(`/${resource}?${queryString}`).pipe(map((response:StrapiArrayResponse)=>{\n      return {\n        data: response.data.map(data=>{return {...(data.attributes), id:data.id};}), \n        pagination: response.meta.pagination!};\n    }));\n  }\n\n  public get(resource:string):Observable{\n    return this.api.get(`/${resource}`).pipe(map((response:StrapiResponse)=>{\n      return response.data.attributes;\n    }));\n  }\n\n  public post(resource:string, data:any):Observable{\n    return this.api.post(`/${resource}`, {data:data} as Object).pipe(map((response:StrapiResponse)=>{\n      return {id:response.data.id, ...response.data.attributes};\n    }));\n  }\n\n  public put(resource:string, data:any):Observable{\n    return this.api.put(`/${resource}`, {data:data}).pipe(map((response:StrapiResponse)=>{\n      return {id:response.data.id, ...response.data.attributes};\n    }));\n  }\n\n  public delete(resource:string):Observable{\n    return this.api.delete(`/${resource}`).pipe(map((response:StrapiResponse)=>{\n      return {id:response.data.id, ...response.data.attributes};\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiExtendedUser.html":{"url":"interfaces/StrapiExtendedUser.html","title":"interface - StrapiExtendedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiExtendedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiData {\n  id: number,\n  attributes: T\n}\n\nexport interface StrapiArrayResponse {\n  data: StrapiData[],\n  meta: {\n    pagination?: {\n      page: number,\n      pageSize: number,\n      pageCount: number,\n      total: number,\n    }\n  }\n}\n\nexport interface StrapiResponse {\n  data: StrapiData\n}\n\nexport interface StrapiUser {\n  id: number,\n  username: string,\n  email: string\n}\n\nexport type StrapiMe = StrapiUser;\n\nexport interface StrapiLoginPayload {\n  identifier: string,\n  password: string\n}\n\nexport interface StrapiRegisterPayload {\n  email: string,\n  password: string,\n  username: string\n}\n\nexport interface StrapiLoginResponse {\n  jwt: string,\n  user: StrapiUser\n}\n\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\nexport interface StrapiExtendedUser {\n  data: {\n    user_id: number,\n    user: number\n  }\n  \n}\n\n\nexport type StrapiUploadResponse = StrapiMedia[]\n\nexport interface StrapiMedia {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiLoginPayload.html":{"url":"interfaces/StrapiLoginPayload.html","title":"interface - StrapiLoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiLoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            identifier\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiData {\n  id: number,\n  attributes: T\n}\n\nexport interface StrapiArrayResponse {\n  data: StrapiData[],\n  meta: {\n    pagination?: {\n      page: number,\n      pageSize: number,\n      pageCount: number,\n      total: number,\n    }\n  }\n}\n\nexport interface StrapiResponse {\n  data: StrapiData\n}\n\nexport interface StrapiUser {\n  id: number,\n  username: string,\n  email: string\n}\n\nexport type StrapiMe = StrapiUser;\n\nexport interface StrapiLoginPayload {\n  identifier: string,\n  password: string\n}\n\nexport interface StrapiRegisterPayload {\n  email: string,\n  password: string,\n  username: string\n}\n\nexport interface StrapiLoginResponse {\n  jwt: string,\n  user: StrapiUser\n}\n\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\nexport interface StrapiExtendedUser {\n  data: {\n    user_id: number,\n    user: number\n  }\n  \n}\n\n\nexport type StrapiUploadResponse = StrapiMedia[]\n\nexport interface StrapiMedia {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiLoginResponse.html":{"url":"interfaces/StrapiLoginResponse.html","title":"interface - StrapiLoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiLoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         StrapiUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiData {\n  id: number,\n  attributes: T\n}\n\nexport interface StrapiArrayResponse {\n  data: StrapiData[],\n  meta: {\n    pagination?: {\n      page: number,\n      pageSize: number,\n      pageCount: number,\n      total: number,\n    }\n  }\n}\n\nexport interface StrapiResponse {\n  data: StrapiData\n}\n\nexport interface StrapiUser {\n  id: number,\n  username: string,\n  email: string\n}\n\nexport type StrapiMe = StrapiUser;\n\nexport interface StrapiLoginPayload {\n  identifier: string,\n  password: string\n}\n\nexport interface StrapiRegisterPayload {\n  email: string,\n  password: string,\n  username: string\n}\n\nexport interface StrapiLoginResponse {\n  jwt: string,\n  user: StrapiUser\n}\n\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\nexport interface StrapiExtendedUser {\n  data: {\n    user_id: number,\n    user: number\n  }\n  \n}\n\n\nexport type StrapiUploadResponse = StrapiMedia[]\n\nexport interface StrapiMedia {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiMedia.html":{"url":"interfaces/StrapiMedia.html","title":"interface - StrapiMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alternativeText\n                                        \n                                \n                                \n                                        \n                                            caption\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            formats\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            previewUrl\n                                        \n                                \n                                \n                                        \n                                            provider\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alternativeText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alternativeText:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        caption:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formats:         Formats\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Formats\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previewUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previewUrl:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiData {\n  id: number,\n  attributes: T\n}\n\nexport interface StrapiArrayResponse {\n  data: StrapiData[],\n  meta: {\n    pagination?: {\n      page: number,\n      pageSize: number,\n      pageCount: number,\n      total: number,\n    }\n  }\n}\n\nexport interface StrapiResponse {\n  data: StrapiData\n}\n\nexport interface StrapiUser {\n  id: number,\n  username: string,\n  email: string\n}\n\nexport type StrapiMe = StrapiUser;\n\nexport interface StrapiLoginPayload {\n  identifier: string,\n  password: string\n}\n\nexport interface StrapiRegisterPayload {\n  email: string,\n  password: string,\n  username: string\n}\n\nexport interface StrapiLoginResponse {\n  jwt: string,\n  user: StrapiUser\n}\n\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\nexport interface StrapiExtendedUser {\n  data: {\n    user_id: number,\n    user: number\n  }\n  \n}\n\n\nexport type StrapiUploadResponse = StrapiMedia[]\n\nexport interface StrapiMedia {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiRegisterPayload.html":{"url":"interfaces/StrapiRegisterPayload.html","title":"interface - StrapiRegisterPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiRegisterPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiData {\n  id: number,\n  attributes: T\n}\n\nexport interface StrapiArrayResponse {\n  data: StrapiData[],\n  meta: {\n    pagination?: {\n      page: number,\n      pageSize: number,\n      pageCount: number,\n      total: number,\n    }\n  }\n}\n\nexport interface StrapiResponse {\n  data: StrapiData\n}\n\nexport interface StrapiUser {\n  id: number,\n  username: string,\n  email: string\n}\n\nexport type StrapiMe = StrapiUser;\n\nexport interface StrapiLoginPayload {\n  identifier: string,\n  password: string\n}\n\nexport interface StrapiRegisterPayload {\n  email: string,\n  password: string,\n  username: string\n}\n\nexport interface StrapiLoginResponse {\n  jwt: string,\n  user: StrapiUser\n}\n\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\nexport interface StrapiExtendedUser {\n  data: {\n    user_id: number,\n    user: number\n  }\n  \n}\n\n\nexport type StrapiUploadResponse = StrapiMedia[]\n\nexport interface StrapiMedia {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiResponse.html":{"url":"interfaces/StrapiResponse.html","title":"interface - StrapiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         StrapiData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiData {\n  id: number,\n  attributes: T\n}\n\nexport interface StrapiArrayResponse {\n  data: StrapiData[],\n  meta: {\n    pagination?: {\n      page: number,\n      pageSize: number,\n      pageCount: number,\n      total: number,\n    }\n  }\n}\n\nexport interface StrapiResponse {\n  data: StrapiData\n}\n\nexport interface StrapiUser {\n  id: number,\n  username: string,\n  email: string\n}\n\nexport type StrapiMe = StrapiUser;\n\nexport interface StrapiLoginPayload {\n  identifier: string,\n  password: string\n}\n\nexport interface StrapiRegisterPayload {\n  email: string,\n  password: string,\n  username: string\n}\n\nexport interface StrapiLoginResponse {\n  jwt: string,\n  user: StrapiUser\n}\n\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\nexport interface StrapiExtendedUser {\n  data: {\n    user_id: number,\n    user: number\n  }\n  \n}\n\n\nexport type StrapiUploadResponse = StrapiMedia[]\n\nexport interface StrapiMedia {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiUser.html":{"url":"interfaces/StrapiUser.html","title":"interface - StrapiUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiData {\n  id: number,\n  attributes: T\n}\n\nexport interface StrapiArrayResponse {\n  data: StrapiData[],\n  meta: {\n    pagination?: {\n      page: number,\n      pageSize: number,\n      pageCount: number,\n      total: number,\n    }\n  }\n}\n\nexport interface StrapiResponse {\n  data: StrapiData\n}\n\nexport interface StrapiUser {\n  id: number,\n  username: string,\n  email: string\n}\n\nexport type StrapiMe = StrapiUser;\n\nexport interface StrapiLoginPayload {\n  identifier: string,\n  password: string\n}\n\nexport interface StrapiRegisterPayload {\n  email: string,\n  password: string,\n  username: string\n}\n\nexport interface StrapiLoginResponse {\n  jwt: string,\n  user: StrapiUser\n}\n\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\nexport interface StrapiExtendedUser {\n  data: {\n    user_id: number,\n    user: number\n  }\n  \n}\n\n\nexport type StrapiUploadResponse = StrapiMedia[]\n\nexport interface StrapiMedia {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Thumbnail.html":{"url":"interfaces/Thumbnail.html","title":"interface - Thumbnail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Thumbnail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/strapi.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiData {\n  id: number,\n  attributes: T\n}\n\nexport interface StrapiArrayResponse {\n  data: StrapiData[],\n  meta: {\n    pagination?: {\n      page: number,\n      pageSize: number,\n      pageCount: number,\n      total: number,\n    }\n  }\n}\n\nexport interface StrapiResponse {\n  data: StrapiData\n}\n\nexport interface StrapiUser {\n  id: number,\n  username: string,\n  email: string\n}\n\nexport type StrapiMe = StrapiUser;\n\nexport interface StrapiLoginPayload {\n  identifier: string,\n  password: string\n}\n\nexport interface StrapiRegisterPayload {\n  email: string,\n  password: string,\n  username: string\n}\n\nexport interface StrapiLoginResponse {\n  jwt: string,\n  user: StrapiUser\n}\n\nexport type StrapiRegisterResponse = StrapiLoginResponse;\n\nexport interface StrapiExtendedUser {\n  data: {\n    user_id: number,\n    user: number\n  }\n  \n}\n\n\nexport type StrapiUploadResponse = StrapiMedia[]\n\nexport interface StrapiMedia {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\n\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a user in the application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dream_code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            extended_id\n                                        \n                                \n                                \n                                        \n                                            followers\n                                        \n                                \n                                \n                                        \n                                            following\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            island\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            profile_picture\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dream_code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dream_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extended_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extended_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        following:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        island\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        island:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile_picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profile_picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"normal\" | \"admin\" | \"banned\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"normal\" | \"admin\" | \"banned\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Island } from \"./island\";\n/**\n * Represents a user in the application.\n */\nexport interface User {\n    id?: number,\n    uuid?:string,\n    username:string,\n    island?:any,\n    extended_id?:number,\n    profile_picture?:string,\n    dream_code?:string,\n    role: 'normal' | 'admin' | 'banned',\n    followers: string[],\n    following: string[]\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserCardComponent.html":{"url":"components/UserCardComponent.html","title":"component - UserCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/user-card/user-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-card\n            \n\n\n\n            \n                styleUrls\n                ./user-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                BUTTON_CONFIGS\n                            \n                            \n                                buttonConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleButtonClick\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onEditClicked\n                            \n                            \n                                    Async\n                                openUserListModal\n                            \n                            \n                                    Async\n                                presentUserForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonType\n                            \n                            \n                                isMe\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                editModal\n                            \n                            \n                                follow\n                            \n                            \n                                unfollow\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modal: ModalController, userSvc: UserService, fbAuth: FirebaseAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/user-card/user-card.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fbAuth\n                                                  \n                                                        \n                                                                        FirebaseAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/user-card/user-card.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isMe\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/user-card/user-card.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/user-card/user-card.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        editModal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/user-card/user-card.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        follow\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/user-card/user-card.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        unfollow\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/user-card/user-card.component.ts:38\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleButtonClick\n                        \n                    \n                \n            \n            \n                \nhandleButtonClick(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-card/user-card.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Handles button click events on the card.\nEmits follow, unfollow, edit, or ban actions based on the buttonConfig.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-card/user-card.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Initializes the component and sets the configuration of the button\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEditClicked\n                        \n                    \n                \n            \n            \n                \nonEditClicked(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-card/user-card.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Handles the edit button click event.\nEmits editModal event to open the user edit modal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user object to edit.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openUserListModal\n                        \n                    \n                \n            \n            \n                \n                        \n                    openUserListModal(listType: string, event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-card/user-card.component.ts:165\n                        \n                    \n\n\n            \n                \n                        Opens a modal to display the list of followers or following users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                listType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The type of list to open ('followers' or 'following').\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The click event object.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentUserForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentUserForm(data: User | null, onDismiss: (result: any) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-card/user-card.component.ts:144\n                        \n                    \n\n\n            \n                \n                        Presents the user form modal for editing user details.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            User | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The initial user data to populate the form.\n\n                                            \n                                        \n                                        \n                                                onDismiss\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Callback function when the modal is dismissed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        BUTTON_CONFIGS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    follow: {\n      text: 'follow',\n      action: 'follow',\n      color: 'secondary',\n      fill: 'solid',\n      icon: 'person-add',\n      slot: 'end'\n    },\n    unfollow: {\n      text: 'unfollow',\n      action: 'unfollow',\n      color: 'secondary',\n      fill: 'outline',\n      icon: 'person-remove'  ,\n      slot: 'end'\n    },\n    edit: {\n      text: 'edit',\n      action: 'edit',\n      color: 'secondary',\n      fill: 'solid',\n      icon: 'pencil' ,\n      slot: 'icon-only'\n    },\n    ban: {\n      text: 'ban',\n      action: 'ban',\n      color: 'danger',\n      fill: 'solid',\n      icon: 'ban'  ,\n      slot: 'start'\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/user-card/user-card.component.ts:47\n                        \n                    \n\n            \n                \n                    Defines the button configurations available for the card.\nEach key corresponds to a button type with its respective configuration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ButtonConfig | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/user-card/user-card.component.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { User } from 'src/app/core/interfaces/user';\nimport { UserFormComponent } from '../user-form/user-form.component';\nimport { ModalController } from '@ionic/angular';\nimport { UserService } from 'src/app/core/services/user.service';\nimport { FirebaseAuthService } from 'src/app/core/services/api/firebase/firebase-auth.service';\nimport { UserListComponent } from '../user-list/user-list.component';\n\n/**\n * Interface for button configuration used in UserCardComponent.\n */\ninterface ButtonConfig {\n  text: string;\n  action: string;\n  color: string;\n  fill: string;\n  icon: string,\n  slot:string;\n}\n\n@Component({\n  selector: 'app-user-card',\n  templateUrl: './user-card.component.html',\n  styleUrls: ['./user-card.component.scss'],\n})\nexport class UserCardComponent  implements OnInit {\n\n  constructor(\n    private modal: ModalController,\n    private userSvc:UserService,\n    private fbAuth:FirebaseAuthService\n  ) { }\n  @Input() user: User | null  = null;\n  @Input() buttonType: string = \"\";\n  @Input() isMe: boolean = false;\n\n  @Output() follow = new EventEmitter();\n  @Output() unfollow = new EventEmitter();\n  @Output() editModal = new EventEmitter();\n\n  buttonConfig!: ButtonConfig | null ;\n\n  /**\n   * Defines the button configurations available for the card.\n   * Each key corresponds to a button type with its respective configuration.\n   */\n  private readonly BUTTON_CONFIGS: { [key: string]: ButtonConfig } = {\n    follow: {\n      text: 'follow',\n      action: 'follow',\n      color: 'secondary',\n      fill: 'solid',\n      icon: 'person-add',\n      slot: 'end'\n    },\n    unfollow: {\n      text: 'unfollow',\n      action: 'unfollow',\n      color: 'secondary',\n      fill: 'outline',\n      icon: 'person-remove'  ,\n      slot: 'end'\n    },\n    edit: {\n      text: 'edit',\n      action: 'edit',\n      color: 'secondary',\n      fill: 'solid',\n      icon: 'pencil' ,\n      slot: 'icon-only'\n    },\n    ban: {\n      text: 'ban',\n      action: 'ban',\n      color: 'danger',\n      fill: 'solid',\n      icon: 'ban'  ,\n      slot: 'start'\n    }\n  };\n  \n\n/**\n   * Initializes the component and sets the configuration of the button\n   */\n  ngOnInit() {\n    if (this.buttonType == 'none') {\n      this.buttonConfig = null\n    } else {\n      this.buttonConfig = this.BUTTON_CONFIGS[this.buttonType];\n    }\n    \n\n  }\n/**\n   * Handles button click events on the card.\n   * Emits follow, unfollow, edit, or ban actions based on the buttonConfig.\n   * @param event The click event object.\n   */\n  handleButtonClick(event:any) {\n    switch (this.buttonConfig?.action) {\n      case 'follow':\n        this.follow.emit(this.user!);\n        this.buttonConfig =  this.BUTTON_CONFIGS['unfollow']\n        break;\n      case 'unfollow':\n        this.unfollow.emit(this.user!)\n        this.buttonConfig =  this.BUTTON_CONFIGS['follow']\n      break;\n      case 'edit':\n        this.onEditClicked(this.user!)\n        break;\n      case 'ban':\n        this.userSvc.banUser(this.user!).subscribe()\n        break;\n    }\n    event.stopPropagation();\n  }\n\n    /**\n   * Handles the edit button click event.\n   * Emits editModal event to open the user edit modal.\n   * @param user The user object to edit.\n   */\n  onEditClicked(user: User) {\n    this.editModal.emit(true);\n    var onDismiss = (info: any) => {\n      if (info.role == 'submit') {\n        this.userSvc.updateUser(user, info);\n        this.editModal.emit(false);\n      } else {\n        this.editModal.emit(false);\n        console.error(\"Error\")\n      }\n    }\n    this.presentUserForm(user, onDismiss);\n  }\n\n   /**\n   * Presents the user form modal for editing user details.\n   * @param data The initial user data to populate the form.\n   * @param onDismiss Callback function when the modal is dismissed.\n   */\n  async presentUserForm(data: User | null, onDismiss: (result: any) => void) {\n    const modal = await this.modal.create({\n      component: UserFormComponent,\n      componentProps: {\n        user: data\n      }\n    });\n    modal.present();\n    modal.onDidDismiss().then(result => {\n      this.editModal.emit(false);\n      if (result && result.data) {\n        onDismiss(result);\n      }\n    })\n  }\n\n  /**\n   * Opens a modal to display the list of followers or following users.\n   * @param listType The type of list to open ('followers' or 'following').\n   * @param event The click event object.\n   */\n  async openUserListModal(listType: string,event:any) {\n    event.stopPropagation();\n    let userUuids: string[] | undefined;\n  \n    if (listType === \"following\") {\n      userUuids = this.user?.following;\n    } else {\n      userUuids = this.user?.followers;\n    }\n  \n    this.editModal.emit(true);\n    const modal = await this.modal.create({\n      component: UserListComponent,\n      componentProps: {\n        userUuids: userUuids,\n        listType: listType\n      }\n    });\n    modal.present();\n    modal.onDidDismiss().then(_ => {\n      this.editModal.emit(false);\n    })\n  }\n  \n}\n\n    \n\n    \n        \n  \n    \n      {{ 'profile.banned' | translate}} &nbsp;\n      \n        \n        \n          {{ 'profile.' + buttonConfig.text | translate}}\n        \n      \n      \n    \n    \n      \n      \n    \n    \n      @{{user?.username}}\n      {{'profile.dreamCode' | translate}}: {{user?.dream_code}}\n    \n    \n      \n        \n          \n            {{ 'profile.following' | translate }}\n            {{this.user?.following ?  this.user?.following?.length : 0}} \n          \n          \n            {{ 'profile.followers' | translate }}\n            {{this.user?.followers ?  this.user?.followers?.length : 0}} \n          \n        \n      \n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./user-card.component.scss\n                \n                .img {\n    height: 20rem;\n    width: 20rem;\n    align-self: center;\n}\n\n.banned {\n    background-color: #FFDFE9 !important;\n    /* Puedes cambiar el color a tu preferencia */\n}\n\n.button {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    min-height: 40px;\n    text-align: center;\n\n    span {\n        font-size: 1rem;\n        padding: 0;\n    }\n\n    p {\n        font-size: 1rem;\n        color: red;\n    }\n}\n\n.img img,\n.img ion-icon {\n    height: 100%;\n    width: 100%;\n    border-radius: 50%;\n    object-fit: cover;\n}\n\nion-card {\n    border-radius: 25px;\n    width: 30rem;\n    height: 640px !important;\n    color: var(--ion-color-primary-dark);\n    background-color: var(--ion-color-primary-tint);\n}\n\nion-card-content {\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n    padding-bottom: 0 !important;\n\n    h1 {\n        font-weight: bold;\n        color: var(--ion-color-primary-dark) !important;\n    }\n}\n\n.user-info {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    margin: 2rem;\n    gap: 1rem;\n    min-height: 102px;\n\n    color: var(--ion-color-primary-dark) !important;\n\n    h1 {\n        font-size: 2.3rem;\n    }\n\n    span {\n        font-size: 1.2rem;\n    }\n}\n\n.profile-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n    /* Asegura que el ion-card ocupe toda la altura disponible */\n}\n\n.follow-table {\n    margin-top: auto;\n    /* Empuja el div follow-table hacia la parte inferior */\n}\n\n\n\ntable {\n    margin: 0rem -2rem;\n    align-self: flex-end;\n    width: 115%;\n    border-collapse: collapse;\n    height: 75%;\n}\n\nth,\ntd {\n    text-align: center;\n    padding: 10px;\n    height: 6rem;\n\n\n    h1 {\n        font-size: 1.8rem;\n    }\n\n    p {\n        font-size: 1.2rem;\n    }\n}\n\n\ntr:first-child td {\n    border-top: 3px solid var(--ion-color-secondary);\n}\n\ntd:first-child {\n    border-right: 3px solid var(--ion-color-secondary);\n}\n\n.follow-cell {\n    cursor: pointer;\n}\n\n.profile-container,\n.profile-container ion-card-content,\n.user-info h1,\n.user-info span,\n.follow-cell p,\n.follow-cell h1 {\n    color: var(--ion-color-secondary) !important;\n}\n\n@media only screen and (width\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'profile.banned\\' | translate}}                                  {{ \\'profile.\\' + buttonConfig.text | translate}}                                                      @{{user?.username}}      {{\\'profile.dreamCode\\' | translate}}: {{user?.dream_code}}                                            {{ \\'profile.following\\' | translate }}            {{this.user?.following ?  this.user?.following?.length : 0}}                                 {{ \\'profile.followers\\' | translate }}            {{this.user?.followers ?  this.user?.followers?.length : 0}}                                           '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCredentials.html":{"url":"interfaces/UserCredentials.html","title":"interface - UserCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-credentials.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents user credentials for authentication purposes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserCredentials{\n  username:string,\n  password:string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserFormComponent.html":{"url":"components/UserFormComponent.html","title":"component - UserFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/user-form/user-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-form\n            \n\n\n\n            \n                styleUrls\n                ./user-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDirtyValues\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formModal: ModalController, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/user-form/user-form.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/user-form/user-form.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDirtyValues\n                        \n                    \n                \n            \n            \n                \ngetDirtyValues(form: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-form/user-form.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Method to retrieve the dirty (modified) values from the form.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The form group to extract dirty values from.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An object containing the dirty values from the form.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-form/user-form.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Method to handle the cancel action.\nDismisses the modal without returning any data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-form/user-form.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Method to handle the submit action.\nLogs the dirty values from the form and dismisses the modal with the dirty values.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/user-form/user-form.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n\n                \n                    \n                        setuser(_user: User | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/user-form/user-form.component.ts:17\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _user\n                                                    \n                                                            \n                                                                            User | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { User } from 'src/app/core/interfaces/user';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n  userForm: FormGroup;\n\n\n  @Input() set user(_user: User | null) { \n    if (_user) {\n      this.userForm.controls['username'].setValue(_user.username);\n      if (_user.dream_code) {\n        this.userForm.controls['dream_code'].setValue(_user.dream_code);\n      }\n      if (_user.profile_picture) {\n        this.userForm.controls['profile_picture'].setValue(_user.profile_picture);\n      }\n    }\n  }\n\n  constructor(\n    private formModal: ModalController,\n    private formBuilder: FormBuilder\n  ) {\n    this.userForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      dream_code: [],\n      profile_picture: []\n    });\n  }\n\n   /**\n   * Method to handle the cancel action.\n   * Dismisses the modal without returning any data.\n   */\n  onCancel() {\n    this.formModal.dismiss(null, 'cancel');\n  }\n /**\n   * Method to retrieve the dirty (modified) values from the form.\n   * @param form The form group to extract dirty values from.\n   * @returns An object containing the dirty values from the form.\n   */\n  getDirtyValues(form: FormGroup) {\n    let dirtyValues: any = {};\n\n    Object.keys(form.controls).forEach(key => {\n      let currentControl = form.controls[key];\n      if (currentControl.dirty) {\n        dirtyValues[key] = currentControl.value;\n      }\n    });\n    return dirtyValues;\n  }\n /**\n   * Method to handle the submit action.\n   * Logs the dirty values from the form and dismisses the modal with the dirty values.\n   */\n  onSubmit() {\n    console.log(\"añaña\", this.getDirtyValues(this.userForm))\n    this.formModal.dismiss(this.getDirtyValues(this.userForm), 'submit');\n  }\n\n}\n\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      {{ 'profile.edit' | translate }} \n  \n\n\n  \n    \n    \n      \n      {{ 'login.username' | translate }}\n    \n    \n      \n      {{ 'profile.dreamCode' | translate }}\n    \n  \n\n\n\n   {{ 'main.save' | translate}} \n \n    \n\n    \n                \n                    ./user-form.component.scss\n                \n                app-picture-selectable {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n}\n\nform {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    padding-left: 1.5rem;\n}\n\n:host ::ng-deep .p-inputtext {\n    width: 100%;\n}\n\nion-toolbar {\n    --background: var(--ion-color-secondary);\n    --color: white;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ \\'profile.edit\\' | translate }}                         {{ \\'login.username\\' | translate }}                    {{ \\'profile.dreamCode\\' | translate }}         {{ \\'main.save\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserListComponent.html":{"url":"components/UserListComponent.html","title":"component - UserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/user-list/user-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-list\n            \n\n\n\n            \n                styleUrls\n                ./user-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                goToUserProfile\n                            \n                            \n                                    Async\n                                loadUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                listType\n                            \n                            \n                                userUuids\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController, userSvc: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/user-list/user-list.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        listType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/user-list/user-list.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userUuids\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/user-list/user-list.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        goToUserProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    goToUserProfile(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-list/user-list.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Navigates to the profile page of a user with the specified UUID.\nDismisses any open modal before navigating.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The UUID of the user whose profile page to navigate to.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-list/user-list.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Asynchronous method to load user data based on the provided user UUIDs.\nFetches user data from the user service and stores it in the users array.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-list/user-list.component.ts:27\n                        \n                    \n\n\n            \n                \n                        Initializes the user list by loading user data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-list/user-list.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Method to handle the cancel action.\nDismisses the modal without returning any data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/user-list/user-list.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { User } from 'src/app/core/interfaces/user';\nimport { UserService } from 'src/app/core/services/user.service';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss'],\n})\nexport class UserListComponent  implements OnInit {\n\n  @Input() userUuids: string[] = [];\n  @Input() listType:string = \"\"\n  users: any[] = [];\n\n  constructor(\n    private modalController: ModalController,\n    private userSvc: UserService,\n    private router:Router\n  ) { }\n\n   /**\n   * Initializes the user list by loading user data.\n   */\n  ngOnInit() {\n    this.loadUsers();\n  }\n /**\n   * Method to handle the cancel action.\n   * Dismisses the modal without returning any data.\n   */\n  onCancel() {\n    this.modalController.dismiss();\n  }\n  /**\n   * Asynchronous method to load user data based on the provided user UUIDs.\n   * Fetches user data from the user service and stores it in the `users` array.\n   */\n  async loadUsers() {\n    if (!this.userUuids || this.userUuids.length === 0) {\n      this.users = [];\n    } else {\n      const userPromises = this.userUuids.map(uuid => this.userSvc.getUserById(uuid));\n    this.users = await Promise.all(userPromises);\n    console.log(\"users\", this.users)\n    }\n    \n  }\n  \n  /**\n * Navigates to the profile page of a user with the specified UUID.\n * Dismisses any open modal before navigating.\n * \n * @param uuid The UUID of the user whose profile page to navigate to.\n */\n  async goToUserProfile(uuid: string) {\n    await this.modalController.dismiss();\n    await this.router.navigate(['/profile', uuid]);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n  \n  \n   {{ 'profile.' + listType | translate}}\n  \n\n\n\n  \n    \n       \n        \n          \n          \n        \n        \n          @{{ user.username }}\n        \n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./user-list.component.scss\n                \n                .user-list {\n    padding: 1rem 1rem 1rem 0rem;\n}\n\nion-toolbar {\n    --background: var(--ion-color-secondary);\n    --color: white !important;\n\n    ion-icon {\n        --color: white !important;\n        /* Para el color del icono */\n    }\n}\n\n.custom-avatar {\n    width: 40px;\n    height: 40px;\n    color: var(--ion-color-secondary-shade);\n\n    ion-icon,\n    img {\n        color: var(--ion-color-secondary-shade);\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n    }\n}\nion-item {\n    --border-color: var(--ion-color-secondary-tint);\n    --detail-icon-color: var(--ion-color-secondary-tint);\n    --detail-icon-opacity: 100%\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                         {{ \\'profile.\\' + listType | translate}}                                                                     @{{ user.username }}                          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRegisterInfo.html":{"url":"interfaces/UserRegisterInfo.html","title":"interface - UserRegisterInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRegisterInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-register-info.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents registration information required to create a new user account.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserRegisterInfo{\n    email:string,\n    password:string,\n    username:string,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _users\n                            \n                            \n                                lastUser\n                            \n                            \n                                    Public\n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                banUser\n                            \n                            \n                                followUser\n                            \n                            \n                                    Public\n                                getAllUsers\n                            \n                            \n                                    Public\n                                    Async\n                                getFiltered\n                            \n                            \n                                    Public\n                                getPaginatedUsers\n                            \n                            \n                                    Public\n                                    Async\n                                getUserById\n                            \n                            \n                                unfollowUser\n                            \n                            \n                                    Private\n                                updateLocalUsers\n                            \n                            \n                                    Public\n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fbSvc: FirebaseService, fbAuth: FirebaseAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fbSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fbAuth\n                                                  \n                                                        \n                                                                        FirebaseAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        banUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    banUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:281\n                        \n                    \n\n\n            \n                \n                        Bans a user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User to ban.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        followUser\n                        \n                    \n                \n            \n            \n                \nfollowUser(userToFollow: User, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:152\n                        \n                    \n\n\n            \n                \n                        Follows a user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userToFollow\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User to follow.\n\n                                            \n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current user following.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Retrieves all users from Firebase.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getFiltered\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFiltered(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:253\n                        \n                    \n\n\n            \n                \n                        Retrieves users filtered by username.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Username to filter users by.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getPaginatedUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaginatedUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Retrieves paginated users from Firebase.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:229\n                        \n                    \n\n\n            \n                \n                        Retrieves a user by UUID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    UUID of the user to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unfollowUser\n                        \n                    \n                \n            \n            \n                \nunfollowUser(userToUnfollow: User, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:176\n                        \n                    \n\n\n            \n                \n                        Unfollows a user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userToUnfollow\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User to unfollow.\n\n                                            \n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current user unfollowing.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateLocalUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLocalUsers(currentUserId: string, targetUserId: string, isFollowing: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:199\n                        \n                    \n\n\n            \n                \n                        Helper function to update local users' followers and following lists.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentUserId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current user's UUID.\n\n                                            \n                                        \n                                        \n                                                targetUserId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Target user's UUID.\n\n                                            \n                                        \n                                        \n                                                isFollowing\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Boolean indicating whether the current user is following the target user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: User, info: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:98\n                        \n                    \n\n\n            \n                \n                        Updates user profile information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User object to update.\n\n                                            \n                                        \n                                        \n                                                info\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Updated information for the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._users.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FirebaseService } from './api/firebase/firebase.service';\nimport { User } from '../interfaces/user';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FirebaseAuthService } from './api/firebase/firebase-auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private fbSvc: FirebaseService,\n    private fbAuth: FirebaseAuthService\n  ) { }\n\n  lastUser: any = null\n\n  private _users: BehaviorSubject = new BehaviorSubject([])\n  public users$: Observable = this._users.asObservable();\n\n  /**\n   * Retrieves all users from Firebase.\n   * @returns {Observable}\n   */\n  public getAllUsers(): Observable {\n    return new Observable(observer => {\n      this.fbSvc.getDocuments(\"users\").then(documents => {\n        const users = documents.map(doc => {\n          const data = doc.data;\n          const user: User = {\n            uuid: doc['id'],\n            username: data['username'],\n            profile_picture: data['profile_picture'],\n            dream_code: data['dream_code'],\n            role: data['role'],\n            followers: data['followers'],\n            following: data['following']\n          };\n          return user;\n        })\n        observer.next(users);\n        observer.complete();\n      })\n    })\n  }\n\n   /**\n   * Retrieves paginated users from Firebase.\n   * @returns { Observable}\n   */\n  public getPaginatedUsers(): Observable {\n    return new Observable(observer => {\n      this.fbSvc.getDocumentsPaginated(\"users\", 10, \"username\", this.lastUser).then(usersPaginated => {\n        const newUsers = usersPaginated.map(doc => {\n          const data = doc.data;\n          if (data && data['username']) {\n            const user: User = {\n              uuid: doc['id'],\n              username: data['username'],\n              island: data['island'],\n              profile_picture: data['profile_picture'],\n              dream_code: data['dream_code'],\n              role: data['role'],\n              followers: data['followers'],\n              following: data['following']\n            };\n            return user;\n          } else {\n            return undefined;\n          }\n        }).filter((user): user is User => user !== undefined);\n\n        if (newUsers.length > 0) {\n          this.lastUser = newUsers[newUsers.length - 1].username;\n        }\n\n        const currentUsers = this._users.value;\n        const updatedUsers = [...currentUsers, ...newUsers];\n\n        this._users.next(updatedUsers);\n        observer.next(updatedUsers);\n        observer.complete();\n      }).catch(error => {\n        console.error('Error fetching paginated users:', error);\n        observer.error(error);\n      });\n    });\n  }\n\n\n/**\n   * Updates user profile information.\n   * @param user User object to update.\n   * @param info Updated information for the user.\n   * @returns {Promise>}\n   */\n  public async updateUser(user: User, info: any): Promise> {\n    let postdata: any = {\n      username: info.data.username || user.username,\n      role: user.role\n    };\n\n    if (info.data.dream_code !== undefined) {\n      if (info.data.dream_code === '') {\n        postdata.dream_code = null; \n      } else {\n        postdata.dream_code = info.data.dream_code;\n      }\n    } else if (user.dream_code) {\n      postdata.dream_code = user.dream_code;\n    }\n\n    if (info.data.profile_picture !== undefined) {\n      if (info.data.profile_picture === null) {\n        if (user.profile_picture) {\n          await this.fbSvc.deleteFile(user.profile_picture);\n        }\n        postdata.profile_picture = null;\n      } else {\n        const file: File = info.data.profile_picture;\n        try {\n          const url = await this.fbSvc.imageUpload(file);\n          if (user.profile_picture) {\n            await this.fbSvc.deleteFile(user.profile_picture);\n          }\n          postdata.profile_picture = url.file;\n        } catch (error) {\n          console.error('Error al subir la nueva imagen:', error);\n          throw error;\n        }\n      }\n    } else if (user.profile_picture) {\n      postdata.profile_picture = user.profile_picture;\n    }\n\n    await this.fbSvc.updateDocument('users', user.uuid, postdata);\n    this.fbAuth.me().subscribe(updatedUser => {\n      this.fbAuth.updateProfilePictureAndUser(updatedUser);\n    });\n    return new Observable(observer => {\n      observer.complete();\n    });\n  }\n\n   /**\n   * Follows a user.\n   * @param userToFollow User to follow.\n   * @param currentUser Current user following.\n   * @returns {Observable }\n   */\n  followUser(userToFollow: User, currentUser: User): Observable {\n    return new Observable(observer => {\n      if (currentUser) {\n        const newFollowing = [...currentUser.following, userToFollow.uuid];\n        this.fbSvc.updateDocument('users', currentUser.uuid, { following: newFollowing }).then(() => {\n          const newFollowers = [...userToFollow.followers, currentUser!.uuid];\n          this.fbSvc.updateDocument('users', userToFollow.uuid, { followers: newFollowers }).then(() => {\n            // Update local state\n            this.updateLocalUsers(currentUser.uuid!, userToFollow.uuid!, true);\n            observer.complete();\n          });\n        });\n      } else {\n        observer.error('No se encontró el usuario actual');\n      }\n    });\n  }\n\n/**\n   * Unfollows a user.\n   * @param userToUnfollow User to unfollow.\n   * @param currentUser Current user unfollowing.\n   * @returns {Observable}\n   */\n  unfollowUser(userToUnfollow: User, currentUser: User): Observable {\n    return new Observable(observer => {\n      if (currentUser) {\n        const newFollowing = currentUser.following.filter(uuid => uuid !== userToUnfollow.uuid);\n        this.fbSvc.updateDocument('users', currentUser.uuid, { following: newFollowing }).then(() => {\n          const newFollowers = userToUnfollow.followers.filter(uuid => uuid !== currentUser!.uuid);\n          this.fbSvc.updateDocument('users', userToUnfollow.uuid, { followers: newFollowers }).then(() => {\n            this.updateLocalUsers(currentUser.uuid!, userToUnfollow.uuid!, false);\n            observer.complete();\n          });\n        });\n      } else {\n        observer.error('No se encontró el usuario actual');\n      }\n    });\n  }\n\n/**\n   * Helper function to update local users' followers and following lists.\n   * @param currentUserId Current user's UUID.\n   * @param targetUserId Target user's UUID.\n   * @param isFollowing Boolean indicating whether the current user is following the target user.\n   */\n  private updateLocalUsers(currentUserId: string, targetUserId: string, isFollowing: boolean): void {\n    const currentUsers = this._users.value;\n\n    const updatedUsers = currentUsers.map(user => {\n      if (user.uuid === currentUserId) {\n        return {\n          ...user,\n          following: isFollowing\n            ? [...user.following, targetUserId]\n            : user.following.filter(id => id !== targetUserId)\n        };\n      } else if (user.uuid === targetUserId) {\n        return {\n          ...user,\n          followers: isFollowing\n            ? [...user.followers, currentUserId]\n            : user.followers.filter(id => id !== currentUserId)\n        };\n      }\n      return user;\n    });\n\n    this._users.next(updatedUsers);\n  }\n\n   /**\n   * Retrieves a user by UUID.\n   * @param uid UUID of the user to retrieve.\n   * @returns { Promise}\n   */\n  public async getUserById(uid: string): Promise {\n    const doc = await this.fbSvc.getDocument(\"users\", uid);\n    if (doc) {\n      const data = doc.data;\n      return {\n        uuid: doc.id,\n        username: data['username'],\n        island: data['island'],\n        profile_picture: data['profile_picture'],\n        dream_code: data['dream_code'],\n        role: data['role'],\n        followers: data['followers'],\n        following: data['following']\n      };\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * Retrieves users filtered by username.\n   * @param username Username to filter users by.\n   * @returns {Promise}\n   */\n  public async getFiltered(username: string): Promise {\n\n    const usersFiltered = await this.fbSvc.getDocumentsFiltered(\"users\", \"username\", username);\n\n    const users: User[] = [];\n\n    usersFiltered.forEach(doc => {\n      const data = doc.data;\n      const user: User = {\n        uuid: doc.id,\n        username: data['username'],\n        island: data['island'],\n        profile_picture: data['profile_picture'],\n        dream_code: data['dream_code'],\n        role: data['role'],\n        followers: data['followers'],\n        following: data['following']\n      };\n      users.push(user);\n    });\n    return users;\n  }\n\n /**\n   * Bans a user.\n   * @param user User to ban.\n   * @returns {Observable}\n   */\n  public banUser(user: User): Observable {\n    return new Observable(observer => {\n      this.fbSvc.updateDocument('users', user.uuid, { role: 'banned' }).then(() => {\n        const updatedUser: User = { ...user, role: 'banned' };\n\n        const currentUsers = this._users.value;\n        const updatedUsers = currentUsers.map(u => u.uuid === updatedUser.uuid ? updatedUser : u);\n\n        this._users.next(updatedUsers);\n\n        observer.next(updatedUsers);\n        observer.complete();\n      }).catch(error => {\n        observer.error(error);\n      });\n    });\n  }\n\n}  \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Villager.html":{"url":"interfaces/Villager.html","title":"interface - Villager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Villager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/villager.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a villager in the application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PaginatedData } from \"./data\"\n\n/**\n * Represents a villager in the application.\n */\nexport interface Villager {\n    id: string,\n    attributes: {\n        name: string,\n        image_url: string,\n        species: string,\n        personality: string,\n        gender: string,\n        birthday_month: string,\n        birthday_day: number,\n        sign: string,\n        quote: string,\n        phrase: string,\n        islander:boolean\n    }\n}\n\n\nexport type PaginatedVillagers = PaginatedData\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VillagerComponent.html":{"url":"components/VillagerComponent.html","title":"component - VillagerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VillagerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/villager/villager.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-villager\n            \n\n\n\n            \n                styleUrls\n                ./villager.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./villager.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                villager\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/villager/villager.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        villager\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/villager/villager.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Villager } from 'src/app/core/interfaces/villager';\n\n@Component({\n  selector: 'app-villager',\n  templateUrl: './villager.component.html',\n  styleUrls: ['./villager.component.scss'],\n})\nexport class VillagerComponent  {\n\n  @Input() villager:any;\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        {{ 'villagers.species.' +  villager?.attributes.species| translate}}\n        \n        \n      \n      \n        {{ villager?.attributes.name | titlecase }}\n        {{'villagers.personality' | translate}}: {{ 'villagers.personalities.' + villager?.attributes.personality | translate }}\n        {{'villagers.birthday' | translate}}: {{ 'villagers.months.' + villager?.attributes.birthday_month | translate }} {{ villager?.attributes.birthday_day }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./villager.component.scss\n                \n                ion-card {\n    border-radius: 20px;\n    height: fit-content;\n    width: 45vh;\n}\n\n.villager-card {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    background: var(--ion-color-primary-tint);\n    border-radius: 20px;\n    padding: 20px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    gap: 1rem;\n}\n\n.villager-info {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n.villager-image-container {\n    width: 150px;\n    height: 100px;\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n}\n\n.villager-image-container img {\n    width: auto;\n    height: 175%;\n    object-fit: cover;\n}\n.info {\n    display: flex;\n    flex-direction: column;\n    text-align: start;\n    gap: 5px;\n}\n\n.villager-species {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    margin-bottom: 10px;\n    gap: 10px;\n}\n\n.villager-species span {\n    margin-right: 5px;\n    font-weight: bold;\n}\n\nion-icon {\n    font-size: 1.5em;\n    font-weight: bold;\n}\n\n\n@media only screen and (width\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ \\'villagers.species.\\' +  villager?.attributes.species| translate}}                                    {{ villager?.attributes.name | titlecase }}        {{\\'villagers.personality\\' | translate}}: {{ \\'villagers.personalities.\\' + villager?.attributes.personality | translate }}        {{\\'villagers.birthday\\' | translate}}: {{ \\'villagers.months.\\' + villager?.attributes.birthday_month | translate }} {{ villager?.attributes.birthday_day }}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'VillagerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VillagerItemComponent.html":{"url":"components/VillagerItemComponent.html","title":"component - VillagerItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VillagerItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/villager-item/villager-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-villager-item\n            \n\n\n\n            \n                styleUrls\n                ./villager-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./villager-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _villager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onVillagerClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                villager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    villager\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/villager-item/villager-item.component.ts:22\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        villager\n                    \n                \n                \n                    \n                        Type :         Villager | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/villager-item/villager-item.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/villager-item/villager-item.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onVillagerClicked\n                        \n                    \n                \n            \n            \n                \nonVillagerClicked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/villager-item/villager-item.component.ts:31\n                        \n                    \n\n\n            \n                \n                        Method to handle the click event on the villager item.\nEmits the clicked event with the villager object.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _villager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Villager | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/villager-item/villager-item.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        villager\n                    \n                \n\n                \n                    \n                        getvillager()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/villager-item/villager-item.component.ts:20\n                                \n                            \n\n                \n                    \n                        setvillager(_villager: Villager | undefined)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/villager-item/villager-item.component.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _villager\n                                                    \n                                                            \n                                                                            Villager | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Villager } from 'src/app/core/interfaces/villager';\n\n@Component({\n  selector: 'app-villager-item',\n  templateUrl: './villager-item.component.html',\n  styleUrls: ['./villager-item.component.scss'],\n})\nexport class VillagerItemComponent {\n\n  private _villager:Villager|undefined;\n\n  @Input('villager') set villager(_villager:Villager|undefined){\n    this._villager = _villager\n  }\n\n  @Output('clicked') clicked = new EventEmitter();\n\n  \n  get villager():Villager|undefined{\n    return this._villager;\n  }\n\n\n  constructor() { }\n\n /**\n   * Method to handle the click event on the villager item.\n   * Emits the clicked event with the villager object.\n   */\n  onVillagerClicked(){\n    this.clicked.emit(this._villager);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  {{villager?.attributes?.name}} \n\n    \n\n    \n                \n                    ./villager-item.component.scss\n                \n                \nion-avatar {\n    width:3vw; \n    height:3vw; \n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1.5px solid #ffffff2d;\n    \n    background-color:var(--ion-color-primary-tint);\n    color: var(--custom-dark-color);\n}\n\nion-avatar img {\n    object-fit: contain;\n    width: 100%;\n    height: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{villager?.attributes?.name}} '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'VillagerItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VillagerSelectableComponent.html":{"url":"components/VillagerSelectableComponent.html","title":"component - VillagerSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VillagerSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/villager-selectable/villager-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                VILLAGER_SELECTABLE_VALUE_ACCESOR\n                \n            \n\n\n            \n                selector\n                app-villager-selectable\n            \n\n\n\n            \n                styleUrls\n                ./villager-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./villager-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                disabled\n                            \n                            \n                                    Private\n                                island\n                            \n                            \n                                    Public\n                                islandService\n                            \n                            \n                                propagateChange\n                            \n                            \n                                villagers\n                            \n                            \n                                villagerSelected\n                            \n                            \n                                    Public\n                                villagerService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                    Private\n                                    Async\n                                loadVillagers\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onFilter\n                            \n                            \n                                    Async\n                                onLoadVillagers\n                            \n                            \n                                onVillagerClicked\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectVillager\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                num\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(villagerService: VillagerService, islandService: IslandService, authService: AuthStrapiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        villagerService\n                                                  \n                                                        \n                                                                        VillagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        islandService\n                                                  \n                                                        \n                                                                        IslandService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthStrapiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        num\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Clear the search input and reset the filter.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The input component.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:154\n                        \n                    \n\n\n            \n                \n                        Deselect the villager and optionally dismiss the popover.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    The popover component.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(filtering: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Filter villagers based on a filtering string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filtering\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The filtering string.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadVillagers\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadVillagers(filter: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Load villagers based on a filter.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The filter string.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Initialize the component and load villagers.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Handle the filter event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event object.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoadVillagers\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoadVillagers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Load villagers with an empty filter.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVillagerClicked\n                        \n                    \n                \n            \n            \n                \nonVillagerClicked(popover: IonPopover, villager: Villager)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:136\n                        \n                    \n\n\n            \n                \n                        Handle the villager click event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The popover component.\n\n                                            \n                                        \n                                        \n                                                villager\n                                            \n                                                            Villager\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The clicked villager.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Register the change function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The change function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Register the touched function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The touched function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectVillager\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectVillager(name: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Select a villager by name and propagate the change if specified.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The name of the villager.\n\n                                            \n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    Whether to propagate the change.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Set the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Whether the component is disabled.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Write the value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The value to write.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthStrapiService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        island\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Island | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        islandService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IslandService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        villagers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Villager[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        villagerSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Villager | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        villagerService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VillagerService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/villager-selectable/villager-selectable.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonInput, IonPopover } from '@ionic/angular';\nimport { lastValueFrom } from 'rxjs';\nimport { Island } from 'src/app/core/interfaces/island';\nimport { Villager } from 'src/app/core/interfaces/villager';\nimport { AuthStrapiService } from 'src/app/core/services/api/strapi/auth-strapi.service';\nimport { IslandService } from 'src/app/core/services/island.service';\nimport { VillagerService } from 'src/app/core/services/villager.service';\n\n\nexport const VILLAGER_SELECTABLE_VALUE_ACCESOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => VillagerSelectableComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'app-villager-selectable',\n  templateUrl: './villager-selectable.component.html',\n  styleUrls: ['./villager-selectable.component.scss'],\n  providers: [VILLAGER_SELECTABLE_VALUE_ACCESOR]\n})\nexport class VillagerSelectableComponent implements OnInit, ControlValueAccessor {\n\n  villagerSelected: Villager | undefined = undefined;\n  disabled: boolean = true;\n  private island: Island | null = null;\n\n  @Input() num: number =0;\n\n  villagers:Villager[] = [];\n\n\n  propagateChange = (obj: any) => { }\n\n  constructor(\n    public villagerService: VillagerService,\n    public islandService: IslandService,\n    public authService: AuthStrapiService\n  ) { }\n\n   /**\n   * Initialize the component and load villagers.\n   */\n  async ngOnInit() {\n    this.villagers = await this.villagerService.getFiltered(\"a\");\n  }\n\n/**\n   * Load villagers with an empty filter.\n   */\n  async onLoadVillagers() {\n    this.loadVillagers(\"\");\n    \n  }\n/**\n   * Load villagers based on a filter.\n   * @param filter The filter string.\n   */\n  private async loadVillagers(filter: string) {\n    this.villagers = await this.villagerService.getFiltered(filter);\n    \n  }\n/**\n   * Select a villager by name and propagate the change if specified.\n   * @param name The name of the villager.\n   * @param propagate Whether to propagate the change.\n   */\n  private async selectVillager(name: string | undefined, propagate: boolean = false) {\n    if(propagate){\n      if (!name){\n        this.villagerSelected = undefined;\n        this.propagateChange(undefined);\n      }\n      else{\n        this.villagerSelected = this.villagers.find(v=>v.attributes.name===name);\n        this.propagateChange(this.villagerSelected!.attributes.name);\n      }\n    }\n    \n  }\n/**\n   * Write the value to the component.\n   * @param obj The value to write.\n   */\n  writeValue(obj: any): void { \n    this.villagerSelected = obj;\n  }\n /**\n   * Register the change function.\n   * @param fn The change function.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Register the touched function.\n   * @param fn The touched function.\n   */\n  registerOnTouched(fn: any): void {\n\n  }\n/**\n   * Set the disabled state of the component.\n   * @param isDisabled Whether the component is disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Filter villagers based on a filtering string.\n   * @param filtering The filtering string.\n   */\n  private async filter(filtering:string){\n    this.loadVillagers(filtering);\n  }\n\n/**\n   * Handle the filter event.\n   * @param evt The event object.\n   */\n  onFilter(evt:any){\n    this.filter(evt.detail.value);\n    evt.stopPropagation();\n    evt.preventDefault();\n  }\n\n   /**\n   * Handle the villager click event.\n   * @param popover The popover component.\n   * @param villager The clicked villager.\n   */\n  onVillagerClicked(popover:IonPopover, villager:Villager){\n    this.selectVillager(villager.attributes.name, true);\n    popover.dismiss();\n  }\n\n  /**\n   * Clear the search input and reset the filter.\n   * @param input The input component.\n   */\n  clearSearch(input:IonInput){\n    input.value = \"\";\n    this.filter(\"\");\n  }\n\n    /**\n   * Deselect the villager and optionally dismiss the popover.\n   * @param popover The popover component.\n   */\n  deselect(popover:IonPopover|null=null){\n    this.selectVillager(undefined, true);\n    if(popover)\n      popover.dismiss();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n\n    \n    {{\n      villagerSelected.attributes.name\n      }}\n    \n      \n        \n      \n    \n    n/a\n  \n\n\n\n  \n    \n      \n        \n          \n          \n        \n        \n          \n            \n          \n          {{ 'island.form.none' | translate}}\n        \n        \n      \n    \n  \n\n  \n\n    \n\n    \n                \n                    ./villager-selectable.component.scss\n                \n                \nion-avatar {\n    width:3vw; \n    height:3vw; \n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1.5px solid #ffffff2d;\n    \n    background-color:var(--ion-color-primary-tint);\n    color: var(--custom-dark-color);\n}\n\n.icon {\n    background-color: var(--ion-primary-color-tint);\n}\n\nion-avatar ion-img {\n    object-fit: contain;\n    width: 100%;\n    height: 100%;\n}\n\nion-avatar ion-icon {\n    font-size: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{      villagerSelected.attributes.name      }}                                n/a                                                                                                    {{ \\'island.form.none\\' | translate}}                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'VillagerSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VillagerService.html":{"url":"injectables/VillagerService.html","title":"injectable - VillagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VillagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/villager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _villagers\n                            \n                            \n                                lastVillager\n                            \n                            \n                                    Public\n                                villagers$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getFiltered\n                            \n                            \n                                    Public\n                                getPaginatedVillagers\n                            \n                            \n                                    Public\n                                    Async\n                                getVillagerByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, fbSvc: FirebaseService, api: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/villager.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fbSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getFiltered\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFiltered(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/villager.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Retrieves a list of villagers filtered by name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The name of the villager to filter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getPaginatedVillagers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaginatedVillagers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/villager.service.ts:29\n                        \n                    \n\n\n            \n                \n                         Retrieves a paginated list of villagers. Adds 25 villagers to the list each time its called.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getVillagerByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getVillagerByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/villager.service.ts:110\n                        \n                    \n\n\n            \n                \n                        Retrieves a villager by name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The name of the villager to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _villagers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/villager.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastVillager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/villager.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        villagers$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._villagers.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/villager.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PaginatedVillagers, Villager } from '../interfaces/villager';\nimport { DataService } from './api/strapi/data.service';\nimport { ApiService } from './api/api.service';\nimport { FirebaseService } from './api/firebase/firebase.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VillagerService {\n\n  constructor(\n    private dataService: DataService,\n    private fbSvc: FirebaseService,\n    private api: ApiService\n  ) { }\n\n  private _villagers: BehaviorSubject = new BehaviorSubject([])\n  public villagers$: Observable = this._villagers.asObservable();\n\n  lastVillager: any = null;\n\n  /**\n   *  Retrieves a paginated list of villagers. Adds 25 villagers to the list each time its called.\n   * @returns {Observable} \n   */\n  public getPaginatedVillagers(): Observable {\n    return new Observable(observer => {\n      this.fbSvc.getDocumentsPaginated(\"villagers\", 25, \"name\", this.lastVillager).then(villagersPaginated => {\n        const newVillagers = villagersPaginated.map(doc => {\n          const data = doc.data;\n          if (data && data['name']) {\n            const villager: Villager = {\n              id: doc['id'],\n              attributes: {\n                name: data['name'],\n                image_url: data['image_url'],\n                species: data['species'],\n                personality: data['personality'],\n                gender: data['gender'],\n                birthday_month: data['birthday_month'],\n                birthday_day: parseInt(data['birthday_day']),\n                sign: data['sign'],\n                quote: data['quote'],\n                phrase: data['phrase'],\n                islander: data['islander']\n              }\n              \n            };\n            return villager;\n          } else {\n            return undefined;\n          }\n\n        }).filter((villager): villager is Villager => villager !== undefined);\n        if (newVillagers.length > 0) {\n          this.lastVillager = newVillagers[newVillagers.length - 1].attributes.name;\n        }\n\n        const currentVillagers = this._villagers.value;\n        const updatedVillagers = [...currentVillagers, ...newVillagers];\n\n        this._villagers.next(updatedVillagers);\n        observer.next(updatedVillagers);\n        observer.complete();\n      });\n    });\n  }\n\n  /**\n   * Retrieves a list of villagers filtered by name.\n   * @param name The name of the villager to filter.\n   * @returns {Promise}\n   */\n  public async getFiltered(name: string): Promise {\n    const villagersFiltered = await this.fbSvc.getDocumentsFiltered(\"villagers\", \"name\", name, true);\n    const villagers: Villager[] = [];\n\n    villagersFiltered.forEach(doc => {\n      const data = doc.data;\n      const villager: Villager = {\n        id: doc['id'],\n        attributes: {\n          name: data['name'],\n          image_url: data['image_url'],\n          species: data['species'],\n          personality: data['personality'],\n          gender: data['gender'],\n          birthday_month: data['birthday_month'],\n          birthday_day: parseInt(data['birthday_day']),\n          sign: data['sign'],\n          quote: data['quote'],\n          phrase: data['phrase'],\n          islander: data['islander']\n        }\n      };\n      villagers.push(villager);\n    });\n\n    return villagers;\n  }\n\n  /**\n   * Retrieves a villager by name.\n   * @param name The name of the villager to retrieve.\n   * @returns {Promise} \n   */\n  public async getVillagerByName(name: string): Promise {\n    const docs = await this.fbSvc.getDocumentsBy(\"villagers\", \"name\", name);\n    if (docs.length > 0) {\n      const data = docs[0].data;\n      return {\n        id: docs[0].id,\n        attributes: {\n          name: data['name'],\n          image_url: data['image_url'],\n          species: data['species'],\n          personality: data['personality'],\n          gender: data['gender'],\n          birthday_month: data['birthday_month'],\n          birthday_day: parseInt(data['birthday_day']),\n          sign: data['sign'],\n          quote: data['quote'],\n          phrase: data['phrase'],\n          islander: data['islander']\n        }\n      };\n    } else {\n      return undefined;\n    }\n  }\n\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VillagersPage.html":{"url":"components/VillagersPage.html","title":"component - VillagersPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VillagersPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/villagers/villagers.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-villagers\n            \n\n\n\n            \n                styleUrls\n                ./villagers.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./villagers.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                    Public\n                                modal\n                            \n                            \n                                villagers\n                            \n                            \n                                    Public\n                                villagerService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doInfinite\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(villagerService: VillagerService, modal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/villagers/villagers.page.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        villagerService\n                                                  \n                                                        \n                                                                        VillagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        doInfinite\n                        \n                    \n                \n            \n            \n                \ndoInfinite(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/villagers/villagers.page.ts:36\n                        \n                    \n\n\n            \n                \n                        Load more villagers on infinite scroll event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Event object from the infinite scroll.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/villagers/villagers.page.ts:29\n                        \n                    \n\n\n            \n                \n                        Initialize component by fetching initial list of villagers.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Item[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/villagers/villagers.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModalController\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/villagers/villagers.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        villagers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[] | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/villagers/villagers.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        villagerService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VillagerService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/villagers/villagers.page.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { OverlayPanel } from 'primeng/overlaypanel';\nimport { BehaviorSubject } from 'rxjs';\nimport { Pagination } from 'src/app/core/interfaces/data';\nimport { Villager } from 'src/app/core/interfaces/villager';\nimport { VillagerService } from 'src/app/core/services/villager.service';\n\ninterface Item {\n  label: string;\n  index: number;\n}\n\n@Component({\n  selector: 'app-villagers',\n  templateUrl: './villagers.page.html',\n  styleUrls: ['./villagers.page.scss'],\n})\nexport class VillagersPage implements OnInit {\n  items: Item[] = [];\n  villagers: any[] | undefined;\n  constructor(\n    public villagerService: VillagerService,\n    public modal: ModalController\n  ) { }\n  /**\n   * Initialize component by fetching initial list of villagers.\n   */\n  ngOnInit(): void {\n    this.villagerService.getPaginatedVillagers().subscribe()\n}\n  /**\n   * Load more villagers on infinite scroll event.\n   * @param event Event object from the infinite scroll.\n   */\n  doInfinite(event: any) {\n    this.villagerService.getPaginatedVillagers().subscribe(() => {\n      event.target.complete();\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n    \n  \n\n  \n    \n    \n  \n\n    \n\n    \n                \n                    ./villagers.page.scss\n                \n                .villagers {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    gap:1rem;\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AdminPage', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IslandComponent', 'selector': 'app-island'},{'name': 'IslandFormComponent', 'selector': 'app-island-form'},{'name': 'LoanComponent', 'selector': 'app-loan'},{'name': 'LoanFormComponent', 'selector': 'app-loan-form'},{'name': 'LoanItemComponent', 'selector': 'app-loan-item'},{'name': 'LoansPage', 'selector': 'app-loans'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserFormComponent', 'selector': 'app-user-form'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'VillagerComponent', 'selector': 'app-villager'},{'name': 'VillagerItemComponent', 'selector': 'app-villager-item'},{'name': 'VillagerSelectableComponent', 'selector': 'app-villager-selectable'},{'name': 'VillagersPage', 'selector': 'app-villagers'}];\n    var DIRECTIVES = [{'name': 'BackgroundBlurDirective', 'selector': '[appBackgroundBlur]'},{'name': 'ProgressDirective', 'selector': '[appProgress]'}];\n    var ACTUAL_COMPONENT = {'name': 'VillagersPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VillagersPageModule.html":{"url":"modules/VillagersPageModule.html","title":"module - VillagersPageModule","body":"\n                   \n\n\n\n\n    Modules\n    VillagersPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VillagersPageModule\n\n\n\ncluster_VillagersPageModule_declarations\n\n\n\ncluster_VillagersPageModule_imports\n\n\n\n\nVillagersPage\n\nVillagersPage\n\n\n\nVillagersPageModule\n\nVillagersPageModule\n\nVillagersPageModule -->\n\nVillagersPage->VillagersPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nVillagersPageModule -->\n\nSharedModule->VillagersPageModule\n\n\n\n\n\nVillagersPageRoutingModule\n\nVillagersPageRoutingModule\n\nVillagersPageModule -->\n\nVillagersPageRoutingModule->VillagersPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/villagers/villagers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VillagersPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            VillagersPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { VillagersPageRoutingModule } from './villagers-routing.module';\nimport { VillagersPage } from './villagers.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { VirtualScrollerModule } from 'primeng/virtualscroller';\n\n@NgModule({\n  imports: [\n    VillagersPageRoutingModule,\n    SharedModule,\n    OverlayPanelModule,\n    VirtualScrollerModule\n  ],\n  declarations: [VillagersPage]\n})\nexport class VillagersPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VillagersPageRoutingModule.html":{"url":"modules/VillagersPageRoutingModule.html","title":"module - VillagersPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    VillagersPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/villagers/villagers-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VillagersPage } from './villagers.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VillagersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VillagersPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                capacitor.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            AuthServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            httpProviderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            PaginatedData\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            Pagination\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/island.ts\n            \n            interface\n            Island\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/loan.ts\n            \n            interface\n            Loan\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            Formats\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            Large\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            Medium\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            ProviderMetadata\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            Small\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiArrayResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiExtendedUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiLoginPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiLoginResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiMedia\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiRegisterPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            StrapiUser\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/strapi.ts\n            \n            interface\n            Thumbnail\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-credentials.ts\n            \n            interface\n            UserCredentials\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-register-info.ts\n            \n            interface\n            UserRegisterInfo\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user.ts\n            \n            interface\n            User\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/villager.ts\n            \n            interface\n            Villager\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/services/api/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/api/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/api/firebase/firebase-auth.service.ts\n            \n            injectable\n            FirebaseAuthService\n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                src/app/core/services/api/firebase/firebase-data.service.ts\n            \n            class\n            FirebaseDataService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/api/firebase/firebase.service.ts\n            \n            injectable\n            FirebaseService\n            \n                70 %\n                (22/31)\n            \n        \n        \n            \n                \n                src/app/core/services/api/firebase/firebase.service.ts\n            \n            interface\n            FirebaseDocument\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/services/api/firebase/firebase.service.ts\n            \n            interface\n            FirebaseStorageFile\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/services/api/firebase/firebase.service.ts\n            \n            interface\n            FirebaseUserCredential\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/services/api/strapi/auth-strapi.service.ts\n            \n            injectable\n            AuthStrapiService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/api/strapi/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/api/strapi/data.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/api/strapi/jwt.service.ts\n            \n            injectable\n            JwtService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/api/strapi/strapi-data.service.ts\n            \n            class\n            StrapiDataService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/custom-translate.service.ts\n            \n            injectable\n            CustomTranslateService\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/core/services/custom-translate.service.ts\n            \n            function\n            createTranslateLoader\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/services/http/http-client-web.provider.ts\n            \n            class\n            HttpClientWebProvider\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/core/services/http/http-client.provider copy.ts\n            \n            injectable\n            HttpClientProvider\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/core/services/island.service.ts\n            \n            injectable\n            IslandService\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/core/services/loan.service.ts\n            \n            injectable\n            LoanService\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                src/app/core/services/villager.service.ts\n            \n            injectable\n            VillagerService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/core/validators/numeric.ts\n            \n            class\n            numericValidator\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/password.ts\n            \n            class\n            PasswordValidation\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/admin/admin.page.ts\n            \n            component\n            AdminPage\n            \n                53 %\n                (8/15)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                52 %\n                (10/19)\n            \n        \n        \n            \n                \n                src/app/pages/loans/loans.page.ts\n            \n            component\n            LoansPage\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/pages/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pages/profile/profile.page.ts\n            \n            component\n            ProfilePage\n            \n                38 %\n                (8/21)\n            \n        \n        \n            \n                \n                src/app/pages/register/register.page.ts\n            \n            component\n            RegisterPage\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pages/villagers/villagers.page.ts\n            \n            component\n            VillagersPage\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/pages/villagers/villagers.page.ts\n            \n            interface\n            Item\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/components/island-form/island-form.component.ts\n            \n            component\n            IslandFormComponent\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/shared/components/island/island.component.ts\n            \n            component\n            IslandComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/shared/components/loan-form/loan-form.component.ts\n            \n            component\n            LoanFormComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/shared/components/loan-item/loan-item.component.ts\n            \n            component\n            LoanItemComponent\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/shared/components/loan/loan.component.ts\n            \n            component\n            LoanComponent\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/shared/components/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            component\n            PictureSelectableComponent\n            \n                58 %\n                (10/17)\n            \n        \n        \n            \n                \n                src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            variable\n            PICTURE_SELECTABLE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/register-form/register-form.component.ts\n            \n            component\n            RegisterFormComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/user-card/user-card.component.ts\n            \n            component\n            UserCardComponent\n            \n                40 %\n                (6/15)\n            \n        \n        \n            \n                \n                src/app/shared/components/user-card/user-card.component.ts\n            \n            interface\n            ButtonConfig\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/shared/components/user-form/user-form.component.ts\n            \n            component\n            UserFormComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/shared/components/user-list/user-list.component.ts\n            \n            component\n            UserListComponent\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/shared/components/villager-item/villager-item.component.ts\n            \n            component\n            VillagerItemComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/villager-selectable/villager-selectable.component.ts\n            \n            component\n            VillagerSelectableComponent\n            \n                54 %\n                (13/24)\n            \n        \n        \n            \n                \n                src/app/shared/components/villager-selectable/villager-selectable.component.ts\n            \n            variable\n            VILLAGER_SELECTABLE_VALUE_ACCESOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/villager/villager.component.ts\n            \n            component\n            VillagerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/directives/background-blur.directive.ts\n            \n            directive\n            BackgroundBlurDirective\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/shared/directives/progress.directive.ts\n            \n            directive\n            ProgressDirective\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/latest-three.pipe.ts\n            \n            pipe\n            LatestThreePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/loan-completed.pipe.ts\n            \n            pipe\n            LoanCompletedPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.0.0\n        \n            @angular/common : ^16.0.0\n        \n            @angular/compiler : ^16.0.0\n        \n            @angular/core : ^16.0.0\n        \n            @angular/forms : ^16.0.0\n        \n            @angular/platform-browser : ^16.0.0\n        \n            @angular/platform-browser-dynamic : ^16.0.0\n        \n            @angular/router : ^16.0.0\n        \n            @capacitor/android : 5.5.1\n        \n            @capacitor/app : 5.0.6\n        \n            @capacitor/core : 5.6.0\n        \n            @capacitor/geolocation : ^5.0.7\n        \n            @capacitor/haptics : 5.0.6\n        \n            @capacitor/keyboard : 5.0.6\n        \n            @capacitor/preferences : ^5.0.6\n        \n            @capacitor/status-bar : 5.0.6\n        \n            @ionic/angular : ^7.0.0\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            firebase : ^10.7.2\n        \n            ionicons : ^7.0.0\n        \n            ng-otp-input : ^1.9.3\n        \n            primeflex : ^3.3.1\n        \n            primeicons : ^7.0.0\n        \n            primeng : ^16.3.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../custom-translate.service.ts)\n                        \n                        \n                            httpProviderFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthServiceFactory\n                        \n                    \n                \n            \n            \n                \nAuthServiceFactory(backend: string, jwt: JwtService, api: ApiService, firebase: FirebaseService, messageService: MessageService, translate: TranslateService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                backend\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                jwt\n                                            \n                                                            JwtService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                api\n                                            \n                                                            ApiService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firebase\n                                            \n                                                            FirebaseService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                messageService\n                                            \n                                                        MessageService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                translate\n                                            \n                                                        TranslateService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpProviderFactory\n                        \n                    \n                \n            \n            \n                \nhttpProviderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/services/custom-translate.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTranslateLoader\n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n                        Function to create a TranslateHttpLoader instance for ngx-translate.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The HttpClient instance to use for loading translation files.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nACNH Progress Tracker\nDescripción del Proyecto\nEste proyecto es para la asignatura de Acceso a Datos del segundo curso en Desarrollo de Aplicaciones Multiplataforma. El objetivo principal es desarrollar un seguidor de progreso para el juego 'Animal Crossing: New Horizons'. Este seguidor permite a los jugadores controlar sus actividades en el juego, incluyendo la gestión de personajes, la isla y las deudas.\nFuncionalidades Clave\n\nInformación de Personajes: Registro y seguimiento de los personajes no jugables (NPCs) y eventos especiales.\nGestión de la Isla: Herramientas para planificar y gestionar el desarrollo de la isla.\nGestión de Deudas: Control y seguimiento de deudas en el juego.\nServicio de Traducción, Directivas, Pipes: Funcionalidades para mejorar la experiencia de usuario con traducciones y formatos de datos.\n\nConsumo de Datos de la API REST\nEste proyecto consume datos de Nookipedia, una API REST que proporciona información detallada sobre 'Animal Crossing: New Horizons'. \nTecnologías Utilizadas\nFront-end\nTypescript: Lenguaje de programación principal.\nIonic: Framework para el desarrollo de la interfaz de usuario.\nCapacitor: Usado para integrar funcionalidades nativas, compilación en android y plugins.\nAngular: Framework para construir la arquitectura de la aplicación.\nHTML/CSS: Para estructurar y estilizar la interfaz de usuario.\nBack-end\nBase de datos en firebase\nEnlace a la página\nhttps://nooks-toolbox-fb.netlify.app\nVideo de demostración\nhttps://www.youtube.com/watch?v=edoRc8ragEo\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AboutPageRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoansPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoansPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VillagersPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VillagersPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/numericValidator.html":{"url":"classes/numericValidator.html","title":"class - numericValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  numericValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/numeric.ts\n        \n\n\n            \n                Description\n            \n            \n                Returns a validator function that validates numeric input.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                numericProto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        numericProto\n                        \n                    \n                \n            \n            \n                \n                        \n                    numericProto(formControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/numeric.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                formControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, FormControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\n/**\n   * Returns a validator function that validates numeric input.\n   * @param formControlName Optional name of the form control if control is not instance of FormControl.\n   * @returns Validator function for numeric validation.\n   */\nexport class numericValidator{\n    public static numericProto(formControlName:string=''): ValidatorFn{\n        return (control: AbstractControl): ValidationErrors | null => {\n            let value = '';\n            if(control instanceof FormControl)\n                value = control?.value;\n            else\n                value = control.get(formControlName)?.value;\n            let errors = control?.errors;\n            if (value === null || value === '') {\n                return errors; \n                \n            }\n            const regex = /^[-+]?[0-9]*\\.?[0-9]{0,2}$/;\n            const valid = regex.test(value);\n            return valid ? null : { 'numeric': true };\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\ncluster_AdminPageModule\n\n\n\ncluster_AdminPageModule_declarations\n\n\n\ncluster_AdminPageModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_LoansPageModule\n\n\n\ncluster_LoansPageModule_declarations\n\n\n\ncluster_LoansPageModule_imports\n\n\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_VillagersPageModule\n\n\n\ncluster_VillagersPageModule_declarations\n\n\n\ncluster_VillagersPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAboutPageModule -->\n\nSharedModule->AboutPageModule\n\n\n\nAboutPageRoutingModule -->\n\nSharedModule->AboutPageRoutingModule\n\n\n\n\n\nAdminPageModule\n\nAdminPageModule\n\nAdminPageModule -->\n\nSharedModule->AdminPageModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nSharedModule->AppRoutingModule\n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageRoutingModule -->\n\nSharedModule->HomePageRoutingModule\n\n\n\n\n\nLoansPageModule\n\nLoansPageModule\n\nLoansPageModule -->\n\nSharedModule->LoansPageModule\n\n\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nSharedModule->LoginPageModule\n\n\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nSharedModule->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule -->\n\nSharedModule->ProfilePageRoutingModule\n\n\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nSharedModule->RegisterPageModule\n\n\n\n\n\nBackgroundBlurDirective \n\nBackgroundBlurDirective \n\nBackgroundBlurDirective  -->\n\nSharedModule->BackgroundBlurDirective \n\n\n\n\n\nIslandComponent \n\nIslandComponent \n\nIslandComponent  -->\n\nSharedModule->IslandComponent \n\n\n\n\n\nIslandFormComponent \n\nIslandFormComponent \n\nIslandFormComponent  -->\n\nSharedModule->IslandFormComponent \n\n\n\n\n\nLatestThreePipe \n\nLatestThreePipe \n\nLatestThreePipe  -->\n\nSharedModule->LatestThreePipe \n\n\n\n\n\nLoanCompletedPipe \n\nLoanCompletedPipe \n\nLoanCompletedPipe  -->\n\nSharedModule->LoanCompletedPipe \n\n\n\n\n\nLoanComponent \n\nLoanComponent \n\nLoanComponent  -->\n\nSharedModule->LoanComponent \n\n\n\n\n\nLoanFormComponent \n\nLoanFormComponent \n\nLoanFormComponent  -->\n\nSharedModule->LoanFormComponent \n\n\n\n\n\nLoanItemComponent \n\nLoanItemComponent \n\nLoanItemComponent  -->\n\nSharedModule->LoanItemComponent \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nSharedModule->LoginFormComponent \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nProgressDirective \n\nProgressDirective \n\nProgressDirective  -->\n\nSharedModule->ProgressDirective \n\n\n\n\n\nRegisterFormComponent \n\nRegisterFormComponent \n\nRegisterFormComponent  -->\n\nSharedModule->RegisterFormComponent \n\n\n\n\n\nUserCardComponent \n\nUserCardComponent \n\nUserCardComponent  -->\n\nSharedModule->UserCardComponent \n\n\n\n\n\nUserFormComponent \n\nUserFormComponent \n\nUserFormComponent  -->\n\nSharedModule->UserFormComponent \n\n\n\n\n\nUserListComponent \n\nUserListComponent \n\nUserListComponent  -->\n\nSharedModule->UserListComponent \n\n\n\n\n\nVillagerComponent \n\nVillagerComponent \n\nVillagerComponent  -->\n\nSharedModule->VillagerComponent \n\n\n\n\n\nVillagerItemComponent \n\nVillagerItemComponent \n\nVillagerItemComponent  -->\n\nSharedModule->VillagerItemComponent \n\n\n\n\n\nVillagerSelectableComponent \n\nVillagerSelectableComponent \n\nVillagerSelectableComponent  -->\n\nSharedModule->VillagerSelectableComponent \n\n\n\n\n\nVillagersPageModule\n\nVillagersPageModule\n\nVillagersPageModule -->\n\nSharedModule->VillagersPageModule\n\n\n\n\n\nAdminPage\n\nAdminPage\n\nAdminPageModule -->\n\nAdminPage->AdminPageModule\n\n\n\n\n\nAdminPageRoutingModule\n\nAdminPageRoutingModule\n\nAdminPageModule -->\n\nAdminPageRoutingModule->AdminPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nLoansPage\n\nLoansPage\n\nLoansPageModule -->\n\nLoansPage->LoansPageModule\n\n\n\n\n\nLoansPageRoutingModule\n\nLoansPageRoutingModule\n\nLoansPageModule -->\n\nLoansPageRoutingModule->LoansPageModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\nBackgroundBlurDirective\n\nBackgroundBlurDirective\n\nSharedModule -->\n\nBackgroundBlurDirective->SharedModule\n\n\n\n\n\nIslandComponent\n\nIslandComponent\n\nSharedModule -->\n\nIslandComponent->SharedModule\n\n\n\n\n\nIslandFormComponent\n\nIslandFormComponent\n\nSharedModule -->\n\nIslandFormComponent->SharedModule\n\n\n\n\n\nLatestThreePipe\n\nLatestThreePipe\n\nSharedModule -->\n\nLatestThreePipe->SharedModule\n\n\n\nSharedModule -->\n\nLatestThreePipe->SharedModule\n\n\n\n\n\nLoanCompletedPipe\n\nLoanCompletedPipe\n\nSharedModule -->\n\nLoanCompletedPipe->SharedModule\n\n\n\nSharedModule -->\n\nLoanCompletedPipe->SharedModule\n\n\n\n\n\nLoanComponent\n\nLoanComponent\n\nSharedModule -->\n\nLoanComponent->SharedModule\n\n\n\n\n\nLoanFormComponent\n\nLoanFormComponent\n\nSharedModule -->\n\nLoanFormComponent->SharedModule\n\n\n\n\n\nLoanItemComponent\n\nLoanItemComponent\n\nSharedModule -->\n\nLoanItemComponent->SharedModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nSharedModule -->\n\nLoginFormComponent->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nProgressDirective\n\nProgressDirective\n\nSharedModule -->\n\nProgressDirective->SharedModule\n\n\n\nSharedModule -->\n\nProgressDirective->SharedModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nSharedModule -->\n\nRegisterFormComponent->SharedModule\n\n\n\n\n\nUserCardComponent\n\nUserCardComponent\n\nSharedModule -->\n\nUserCardComponent->SharedModule\n\n\n\n\n\nUserFormComponent\n\nUserFormComponent\n\nSharedModule -->\n\nUserFormComponent->SharedModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nSharedModule -->\n\nUserListComponent->SharedModule\n\n\n\n\n\nVillagerComponent\n\nVillagerComponent\n\nSharedModule -->\n\nVillagerComponent->SharedModule\n\n\n\n\n\nVillagerItemComponent\n\nVillagerItemComponent\n\nSharedModule -->\n\nVillagerItemComponent->SharedModule\n\n\n\n\n\nVillagerSelectableComponent\n\nVillagerSelectableComponent\n\nSharedModule -->\n\nVillagerSelectableComponent->SharedModule\n\n\n\n\n\nVillagersPage\n\nVillagersPage\n\nVillagersPageModule -->\n\nVillagersPage->VillagersPageModule\n\n\n\n\n\nVillagersPageRoutingModule\n\nVillagersPageRoutingModule\n\nVillagersPageModule -->\n\nVillagersPageRoutingModule->VillagersPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        19 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    28 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        26 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            JwtToken   (src/.../jwt.service.ts)\n                        \n                        \n                            PaginatedVillagers   (src/.../villager.ts)\n                        \n                        \n                            StrapiMe   (src/.../strapi.ts)\n                        \n                        \n                            StrapiRegisterResponse   (src/.../strapi.ts)\n                        \n                        \n                            StrapiUploadResponse   (src/.../strapi.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/api/strapi/jwt.service.ts\n    \n    \n        \n            \n                \n                    \n                    JwtToken\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    src/app/core/interfaces/villager.ts\n    \n    \n        \n            \n                \n                    \n                    PaginatedVillagers\n                \n            \n            \n                \n                        PaginatedData\n\n                \n            \n        \n    \n    src/app/core/interfaces/strapi.ts\n    \n    \n        \n            \n                \n                    \n                    StrapiMe\n                \n            \n            \n                \n                            StrapiUser\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StrapiRegisterResponse\n                \n            \n            \n                \n                            StrapiLoginResponse\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StrapiUploadResponse\n                \n            \n            \n                \n                            StrapiMedia[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (capacitor.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            PICTURE_SELECTABLE_VALUE_ACCESSOR   (src/.../picture-selectable.component.ts)\n                        \n                        \n                            VILLAGER_SELECTABLE_VALUE_ACCESOR   (src/.../villager-selectable.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    capacitor.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CapacitorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  appId: 'io.ionic.starter',\n  appName: 'nooks-toolbox',\n  webDir: 'www',\n  server: {\n    androidScheme: 'https'\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: 'https://nookstoolbox-service.onrender.com/api',\n  firebase: {\n    apiKey: \"AIzaSyDTI8eDC1UV0-1KPuXzqcAJaD2w6nRSP5o\",\n    authDomain: \"nooks-toolbox.firebaseapp.com\",\n    projectId: \"nooks-toolbox\",\n    storageBucket: \"nooks-toolbox.appspot.com\",\n    messagingSenderId: \"1052521570202\",\n    appId: \"1:1052521570202:web:59aaf107a3683ec6cda423\",\n    measurementId: \"G-DRPPYSKFQR\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'https://nookstoolbox-service.onrender.com/api',\n  /*firebase: {\n    apiKey: \"AIzaSyDtQJjhgAe5yV_0dMQwU7CE5JhXhDDytOU\",\n    authDomain: \"prueba-consultas-81849.firebaseapp.com\",\n    projectId: \"prueba-consultas-81849\",\n    storageBucket: \"prueba-consultas-81849.appspot.com\",\n    messagingSenderId: \"287262785152\",\n    appId: \"1:287262785152:web:ee03d84a9aaf81eeb57065\",\n    measurementId: \"G-LXDBTCQWG9\"\n  }*/\n  firebase: {\n    apiKey: \"AIzaSyDTI8eDC1UV0-1KPuXzqcAJaD2w6nRSP5o\",\n    authDomain: \"nooks-toolbox.firebaseapp.com\",\n    projectId: \"nooks-toolbox\",\n    storageBucket: \"nooks-toolbox.appspot.com\",\n    messagingSenderId: \"1052521570202\",\n    appId: \"1:1052521570202:web:59aaf107a3683ec6cda423\",\n    measurementId: \"G-DRPPYSKFQR\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PICTURE_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/components/villager-selectable/villager-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        VILLAGER_SELECTABLE_VALUE_ACCESOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => VillagerSelectableComponent),\n  multi: true\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
